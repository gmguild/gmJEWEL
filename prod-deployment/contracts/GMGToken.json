{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DELEGATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "fromBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getCurrentVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/lukeramsden/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/GSN/Context.sol",
    "1": "/Users/lukeramsden/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/access/Ownable.sol",
    "2": "/Users/lukeramsden/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/math/SafeMath.sol",
    "3": "/Users/lukeramsden/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/ERC20.sol",
    "4": "/Users/lukeramsden/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/IERC20.sol",
    "8": "contracts/GMGToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/GMGToken.sol",
    "exportedSymbols": {
      "GMGToken": [
        2626
      ]
    },
    "id": 2627,
    "license": "MIT-LICENSE",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2003,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:8"
      },
      {
        "absolutePath": "/Users/lukeramsden/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/ERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/ERC20.sol",
        "id": 2004,
        "nodeType": "ImportDirective",
        "scope": 2627,
        "sourceUnit": 3397,
        "src": "65:83:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/lukeramsden/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/access/Ownable.sol",
        "id": 2005,
        "nodeType": "ImportDirective",
        "scope": 2627,
        "sourceUnit": 1035,
        "src": "149:80:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "477265656479204d65726368616e7473204775696c64",
                "id": 2007,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "258:24:8",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_4d72b1fa636422b520e2b08fe983555798b7bba34678c96ee38a814d74d031ac",
                  "typeString": "literal_string \"Greedy Merchants Guild\""
                },
                "value": "Greedy Merchants Guild"
              },
              {
                "argumentTypes": null,
                "hexValue": "474d47",
                "id": 2008,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "284:5:8",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_f0a22c23901c61e8c3348636eab4dfa74ce31521ccca1d2149c5fc909d661c83",
                  "typeString": "literal_string \"GMG\""
                },
                "value": "GMG"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 2006,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3396,
              "src": "252:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3396",
                "typeString": "contract ERC20"
              }
            },
            "id": 2009,
            "nodeType": "InheritanceSpecifier",
            "src": "252:38:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2010,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1034,
              "src": "292:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1034",
                "typeString": "contract Ownable"
              }
            },
            "id": 2011,
            "nodeType": "InheritanceSpecifier",
            "src": "292:7:8"
          }
        ],
        "contractDependencies": [
          1034,
          1308,
          2649,
          3396
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2626,
        "linearizedBaseContracts": [
          2626,
          1034,
          3396,
          1308,
          2649
        ],
        "name": "GMGToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2036,
              "nodeType": "Block",
              "src": "367:98:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2021,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "383:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2022,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2015,
                        "src": "388:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2020,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3272,
                      "src": "377:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "377:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2024,
                  "nodeType": "ExpressionStatement",
                  "src": "377:19:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "429:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "421:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2026,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "421:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "421:10:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2030,
                          "name": "_delegates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2041,
                          "src": "433:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 2032,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2031,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2013,
                          "src": "444:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "433:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2033,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2015,
                        "src": "450:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2025,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2516,
                      "src": "406:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "406:52:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2035,
                  "nodeType": "ExpressionStatement",
                  "src": "406:52:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "40c10f19",
            "id": 2037,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2018,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2017,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 983,
                  "src": "357:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "357:9:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2037,
                  "src": "320:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2015,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2037,
                  "src": "333:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "333:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "319:30:8"
            },
            "returnParameters": {
              "id": 2019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "367:0:8"
            },
            "scope": 2626,
            "src": "306:159:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2041,
            "mutability": "mutable",
            "name": "_delegates",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2626,
            "src": "471:47:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 2040,
              "keyType": {
                "id": 2038,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "479:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "471:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 2039,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "490:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "GMGToken.Checkpoint",
            "id": 2046,
            "members": [
              {
                "constant": false,
                "id": 2043,
                "mutability": "mutable",
                "name": "fromBlock",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2046,
                "src": "553:16:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 2042,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "553:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2045,
                "mutability": "mutable",
                "name": "votes",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2046,
                "src": "579:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2044,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "579:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Checkpoint",
            "nodeType": "StructDefinition",
            "scope": 2626,
            "src": "525:74:8",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f1127ed8",
            "id": 2052,
            "mutability": "mutable",
            "name": "checkpoints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2626,
            "src": "605:68:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$_$",
              "typeString": "mapping(address => mapping(uint32 => struct GMGToken.Checkpoint))"
            },
            "typeName": {
              "id": 2051,
              "keyType": {
                "id": 2047,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "613:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "605:49:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$_$",
                "typeString": "mapping(address => mapping(uint32 => struct GMGToken.Checkpoint))"
              },
              "valueType": {
                "id": 2050,
                "keyType": {
                  "id": 2048,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "632:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "nodeType": "Mapping",
                "src": "624:29:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$",
                  "typeString": "mapping(uint32 => struct GMGToken.Checkpoint)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 2049,
                  "name": "Checkpoint",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2046,
                  "src": "642:10:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$2046_storage_ptr",
                    "typeString": "struct GMGToken.Checkpoint"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6fcfff45",
            "id": 2056,
            "mutability": "mutable",
            "name": "numCheckpoints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2626,
            "src": "679:48:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
              "typeString": "mapping(address => uint32)"
            },
            "typeName": {
              "id": 2055,
              "keyType": {
                "id": 2053,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "687:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "679:26:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                "typeString": "mapping(address => uint32)"
              },
              "valueType": {
                "id": 2054,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "698:6:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "20606b70",
            "id": 2061,
            "mutability": "constant",
            "name": "DOMAIN_TYPEHASH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2626,
            "src": "733:152:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2057,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "733:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                  "id": 2059,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "806:69:8",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                    "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                  },
                  "value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                    "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                  }
                ],
                "id": 2058,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "783:9:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2060,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "783:102:8",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e7a324dc",
            "id": 2066,
            "mutability": "constant",
            "name": "DELEGATION_TYPEHASH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2626,
            "src": "891:125:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2062,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "891:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
                  "id": 2064,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "955:60:8",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                    "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                  },
                  "value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                    "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                  }
                ],
                "id": 2063,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "945:9:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2065,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "945:71:8",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7ecebe00",
            "id": 2070,
            "mutability": "mutable",
            "name": "nonces",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2626,
            "src": "1022:41:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2069,
              "keyType": {
                "id": 2067,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1030:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1022:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2068,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1041:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2078,
            "name": "DelegateChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2072,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2078,
                  "src": "1101:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2074,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromDelegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2078,
                  "src": "1136:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2076,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "toDelegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2078,
                  "src": "1174:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1091:115:8"
            },
            "src": "1070:137:8"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2086,
            "name": "DelegateVotesChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2080,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "delegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2086,
                  "src": "1249:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2082,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2086,
                  "src": "1283:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2081,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2084,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2086,
                  "src": "1316:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1316:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1239:101:8"
            },
            "src": "1213:128:8"
          },
          {
            "body": {
              "id": 2097,
              "nodeType": "Block",
              "src": "1417:45:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2093,
                      "name": "_delegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2041,
                      "src": "1434:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 2095,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2094,
                      "name": "delegator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2088,
                      "src": "1445:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1434:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2092,
                  "id": 2096,
                  "nodeType": "Return",
                  "src": "1427:28:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "587cde1e",
            "id": 2098,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegates",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2088,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2098,
                  "src": "1366:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1365:19:8"
            },
            "returnParameters": {
              "id": 2092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2091,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2098,
                  "src": "1408:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1407:9:8"
            },
            "scope": 2626,
            "src": "1347:115:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2109,
              "nodeType": "Block",
              "src": "1514:56:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2104,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1541:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1541:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2106,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2100,
                        "src": "1553:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2103,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2409,
                      "src": "1531:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 2107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1531:32:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 2102,
                  "id": 2108,
                  "nodeType": "Return",
                  "src": "1524:39:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5c19a95c",
            "id": 2110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2100,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2110,
                  "src": "1486:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1485:19:8"
            },
            "returnParameters": {
              "id": 2102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1514:0:8"
            },
            "scope": 2626,
            "src": "1468:102:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2211,
              "nodeType": "Block",
              "src": "1743:895:8",
              "statements": [
                {
                  "assignments": [
                    2126
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2126,
                      "mutability": "mutable",
                      "name": "domainSeparator",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2211,
                      "src": "1753:23:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2125,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1753:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2146,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2130,
                            "name": "DOMAIN_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2061,
                            "src": "1830:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 2134,
                                      "name": "name",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2954,
                                      "src": "1879:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                        "typeString": "function () view returns (string memory)"
                                      }
                                    },
                                    "id": 2135,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1879:6:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 2133,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1873:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 2132,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1873:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 2136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1873:13:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 2131,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "1863:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1863:24:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2138,
                              "name": "getChainId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2625,
                              "src": "1905:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                "typeString": "function () pure returns (uint256)"
                              }
                            },
                            "id": 2139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1905:12:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2142,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1943:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GMGToken_$2626",
                                  "typeString": "contract GMGToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GMGToken_$2626",
                                  "typeString": "contract GMGToken"
                                }
                              ],
                              "id": 2141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1935:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2140,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1935:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1935:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2128,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1802:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1802:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1802:160:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2127,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1779:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1779:193:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1753:219:8"
                },
                {
                  "assignments": [
                    2148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2148,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2211,
                      "src": "1983:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2147,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1983:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2158,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2152,
                            "name": "DELEGATION_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2066,
                            "src": "2038:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2153,
                            "name": "delegatee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2112,
                            "src": "2059:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2154,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2114,
                            "src": "2070:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2155,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2116,
                            "src": "2077:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2150,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2027:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2027:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2027:57:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2149,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2004:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2004:90:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1983:111:8"
                },
                {
                  "assignments": [
                    2160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2160,
                      "mutability": "mutable",
                      "name": "digest",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2211,
                      "src": "2105:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2159,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2105:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2169,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "1901",
                            "id": 2164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2162:10:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string \"\u0019\u0001\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "argumentTypes": null,
                            "id": 2165,
                            "name": "domainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2126,
                            "src": "2174:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2166,
                            "name": "structHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2148,
                            "src": "2191:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string \"\u0019\u0001\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2162,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2145:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2145:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2145:57:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2161,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2122:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2122:90:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2105:107:8"
                },
                {
                  "assignments": [
                    2171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2171,
                      "mutability": "mutable",
                      "name": "signatory",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2211,
                      "src": "2223:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2170,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2223:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2178,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2173,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2160,
                        "src": "2253:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2174,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2118,
                        "src": "2261:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2175,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2120,
                        "src": "2264:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2176,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2122,
                        "src": "2267:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2172,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "2243:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 2177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2243:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2223:46:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2180,
                          "name": "signatory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2171,
                          "src": "2300:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2321:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2313:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2181,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2313:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2313:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2300:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "544f4b454e3a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
                        "id": 2186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2337:41:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2f9973ce132477814055362c73020d6d7f3e436991b36e39c11b6a226a2f80b",
                          "typeString": "literal_string \"TOKEN::delegateBySig: invalid signature\""
                        },
                        "value": "TOKEN::delegateBySig: invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2f9973ce132477814055362c73020d6d7f3e436991b36e39c11b6a226a2f80b",
                          "typeString": "literal_string \"TOKEN::delegateBySig: invalid signature\""
                        }
                      ],
                      "id": 2179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2279:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2279:109:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2188,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:109:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2190,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2114,
                          "src": "2419:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2428:19:8",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2191,
                              "name": "nonces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2070,
                              "src": "2428:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2193,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2192,
                              "name": "signatory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2171,
                              "src": "2435:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2428:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2419:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "544f4b454e3a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
                        "id": 2196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2461:37:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc539af24dd68e266af47438aefcb6c429e8601cbf5b26f6b31aa6a63d7e0c0e",
                          "typeString": "literal_string \"TOKEN::delegateBySig: invalid nonce\""
                        },
                        "value": "TOKEN::delegateBySig: invalid nonce"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc539af24dd68e266af47438aefcb6c429e8601cbf5b26f6b31aa6a63d7e0c0e",
                          "typeString": "literal_string \"TOKEN::delegateBySig: invalid nonce\""
                        }
                      ],
                      "id": 2189,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2398:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:110:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2198,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:110:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2200,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "2526:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2201,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2116,
                          "src": "2533:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2526:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "544f4b454e3a3a64656c656761746542795369673a207369676e61747572652065787069726564",
                        "id": 2203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2541:41:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6910d1196a1cc3e085ddf3a2d3276237405c02a99a9c6feb703684ed10a984d3",
                          "typeString": "literal_string \"TOKEN::delegateBySig: signature expired\""
                        },
                        "value": "TOKEN::delegateBySig: signature expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6910d1196a1cc3e085ddf3a2d3276237405c02a99a9c6feb703684ed10a984d3",
                          "typeString": "literal_string \"TOKEN::delegateBySig: signature expired\""
                        }
                      ],
                      "id": 2199,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2518:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2518:65:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2205,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:65:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2207,
                        "name": "signatory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2171,
                        "src": "2610:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2208,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2112,
                        "src": "2621:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2206,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2409,
                      "src": "2600:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 2209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2600:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 2124,
                  "id": 2210,
                  "nodeType": "Return",
                  "src": "2593:38:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c3cda520",
            "id": 2212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateBySig",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2112,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2212,
                  "src": "1608:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1608:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2114,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2212,
                  "src": "1635:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1635:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2116,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2212,
                  "src": "1658:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2118,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2212,
                  "src": "1682:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2117,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1682:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2120,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2212,
                  "src": "1699:9:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2119,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1699:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2122,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2212,
                  "src": "1718:9:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2121,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1718:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1598:135:8"
            },
            "returnParameters": {
              "id": 2124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1743:0:8"
            },
            "scope": 2626,
            "src": "1576:1062:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2239,
              "nodeType": "Block",
              "src": "2718:158:8",
              "statements": [
                {
                  "assignments": [
                    2220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2220,
                      "mutability": "mutable",
                      "name": "nCheckpoints",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2239,
                      "src": "2728:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 2219,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2728:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2224,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2221,
                      "name": "numCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2056,
                      "src": "2750:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                        "typeString": "mapping(address => uint32)"
                      }
                    },
                    "id": 2223,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2222,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2214,
                      "src": "2765:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2750:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2728:45:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 2227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2225,
                        "name": "nCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2220,
                        "src": "2802:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2817:1:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2802:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2868:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 2237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2802:67:8",
                    "trueExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2228,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2052,
                            "src": "2821:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct GMGToken.Checkpoint storage ref))"
                            }
                          },
                          "id": 2230,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2229,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2214,
                            "src": "2833:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2821:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$",
                            "typeString": "mapping(uint32 => struct GMGToken.Checkpoint storage ref)"
                          }
                        },
                        "id": 2234,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 2233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2231,
                            "name": "nCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2220,
                            "src": "2842:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 2232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2857:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2842:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2821:38:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$2046_storage",
                          "typeString": "struct GMGToken.Checkpoint storage ref"
                        }
                      },
                      "id": 2235,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "votes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2045,
                      "src": "2821:44:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2218,
                  "id": 2238,
                  "nodeType": "Return",
                  "src": "2783:86:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b4b5ea57",
            "id": 2240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentVotes",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2214,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2240,
                  "src": "2669:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2669:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2668:17:8"
            },
            "returnParameters": {
              "id": 2218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2217,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2240,
                  "src": "2709:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2709:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2708:9:8"
            },
            "scope": 2626,
            "src": "2644:232:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2370,
              "nodeType": "Block",
              "src": "3003:1134:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2250,
                          "name": "blockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2244,
                          "src": "3034:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2251,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3048:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3048:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3034:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "544f4b454e3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
                        "id": 2254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3074:42:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bef915b0c4bed91a99bb046e257f2c6d48c1ccf9a24c11b9168c979109277454",
                          "typeString": "literal_string \"TOKEN::getPriorVotes: not yet determined\""
                        },
                        "value": "TOKEN::getPriorVotes: not yet determined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bef915b0c4bed91a99bb046e257f2c6d48c1ccf9a24c11b9168c979109277454",
                          "typeString": "literal_string \"TOKEN::getPriorVotes: not yet determined\""
                        }
                      ],
                      "id": 2249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3013:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3013:113:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2256,
                  "nodeType": "ExpressionStatement",
                  "src": "3013:113:8"
                },
                {
                  "assignments": [
                    2258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2258,
                      "mutability": "mutable",
                      "name": "nCheckpoints",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2370,
                      "src": "3137:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 2257,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3137:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2262,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2259,
                      "name": "numCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2056,
                      "src": "3159:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                        "typeString": "mapping(address => uint32)"
                      }
                    },
                    "id": 2261,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2260,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2242,
                      "src": "3174:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3159:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3137:45:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 2265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2263,
                      "name": "nCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2258,
                      "src": "3196:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3212:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3196:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2269,
                  "nodeType": "IfStatement",
                  "src": "3192:56:8",
                  "trueBody": {
                    "id": 2268,
                    "nodeType": "Block",
                    "src": "3215:33:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3236:1:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2248,
                        "id": 2267,
                        "nodeType": "Return",
                        "src": "3229:8:8"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2270,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2052,
                            "src": "3305:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct GMGToken.Checkpoint storage ref))"
                            }
                          },
                          "id": 2272,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2271,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2242,
                            "src": "3317:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3305:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$",
                            "typeString": "mapping(uint32 => struct GMGToken.Checkpoint storage ref)"
                          }
                        },
                        "id": 2276,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 2275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2273,
                            "name": "nCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2258,
                            "src": "3326:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 2274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3341:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3326:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3305:38:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$2046_storage",
                          "typeString": "struct GMGToken.Checkpoint storage ref"
                        }
                      },
                      "id": 2277,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2043,
                      "src": "3305:48:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2278,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2244,
                      "src": "3357:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3305:63:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2290,
                  "nodeType": "IfStatement",
                  "src": "3301:145:8",
                  "trueBody": {
                    "id": 2289,
                    "nodeType": "Block",
                    "src": "3370:76:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2280,
                                "name": "checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2052,
                                "src": "3391:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint32 => struct GMGToken.Checkpoint storage ref))"
                                }
                              },
                              "id": 2282,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2281,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2242,
                                "src": "3403:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3391:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$",
                                "typeString": "mapping(uint32 => struct GMGToken.Checkpoint storage ref)"
                              }
                            },
                            "id": 2286,
                            "indexExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 2285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2283,
                                "name": "nCheckpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2258,
                                "src": "3412:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 2284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3427:1:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3412:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3391:38:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$2046_storage",
                              "typeString": "struct GMGToken.Checkpoint storage ref"
                            }
                          },
                          "id": 2287,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "votes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2045,
                          "src": "3391:44:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2248,
                        "id": 2288,
                        "nodeType": "Return",
                        "src": "3384:51:8"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2291,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2052,
                            "src": "3504:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct GMGToken.Checkpoint storage ref))"
                            }
                          },
                          "id": 2293,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2292,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2242,
                            "src": "3516:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3504:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$",
                            "typeString": "mapping(uint32 => struct GMGToken.Checkpoint storage ref)"
                          }
                        },
                        "id": 2295,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3525:1:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3504:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$2046_storage",
                          "typeString": "struct GMGToken.Checkpoint storage ref"
                        }
                      },
                      "id": 2296,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2043,
                      "src": "3504:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2297,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2244,
                      "src": "3540:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3504:47:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2302,
                  "nodeType": "IfStatement",
                  "src": "3500:86:8",
                  "trueBody": {
                    "id": 2301,
                    "nodeType": "Block",
                    "src": "3553:33:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3574:1:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2248,
                        "id": 2300,
                        "nodeType": "Return",
                        "src": "3567:8:8"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2304,
                      "mutability": "mutable",
                      "name": "lower",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2370,
                      "src": "3596:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 2303,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3596:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2306,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 2305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3611:1:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3596:16:8"
                },
                {
                  "assignments": [
                    2308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2308,
                      "mutability": "mutable",
                      "name": "upper",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2370,
                      "src": "3622:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 2307,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3622:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2312,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 2311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2309,
                      "name": "nCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2258,
                      "src": "3637:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3652:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3637:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3622:31:8"
                },
                {
                  "body": {
                    "id": 2361,
                    "nodeType": "Block",
                    "src": "3685:396:8",
                    "statements": [
                      {
                        "assignments": [
                          2317
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2317,
                            "mutability": "mutable",
                            "name": "center",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2361,
                            "src": "3699:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 2316,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3699:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2326,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 2325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2318,
                            "name": "upper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2308,
                            "src": "3715:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 2324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 2321,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 2319,
                                    "name": "upper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2308,
                                    "src": "3724:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 2320,
                                    "name": "lower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2304,
                                    "src": "3732:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "3724:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "id": 2322,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3723:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 2323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3741:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "3723:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "3715:27:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3699:43:8"
                      },
                      {
                        "assignments": [
                          2328
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2328,
                            "mutability": "mutable",
                            "name": "cp",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2361,
                            "src": "3783:20:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$2046_memory_ptr",
                              "typeString": "struct GMGToken.Checkpoint"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 2327,
                              "name": "Checkpoint",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2046,
                              "src": "3783:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$2046_storage_ptr",
                                "typeString": "struct GMGToken.Checkpoint"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2334,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2329,
                              "name": "checkpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2052,
                              "src": "3806:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$_$",
                                "typeString": "mapping(address => mapping(uint32 => struct GMGToken.Checkpoint storage ref))"
                              }
                            },
                            "id": 2331,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2330,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2242,
                              "src": "3818:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3806:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$",
                              "typeString": "mapping(uint32 => struct GMGToken.Checkpoint storage ref)"
                            }
                          },
                          "id": 2333,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2332,
                            "name": "center",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2317,
                            "src": "3827:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3806:28:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$2046_storage",
                            "typeString": "struct GMGToken.Checkpoint storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3783:51:8"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2335,
                              "name": "cp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2328,
                              "src": "3852:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$2046_memory_ptr",
                                "typeString": "struct GMGToken.Checkpoint memory"
                              }
                            },
                            "id": 2336,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fromBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2043,
                            "src": "3852:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2337,
                            "name": "blockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2244,
                            "src": "3868:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3852:27:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2343,
                                "name": "cp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2328,
                                "src": "3939:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Checkpoint_$2046_memory_ptr",
                                  "typeString": "struct GMGToken.Checkpoint memory"
                                }
                              },
                              "id": 2344,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fromBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2043,
                              "src": "3939:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 2345,
                              "name": "blockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2244,
                              "src": "3954:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3939:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 2358,
                            "nodeType": "Block",
                            "src": "4020:51:8",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2356,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "argumentTypes": null,
                                    "id": 2352,
                                    "name": "upper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2308,
                                    "src": "4038:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    "id": 2355,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 2353,
                                      "name": "center",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2317,
                                      "src": "4046:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 2354,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4055:1:8",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "4046:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "4038:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "id": 2357,
                                "nodeType": "ExpressionStatement",
                                "src": "4038:18:8"
                              }
                            ]
                          },
                          "id": 2359,
                          "nodeType": "IfStatement",
                          "src": "3935:136:8",
                          "trueBody": {
                            "id": 2351,
                            "nodeType": "Block",
                            "src": "3967:47:8",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2349,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "argumentTypes": null,
                                    "id": 2347,
                                    "name": "lower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2304,
                                    "src": "3985:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "argumentTypes": null,
                                    "id": 2348,
                                    "name": "center",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2317,
                                    "src": "3993:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "3985:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "id": 2350,
                                "nodeType": "ExpressionStatement",
                                "src": "3985:14:8"
                              }
                            ]
                          }
                        },
                        "id": 2360,
                        "nodeType": "IfStatement",
                        "src": "3848:223:8",
                        "trueBody": {
                          "id": 2342,
                          "nodeType": "Block",
                          "src": "3881:48:8",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2339,
                                  "name": "cp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2328,
                                  "src": "3906:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Checkpoint_$2046_memory_ptr",
                                    "typeString": "struct GMGToken.Checkpoint memory"
                                  }
                                },
                                "id": 2340,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2045,
                                "src": "3906:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 2248,
                              "id": 2341,
                              "nodeType": "Return",
                              "src": "3899:15:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 2315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2313,
                      "name": "upper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2308,
                      "src": "3670:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2314,
                      "name": "lower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2304,
                      "src": "3678:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3670:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2362,
                  "nodeType": "WhileStatement",
                  "src": "3663:418:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2363,
                          "name": "checkpoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2052,
                          "src": "4097:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$_$",
                            "typeString": "mapping(address => mapping(uint32 => struct GMGToken.Checkpoint storage ref))"
                          }
                        },
                        "id": 2365,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2364,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2242,
                          "src": "4109:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4097:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$",
                          "typeString": "mapping(uint32 => struct GMGToken.Checkpoint storage ref)"
                        }
                      },
                      "id": 2367,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2366,
                        "name": "lower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2304,
                        "src": "4118:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4097:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Checkpoint_$2046_storage",
                        "typeString": "struct GMGToken.Checkpoint storage ref"
                      }
                    },
                    "id": 2368,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "votes",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2045,
                    "src": "4097:33:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2248,
                  "id": 2369,
                  "nodeType": "Return",
                  "src": "4090:40:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "782d6fe1",
            "id": 2371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorVotes",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2242,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2371,
                  "src": "2905:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2244,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2371,
                  "src": "2922:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2922:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2904:38:8"
            },
            "returnParameters": {
              "id": 2248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2247,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2371,
                  "src": "2990:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2990:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2989:9:8"
            },
            "scope": 2626,
            "src": "2882:1255:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2408,
              "nodeType": "Block",
              "src": "4209:351:8",
              "statements": [
                {
                  "assignments": [
                    2379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2379,
                      "mutability": "mutable",
                      "name": "currentDelegate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2408,
                      "src": "4219:23:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2378,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4219:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2383,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2380,
                      "name": "_delegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2041,
                      "src": "4245:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 2382,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2381,
                      "name": "delegator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2373,
                      "src": "4256:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4245:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4219:47:8"
                },
                {
                  "assignments": [
                    2385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2385,
                      "mutability": "mutable",
                      "name": "delegatorBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2408,
                      "src": "4276:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2384,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4276:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2389,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2387,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2373,
                        "src": "4313:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2386,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2996,
                      "src": "4303:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 2388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4303:20:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4276:47:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2390,
                        "name": "_delegates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2041,
                        "src": "4379:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2392,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2391,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2373,
                        "src": "4390:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4379:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2393,
                      "name": "delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2375,
                      "src": "4403:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4379:33:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2395,
                  "nodeType": "ExpressionStatement",
                  "src": "4379:33:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2397,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2373,
                        "src": "4444:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2398,
                        "name": "currentDelegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2379,
                        "src": "4455:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2399,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2375,
                        "src": "4472:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2396,
                      "name": "DelegateChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2078,
                      "src": "4428:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 2400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4428:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2401,
                  "nodeType": "EmitStatement",
                  "src": "4423:59:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2403,
                        "name": "currentDelegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2379,
                        "src": "4508:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2404,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2375,
                        "src": "4525:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2405,
                        "name": "delegatorBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2385,
                        "src": "4536:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2402,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2516,
                      "src": "4493:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4493:60:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2407,
                  "nodeType": "ExpressionStatement",
                  "src": "4493:60:8"
                }
              ]
            },
            "documentation": null,
            "id": 2409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_delegate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2373,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2409,
                  "src": "4162:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4162:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2375,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2409,
                  "src": "4181:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4181:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4161:38:8"
            },
            "returnParameters": {
              "id": 2377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4209:0:8"
            },
            "scope": 2626,
            "src": "4143:417:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2515,
              "nodeType": "Block",
              "src": "4677:928:8",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2418,
                        "name": "srcRep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2411,
                        "src": "4691:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2419,
                        "name": "dstRep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2413,
                        "src": "4701:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4691:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2421,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2415,
                        "src": "4711:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4720:1:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4711:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4691:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2514,
                  "nodeType": "IfStatement",
                  "src": "4687:912:8",
                  "trueBody": {
                    "id": 2513,
                    "nodeType": "Block",
                    "src": "4723:876:8",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2425,
                            "name": "srcRep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2411,
                            "src": "4741:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4759:1:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4751:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2426,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4751:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4751:10:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "4741:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2468,
                        "nodeType": "IfStatement",
                        "src": "4737:419:8",
                        "trueBody": {
                          "id": 2467,
                          "nodeType": "Block",
                          "src": "4763:393:8",
                          "statements": [
                            {
                              "assignments": [
                                2432
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2432,
                                  "mutability": "mutable",
                                  "name": "srcRepNum",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2467,
                                  "src": "4828:16:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 2431,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4828:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2436,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2433,
                                  "name": "numCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2056,
                                  "src": "4847:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                    "typeString": "mapping(address => uint32)"
                                  }
                                },
                                "id": 2435,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2434,
                                  "name": "srcRep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2411,
                                  "src": "4862:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4847:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4828:41:8"
                            },
                            {
                              "assignments": [
                                2438
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2438,
                                  "mutability": "mutable",
                                  "name": "srcRepOld",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2467,
                                  "src": "4887:17:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2437,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4887:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2452,
                              "initialValue": {
                                "argumentTypes": null,
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 2441,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 2439,
                                    "name": "srcRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2432,
                                    "src": "4907:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 2440,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4919:1:8",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "4907:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 2450,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5006:1:8",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "id": 2451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "4907:100:8",
                                "trueExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 2442,
                                        "name": "checkpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2052,
                                        "src": "4943:11:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint32 => struct GMGToken.Checkpoint storage ref))"
                                        }
                                      },
                                      "id": 2444,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 2443,
                                        "name": "srcRep",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2411,
                                        "src": "4955:6:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4943:19:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$",
                                        "typeString": "mapping(uint32 => struct GMGToken.Checkpoint storage ref)"
                                      }
                                    },
                                    "id": 2448,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "id": 2447,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 2445,
                                        "name": "srcRepNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2432,
                                        "src": "4963:9:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31",
                                        "id": 2446,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4975:1:8",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "4963:13:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4943:34:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Checkpoint_$2046_storage",
                                      "typeString": "struct GMGToken.Checkpoint storage ref"
                                    }
                                  },
                                  "id": 2449,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "votes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2045,
                                  "src": "4943:40:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4887:120:8"
                            },
                            {
                              "assignments": [
                                2454
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2454,
                                  "mutability": "mutable",
                                  "name": "srcRepNew",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2467,
                                  "src": "5025:17:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2453,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5025:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2459,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2457,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2415,
                                    "src": "5059:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2455,
                                    "name": "srcRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2438,
                                    "src": "5045:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2456,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1080,
                                  "src": "5045:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5045:21:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5025:41:8"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2461,
                                    "name": "srcRep",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2411,
                                    "src": "5101:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2462,
                                    "name": "srcRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2432,
                                    "src": "5109:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2463,
                                    "name": "srcRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2438,
                                    "src": "5120:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2464,
                                    "name": "srcRepNew",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2454,
                                    "src": "5131:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2460,
                                  "name": "_writeCheckpoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2589,
                                  "src": "5084:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint32,uint256,uint256)"
                                  }
                                },
                                "id": 2465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5084:57:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2466,
                              "nodeType": "ExpressionStatement",
                              "src": "5084:57:8"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2469,
                            "name": "dstRep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2413,
                            "src": "5174:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5192:1:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5184:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2470,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5184:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5184:10:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "5174:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2512,
                        "nodeType": "IfStatement",
                        "src": "5170:419:8",
                        "trueBody": {
                          "id": 2511,
                          "nodeType": "Block",
                          "src": "5196:393:8",
                          "statements": [
                            {
                              "assignments": [
                                2476
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2476,
                                  "mutability": "mutable",
                                  "name": "dstRepNum",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2511,
                                  "src": "5261:16:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 2475,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5261:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2480,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2477,
                                  "name": "numCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2056,
                                  "src": "5280:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                    "typeString": "mapping(address => uint32)"
                                  }
                                },
                                "id": 2479,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2478,
                                  "name": "dstRep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2413,
                                  "src": "5295:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5280:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5261:41:8"
                            },
                            {
                              "assignments": [
                                2482
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2482,
                                  "mutability": "mutable",
                                  "name": "dstRepOld",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2511,
                                  "src": "5320:17:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2481,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5320:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2496,
                              "initialValue": {
                                "argumentTypes": null,
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 2485,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 2483,
                                    "name": "dstRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2476,
                                    "src": "5340:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 2484,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5352:1:8",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5340:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 2494,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5439:1:8",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "id": 2495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "5340:100:8",
                                "trueExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 2486,
                                        "name": "checkpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2052,
                                        "src": "5376:11:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint32 => struct GMGToken.Checkpoint storage ref))"
                                        }
                                      },
                                      "id": 2488,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 2487,
                                        "name": "dstRep",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2413,
                                        "src": "5388:6:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5376:19:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$",
                                        "typeString": "mapping(uint32 => struct GMGToken.Checkpoint storage ref)"
                                      }
                                    },
                                    "id": 2492,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "id": 2491,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 2489,
                                        "name": "dstRepNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2476,
                                        "src": "5396:9:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31",
                                        "id": 2490,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5408:1:8",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "5396:13:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5376:34:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Checkpoint_$2046_storage",
                                      "typeString": "struct GMGToken.Checkpoint storage ref"
                                    }
                                  },
                                  "id": 2493,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "votes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2045,
                                  "src": "5376:40:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5320:120:8"
                            },
                            {
                              "assignments": [
                                2498
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2498,
                                  "mutability": "mutable",
                                  "name": "dstRepNew",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2511,
                                  "src": "5458:17:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2497,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5458:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2503,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2501,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2415,
                                    "src": "5492:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2499,
                                    "name": "dstRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2482,
                                    "src": "5478:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2500,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1063,
                                  "src": "5478:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5478:21:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5458:41:8"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2505,
                                    "name": "dstRep",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2413,
                                    "src": "5534:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2506,
                                    "name": "dstRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2476,
                                    "src": "5542:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2507,
                                    "name": "dstRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2482,
                                    "src": "5553:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2508,
                                    "name": "dstRepNew",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2498,
                                    "src": "5564:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2504,
                                  "name": "_writeCheckpoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2589,
                                  "src": "5517:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint32,uint256,uint256)"
                                  }
                                },
                                "id": 2509,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5517:57:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2510,
                              "nodeType": "ExpressionStatement",
                              "src": "5517:57:8"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_moveDelegates",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2411,
                  "mutability": "mutable",
                  "name": "srcRep",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2516,
                  "src": "4599:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4599:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2413,
                  "mutability": "mutable",
                  "name": "dstRep",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2516,
                  "src": "4623:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4623:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2415,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2516,
                  "src": "4647:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4647:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4589:78:8"
            },
            "returnParameters": {
              "id": 2417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4677:0:8"
            },
            "scope": 2626,
            "src": "4566:1039:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2588,
              "nodeType": "Block",
              "src": "5760:640:8",
              "statements": [
                {
                  "assignments": [
                    2528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2528,
                      "mutability": "mutable",
                      "name": "blockNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2588,
                      "src": "5770:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 2527,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5770:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2534,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2530,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "5811:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5811:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "544f4b454e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
                        "id": 2532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5837:55:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37cb48887c691b8c03987d15326ba18def5e75d54d60ba0dbedb1db3c4f8cd62",
                          "typeString": "literal_string \"TOKEN::_writeCheckpoint: block number exceeds 32 bits\""
                        },
                        "value": "TOKEN::_writeCheckpoint: block number exceeds 32 bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37cb48887c691b8c03987d15326ba18def5e75d54d60ba0dbedb1db3c4f8cd62",
                          "typeString": "literal_string \"TOKEN::_writeCheckpoint: block number exceeds 32 bits\""
                        }
                      ],
                      "id": 2529,
                      "name": "safe32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2613,
                      "src": "5791:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
                        "typeString": "function (uint256,string memory) pure returns (uint32)"
                      }
                    },
                    "id": 2533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5791:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5770:132:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 2537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2535,
                        "name": "nCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2520,
                        "src": "5930:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5945:1:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5930:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 2547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2538,
                              "name": "checkpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2052,
                              "src": "5962:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$_$",
                                "typeString": "mapping(address => mapping(uint32 => struct GMGToken.Checkpoint storage ref))"
                              }
                            },
                            "id": 2540,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2539,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2518,
                              "src": "5974:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5962:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$",
                              "typeString": "mapping(uint32 => struct GMGToken.Checkpoint storage ref)"
                            }
                          },
                          "id": 2544,
                          "indexExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 2543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2541,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2520,
                              "src": "5985:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6000:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5985:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5962:40:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$2046_storage",
                            "typeString": "struct GMGToken.Checkpoint storage ref"
                          }
                        },
                        "id": 2545,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fromBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2043,
                        "src": "5962:50:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2546,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2528,
                        "src": "6016:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "5962:65:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5930:97:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2580,
                    "nodeType": "Block",
                    "src": "6126:201:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2561,
                                "name": "checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2052,
                                "src": "6140:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint32 => struct GMGToken.Checkpoint storage ref))"
                                }
                              },
                              "id": 2564,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2562,
                                "name": "delegatee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2518,
                                "src": "6152:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6140:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$",
                                "typeString": "mapping(uint32 => struct GMGToken.Checkpoint storage ref)"
                              }
                            },
                            "id": 2565,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2563,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2520,
                              "src": "6163:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6140:36:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$2046_storage",
                              "typeString": "struct GMGToken.Checkpoint storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2567,
                                "name": "blockNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2528,
                                "src": "6207:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 2568,
                                "name": "newVotes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2524,
                                "src": "6236:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2566,
                              "name": "Checkpoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2046,
                              "src": "6179:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Checkpoint_$2046_storage_ptr_$",
                                "typeString": "type(struct GMGToken.Checkpoint storage pointer)"
                              }
                            },
                            "id": 2569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6179:79:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$2046_memory_ptr",
                              "typeString": "struct GMGToken.Checkpoint memory"
                            }
                          },
                          "src": "6140:118:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$2046_storage",
                            "typeString": "struct GMGToken.Checkpoint storage ref"
                          }
                        },
                        "id": 2571,
                        "nodeType": "ExpressionStatement",
                        "src": "6140:118:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2572,
                              "name": "numCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "6272:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                "typeString": "mapping(address => uint32)"
                              }
                            },
                            "id": 2574,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2573,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2518,
                              "src": "6287:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6272:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 2577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2575,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2520,
                              "src": "6300:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6315:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6300:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "6272:44:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 2579,
                        "nodeType": "ExpressionStatement",
                        "src": "6272:44:8"
                      }
                    ]
                  },
                  "id": 2581,
                  "nodeType": "IfStatement",
                  "src": "5913:414:8",
                  "trueBody": {
                    "id": 2560,
                    "nodeType": "Block",
                    "src": "6038:82:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2549,
                                  "name": "checkpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2052,
                                  "src": "6052:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint32 => struct GMGToken.Checkpoint storage ref))"
                                  }
                                },
                                "id": 2554,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2550,
                                  "name": "delegatee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2518,
                                  "src": "6064:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6052:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$2046_storage_$",
                                  "typeString": "mapping(uint32 => struct GMGToken.Checkpoint storage ref)"
                                }
                              },
                              "id": 2555,
                              "indexExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 2553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2551,
                                  "name": "nCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2520,
                                  "src": "6075:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 2552,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6090:1:8",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "6075:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6052:40:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$2046_storage",
                                "typeString": "struct GMGToken.Checkpoint storage ref"
                              }
                            },
                            "id": 2556,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "votes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "6052:46:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2557,
                            "name": "newVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2524,
                            "src": "6101:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6052:57:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2559,
                        "nodeType": "ExpressionStatement",
                        "src": "6052:57:8"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2583,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2518,
                        "src": "6363:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2584,
                        "name": "oldVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2522,
                        "src": "6374:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2585,
                        "name": "newVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2524,
                        "src": "6384:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2582,
                      "name": "DelegateVotesChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2086,
                      "src": "6342:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6342:51:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2587,
                  "nodeType": "EmitStatement",
                  "src": "6337:56:8"
                }
              ]
            },
            "documentation": null,
            "id": 2589,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_writeCheckpoint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2518,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2589,
                  "src": "5646:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5646:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2520,
                  "mutability": "mutable",
                  "name": "nCheckpoints",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2589,
                  "src": "5673:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2519,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5673:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2522,
                  "mutability": "mutable",
                  "name": "oldVotes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2589,
                  "src": "5702:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5702:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2524,
                  "mutability": "mutable",
                  "name": "newVotes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2589,
                  "src": "5728:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5728:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5636:114:8"
            },
            "returnParameters": {
              "id": 2526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5760:0:8"
            },
            "scope": 2626,
            "src": "5611:789:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2612,
              "nodeType": "Block",
              "src": "6520:75:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2599,
                          "name": "n",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2591,
                          "src": "6538:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          },
                          "id": 2602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 2600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6542:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3332",
                            "id": 2601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6545:2:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "6542:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          }
                        },
                        "src": "6538:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2604,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2593,
                        "src": "6549:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6530:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6530:32:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2606,
                  "nodeType": "ExpressionStatement",
                  "src": "6530:32:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2609,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2591,
                        "src": "6586:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6579:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 2607,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6579:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 2610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6579:9:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 2597,
                  "id": 2611,
                  "nodeType": "Return",
                  "src": "6572:16:8"
                }
              ]
            },
            "documentation": null,
            "id": 2613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safe32",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2591,
                  "mutability": "mutable",
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2613,
                  "src": "6422:9:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6422:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2593,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2613,
                  "src": "6433:26:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2592,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6433:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6421:39:8"
            },
            "returnParameters": {
              "id": 2597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2596,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2613,
                  "src": "6508:6:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2595,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6508:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6507:8:8"
            },
            "scope": 2626,
            "src": "6406:189:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2624,
              "nodeType": "Block",
              "src": "6655:118:8",
              "statements": [
                {
                  "assignments": [
                    2619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2619,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2624,
                      "src": "6665:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2618,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6665:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2620,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6665:15:8"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "6699:44:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6713:20:8",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "6724:7:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6724:9:8"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "6713:7:8"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2619,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6713:7:8",
                      "valueSize": 1
                    }
                  ],
                  "id": 2621,
                  "nodeType": "InlineAssembly",
                  "src": "6690:53:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2622,
                    "name": "chainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2619,
                    "src": "6759:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2617,
                  "id": 2623,
                  "nodeType": "Return",
                  "src": "6752:14:8"
                }
              ]
            },
            "documentation": null,
            "id": 2625,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainId",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6620:2:8"
            },
            "returnParameters": {
              "id": 2617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2616,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2625,
                  "src": "6646:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6646:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6645:9:8"
            },
            "scope": 2626,
            "src": "6601:172:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2627,
        "src": "231:6544:8"
      }
    ],
    "src": "40:6736:8"
  },
  "bytecode": "",
  "bytecodeSha1": "31c0fee98d7c2b31ef02bdf8442746db5cfd7a91",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "GMGToken",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Ownable.transferOwnership": {
          "91": [
            1287,
            1309,
            true
          ],
          "92": [
            2088,
            2110,
            true
          ]
        }
      },
      "2": {
        "SafeMath.add": {
          "94": [
            994,
            1000,
            true
          ]
        },
        "SafeMath.sub": {
          "93": [
            1867,
            1873,
            true
          ]
        }
      },
      "3": {
        "ERC20._approve": {
          "86": [
            9414,
            9433,
            true
          ],
          "87": [
            9492,
            9513,
            true
          ]
        },
        "ERC20._mint": {
          "90": [
            7873,
            7894,
            true
          ]
        },
        "ERC20._transfer": {
          "88": [
            7094,
            7114,
            true
          ],
          "89": [
            7174,
            7197,
            true
          ]
        }
      },
      "4": {},
      "8": {
        "GMGToken._moveDelegates": {
          "77": [
            4691,
            4707,
            false
          ],
          "78": [
            4711,
            4721,
            false
          ],
          "79": [
            4741,
            4761,
            false
          ],
          "80": [
            4907,
            4920,
            true
          ],
          "81": [
            5174,
            5194,
            false
          ],
          "82": [
            5340,
            5353,
            true
          ]
        },
        "GMGToken._writeCheckpoint": {
          "83": [
            5930,
            5946,
            false
          ],
          "84": [
            5962,
            6027,
            false
          ]
        },
        "GMGToken.delegateBySig": {
          "74": [
            2300,
            2323,
            true
          ],
          "75": [
            2419,
            2447,
            true
          ],
          "76": [
            2526,
            2539,
            true
          ]
        },
        "GMGToken.getCurrentVotes": {
          "73": [
            2802,
            2818,
            true
          ]
        },
        "GMGToken.getPriorVotes": {
          "67": [
            3034,
            3060,
            true
          ],
          "68": [
            3196,
            3213,
            false
          ],
          "69": [
            3305,
            3368,
            false
          ],
          "70": [
            3504,
            3551,
            false
          ],
          "71": [
            3852,
            3879,
            false
          ],
          "72": [
            3939,
            3965,
            false
          ]
        },
        "GMGToken.safe32": {
          "85": [
            6538,
            6547,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "37": [
            678,
            695
          ]
        }
      },
      "1": {
        "Ownable.owner": {
          "24": [
            1140,
            1153
          ]
        },
        "Ownable.renounceOwnership": {
          "14": [
            1770,
            1815
          ],
          "15": [
            1825,
            1844
          ]
        },
        "Ownable.transferOwnership": {
          "34": [
            2080,
            2153
          ],
          "35": [
            2163,
            2206
          ],
          "36": [
            2216,
            2233
          ]
        }
      },
      "2": {
        "SafeMath.add": {
          "49": [
            986,
            1032
          ]
        },
        "SafeMath.sub": {
          "48": [
            1859,
            1888
          ],
          "60": [
            1406,
            1456
          ]
        }
      },
      "3": {
        "ERC20._approve": {
          "38": [
            9406,
            9474
          ],
          "39": [
            9484,
            9552
          ],
          "40": [
            9563,
            9599
          ],
          "41": [
            9609,
            9646
          ]
        },
        "ERC20._mint": {
          "50": [
            7865,
            7930
          ],
          "51": [
            7941,
            7990
          ],
          "52": [
            8001,
            8040
          ],
          "53": [
            8050,
            8101
          ],
          "54": [
            8111,
            8153
          ]
        },
        "ERC20._transfer": {
          "42": [
            7086,
            7156
          ],
          "43": [
            7166,
            7237
          ],
          "44": [
            7248,
            7295
          ],
          "45": [
            7306,
            7397
          ],
          "46": [
            7407,
            7462
          ],
          "47": [
            7472,
            7512
          ]
        },
        "ERC20.allowance": {
          "33": [
            4023,
            4057
          ]
        },
        "ERC20.approve": {
          "1": [
            4301,
            4340
          ],
          "2": [
            4350,
            4361
          ]
        },
        "ERC20.balanceOf": {
          "13": [
            3450,
            3475
          ]
        },
        "ERC20.decimals": {
          "7": [
            3126,
            3142
          ]
        },
        "ERC20.decreaseAllowance": {
          "26": [
            6358,
            6487
          ]
        },
        "ERC20.increaseAllowance": {
          "8": [
            5651,
            5734
          ]
        },
        "ERC20.name": {
          "0": [
            2228,
            2240
          ]
        },
        "ERC20.symbol": {
          "25": [
            2424,
            2438
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            3281,
            3300
          ]
        },
        "ERC20.transfer": {
          "27": [
            3787,
            3829
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            4957,
            4993
          ],
          "5": [
            5003,
            5124
          ],
          "6": [
            5134,
            5145
          ]
        }
      },
      "4": {},
      "8": {
        "GMGToken._delegate": {
          "57": [
            4379,
            4412
          ],
          "58": [
            4423,
            4482
          ],
          "59": [
            4493,
            4553
          ]
        },
        "GMGToken._moveDelegates": {
          "55": [
            5084,
            5141
          ],
          "56": [
            5517,
            5574
          ]
        },
        "GMGToken._writeCheckpoint": {
          "61": [
            6052,
            6109
          ],
          "62": [
            6140,
            6258
          ],
          "63": [
            6272,
            6316
          ],
          "64": [
            6337,
            6393
          ]
        },
        "GMGToken.delegate": {
          "12": [
            1524,
            1563
          ]
        },
        "GMGToken.delegateBySig": {
          "29": [
            2279,
            2388
          ],
          "30": [
            2398,
            2508
          ],
          "31": [
            2518,
            2583
          ],
          "32": [
            2593,
            2631
          ]
        },
        "GMGToken.delegates": {
          "11": [
            1427,
            1455
          ]
        },
        "GMGToken.getCurrentVotes": {
          "28": [
            2783,
            2869
          ]
        },
        "GMGToken.getPriorVotes": {
          "16": [
            3013,
            3126
          ],
          "17": [
            3229,
            3237
          ],
          "18": [
            3384,
            3435
          ],
          "19": [
            3567,
            3575
          ],
          "20": [
            3899,
            3914
          ],
          "21": [
            3985,
            3999
          ],
          "22": [
            4038,
            4056
          ],
          "23": [
            4090,
            4130
          ]
        },
        "GMGToken.mint": {
          "9": [
            377,
            396
          ],
          "10": [
            406,
            458
          ]
        },
        "GMGToken.safe32": {
          "65": [
            6530,
            6562
          ],
          "66": [
            6572,
            6588
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101735760003560e01c8063715018a6116100de578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e14610501578063e7a324dc1461052f578063f1127ed814610537578063f2fde38b1461058957610173565b8063a9059cbb14610468578063b4b5ea5714610494578063c3cda520146104ba57610173565b8063715018a6146103d2578063782d6fe1146103da5780637ecebe00146104065780638da5cb5b1461042c57806395d89b4114610434578063a457c2d71461043c57610173565b8063395093511161013057806339509351146102ab57806340c10f19146102d7578063587cde1e146103055780635c19a95c146103475780636fcfff451461036d57806370a08231146103ac57610173565b806306fdde0314610178578063095ea7b3146101f557806318160ddd1461023557806320606b701461024f57806323b872dd14610257578063313ce5671461028d575b600080fd5b6101806105af565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101ba5781810151838201526020016101a2565b50505050905090810190601f1680156101e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102216004803603604081101561020b57600080fd5b506001600160a01b038135169060200135610645565b604080519115158252519081900360200190f35b61023d610663565b60408051918252519081900360200190f35b61023d610669565b6102216004803603606081101561026d57600080fd5b506001600160a01b0381358116916020810135909116906040013561068d565b610295610714565b6040805160ff9092168252519081900360200190f35b610221600480360360408110156102c157600080fd5b506001600160a01b03813516906020013561071d565b610303600480360360408110156102ed57600080fd5b506001600160a01b03813516906020013561076b565b005b61032b6004803603602081101561031b57600080fd5b50356001600160a01b031661080d565b604080516001600160a01b039092168252519081900360200190f35b6103036004803603602081101561035d57600080fd5b50356001600160a01b031661082b565b6103936004803603602081101561038357600080fd5b50356001600160a01b0316610838565b6040805163ffffffff9092168252519081900360200190f35b61023d600480360360208110156103c257600080fd5b50356001600160a01b0316610850565b61030361086b565b61023d600480360360408110156103f057600080fd5b506001600160a01b03813516906020013561092a565b61023d6004803603602081101561041c57600080fd5b50356001600160a01b0316610b32565b61032b610b44565b610180610b58565b6102216004803603604081101561045257600080fd5b506001600160a01b038135169060200135610bb9565b6102216004803603604081101561047e57600080fd5b506001600160a01b038135169060200135610c21565b61023d600480360360208110156104aa57600080fd5b50356001600160a01b0316610c35565b610303600480360360c08110156104d057600080fd5b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135610c99565b61023d6004803603604081101561051757600080fd5b506001600160a01b0381358116916020013516610f0c565b61023d610f37565b6105696004803603604081101561054d57600080fd5b5080356001600160a01b0316906020013563ffffffff16610f5b565b6040805163ffffffff909316835260208301919091528051918290030190f35b6103036004803603602081101561059f57600080fd5b50356001600160a01b0316610f88565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561063b5780601f106106105761010080835404028352916020019161063b565b820191906000526020600020905b81548152906001019060200180831161061e57829003601f168201915b5050505050905090565b60006106596106526110a3565b84846110a7565b5060015b92915050565b60025490565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b600061069a848484611193565b61070a846106a66110a3565b610705856040518060600160405280602881526020016119b4602891396001600160a01b038a166000908152600160205260408120906106e46110a3565b6001600160a01b0316815260208101919091526040016000205491906112ee565b6110a7565b5060019392505050565b60055460ff1690565b600061065961072a6110a3565b84610705856001600061073b6110a3565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611385565b6107736110a3565b60055461010090046001600160a01b039081169116146107da576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6107e482826113df565b6001600160a01b038083166000908152600660205260408120546108099216836114cf565b5050565b6001600160a01b039081166000908152600660205260409020541690565b6108353382611611565b50565b60086020526000908152604090205463ffffffff1681565b6001600160a01b031660009081526020819052604090205490565b6108736110a3565b60055461010090046001600160a01b039081169116146108da576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b600043821061096a5760405162461bcd60e51b8152600401808060200182810382526028815260200180611a286028913960400191505060405180910390fd5b6001600160a01b03831660009081526008602052604090205463ffffffff168061099857600091505061065d565b6001600160a01b038416600090815260076020908152604080832063ffffffff600019860181168552925290912054168310610a07576001600160a01b03841660009081526007602090815260408083206000199490940163ffffffff1683529290522060010154905061065d565b6001600160a01b038416600090815260076020908152604080832083805290915290205463ffffffff16831015610a4257600091505061065d565b600060001982015b8163ffffffff168163ffffffff161115610afb57600282820363ffffffff16048103610a746118af565b506001600160a01b038716600090815260076020908152604080832063ffffffff808616855290835292819020815180830190925280549093168082526001909301549181019190915290871415610ad65760200151945061065d9350505050565b805163ffffffff16871115610aed57819350610af4565b6001820392505b5050610a4a565b506001600160a01b038516600090815260076020908152604080832063ffffffff9094168352929052206001015491505092915050565b60096020526000908152604090205481565b60055461010090046001600160a01b031690565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561063b5780601f106106105761010080835404028352916020019161063b565b6000610659610bc66110a3565b8461070585604051806060016040528060258152602001611a976025913960016000610bf06110a3565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906112ee565b6000610659610c2e6110a3565b8484611193565b6001600160a01b03811660009081526008602052604081205463ffffffff1680610c60576000610c92565b6001600160a01b038316600090815260076020908152604080832063ffffffff60001986011684529091529020600101545b9392505050565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866610cc46105af565b80519060200120610cd36116a6565b60408051602080820195909552808201939093526060830191909152306080808401919091528151808403909101815260a0830182528051908401207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60c08401526001600160a01b038b1660e084015261010083018a90526101208084018a9052825180850390910181526101408401835280519085012061190160f01b6101608501526101628401829052610182808501829052835180860390910181526101a285018085528151918701919091206000918290526101c2860180865281905260ff8b166101e287015261020286018a90526102228601899052935192965090949293909260019261024280840193601f198301929081900390910190855afa158015610e06573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610e585760405162461bcd60e51b81526004018080602001828103825260278152602001806119dc6027913960400191505060405180910390fd5b6001600160a01b03811660009081526009602052604090208054600181019091558914610eb65760405162461bcd60e51b8152600401808060200182810382526023815260200180611a746023913960400191505060405180910390fd5b87421115610ef55760405162461bcd60e51b815260040180806020018281038252602781526020018061198d6027913960400191505060405180910390fd5b610eff818b611611565b505050505b505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b60076020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b610f906110a3565b60055461010090046001600160a01b03908116911614610ff7576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661103c5760405162461bcd60e51b81526004018080602001828103825260268152602001806118ea6026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b3390565b6001600160a01b0383166110ec5760405162461bcd60e51b8152600401808060200182810382526024815260200180611a506024913960400191505060405180910390fd5b6001600160a01b0382166111315760405162461bcd60e51b81526004018080602001828103825260228152602001806119106022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166111d85760405162461bcd60e51b8152600401808060200182810382526025815260200180611a036025913960400191505060405180910390fd5b6001600160a01b03821661121d5760405162461bcd60e51b81526004018080602001828103825260238152602001806118c76023913960400191505060405180910390fd5b61122883838361160c565b61126581604051806060016040528060268152602001611967602691396001600160a01b03861660009081526020819052604090205491906112ee565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546112949082611385565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561137d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561134257818101518382015260200161132a565b50505050905090810190601f16801561136f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c92576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b03821661143a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6114466000838361160c565b6002546114539082611385565b6002556001600160a01b0382166000908152602081905260409020546114799082611385565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b816001600160a01b0316836001600160a01b0316141580156114f15750600081115b1561160c576001600160a01b03831615611583576001600160a01b03831660009081526008602052604081205463ffffffff169081611531576000611563565b6001600160a01b038516600090815260076020908152604080832063ffffffff60001987011684529091529020600101545b9050600061157182856116aa565b905061157f868484846116ec565b5050505b6001600160a01b0382161561160c576001600160a01b03821660009081526008602052604081205463ffffffff1690816115be5760006115f0565b6001600160a01b038416600090815260076020908152604080832063ffffffff60001987011684529091529020600101545b905060006115fe8285611385565b9050610f04858484846116ec565b505050565b6001600160a01b038083166000908152600660205260408120549091169061163884610850565b6001600160a01b0385811660008181526006602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46116a08284836114cf565b50505050565b4690565b6000610c9283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112ee565b60006117104360405180606001604052806035815260200161193260359139611851565b905060008463ffffffff1611801561175957506001600160a01b038516600090815260076020908152604080832063ffffffff6000198901811685529252909120548282169116145b15611796576001600160a01b038516600090815260076020908152604080832063ffffffff60001989011684529091529020600101829055611807565b60408051808201825263ffffffff808416825260208083018681526001600160a01b038a166000818152600784528681208b8616825284528681209551865490861663ffffffff19918216178755925160019687015590815260089092529390208054928801909116919092161790555b604080518481526020810184905281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b60008164010000000084106118a75760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561134257818101518382015260200161132a565b509192915050565b60408051808201909152600080825260208201529056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f2061646472657373544f4b454e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365544f4b454e3a3a64656c656761746542795369673a207369676e6174757265206578706972656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365544f4b454e3a3a64656c656761746542795369673a20696e76616c6964207369676e617475726545524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373544f4b454e3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656445524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373544f4b454e3a3a64656c656761746542795369673a20696e76616c6964206e6f6e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220f6acc8548662a8e35962bd21422c3f55a1eea6efed0914e4042d9c7f70fc36e764736f6c634300060c0033",
  "deployedSourceMap": "231:6544:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2166:81:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4202:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4202:166:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3209:98;;;:::i;:::-;;;;;;;;;;;;;;;;733:152:8;;;:::i;4835:317:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4835:317:3;;;;;;;;;;;;;;;;;:::i;3068:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5547:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5547:215:3;;;;;;;;:::i;306:159:8:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;306:159:8;;;;;;;;:::i;:::-;;1347:115;;;;;;;;;;;;;;;;-1:-1:-1;1347:115:8;-1:-1:-1;;;;;1347:115:8;;:::i;:::-;;;;-1:-1:-1;;;;;1347:115:8;;;;;;;;;;;;;;1468:102;;;;;;;;;;;;;;;;-1:-1:-1;1468:102:8;-1:-1:-1;;;;;1468:102:8;;:::i;679:48::-;;;;;;;;;;;;;;;;-1:-1:-1;679:48:8;-1:-1:-1;;;;;679:48:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;3365:117:3;;;;;;;;;;;;;;;;-1:-1:-1;3365:117:3;-1:-1:-1;;;;;3365:117:3;;:::i;1706:145:1:-;;;:::i;2882:1255:8:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2882:1255:8;;;;;;;;:::i;1022:41::-;;;;;;;;;;;;;;;;-1:-1:-1;1022:41:8;-1:-1:-1;;;;;1022:41:8;;:::i;1083:77:1:-;;;:::i;2360:85:3:-;;;:::i;6249:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6249:266:3;;;;;;;;:::i;3685:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3685:172:3;;;;;;;;:::i;2644:232:8:-;;;;;;;;;;;;;;;;-1:-1:-1;2644:232:8;-1:-1:-1;;;;;2644:232:8;;:::i;1576:1062::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1576:1062:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3915:149:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3915:149:3;;;;;;;;;;:::i;891:125:8:-;;;:::i;605:68::-;;;;;;;;;;;;;;;;-1:-1:-1;605:68:8;;-1:-1:-1;;;;;605:68:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;2000:240:1;;;;;;;;;;;;;;;;-1:-1:-1;2000:240:1;-1:-1:-1;;;;;2000:240:1;;:::i;2166:81:3:-;2235:5;2228:12;;;;;;;;-1:-1:-1;;2228:12:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:13;;2228:12;;2235:5;;2228:12;;2235:5;2228:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2166:81;:::o;4202:166::-;4285:4;4301:39;4310:12;:10;:12::i;:::-;4324:7;4333:6;4301:8;:39::i;:::-;-1:-1:-1;4357:4:3;4202:166;;;;;:::o;3209:98::-;3288:12;;3209:98;:::o;733:152:8:-;783:102;733:152;:::o;4835:317:3:-;4941:4;4957:36;4967:6;4975:9;4986:6;4957:9;:36::i;:::-;5003:121;5012:6;5020:12;:10;:12::i;:::-;5034:89;5072:6;5034:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5034:19:3;;;;;;:11;:19;;;;;;5054:12;:10;:12::i;:::-;-1:-1:-1;;;;;5034:33:3;;;;;;;;;;;;-1:-1:-1;5034:33:3;;;:89;:37;:89::i;:::-;5003:8;:121::i;:::-;-1:-1:-1;5141:4:3;4835:317;;;;;:::o;3068:81::-;3133:9;;;;3068:81;:::o;5547:215::-;5635:4;5651:83;5660:12;:10;:12::i;:::-;5674:7;5683:50;5722:10;5683:11;:25;5695:12;:10;:12::i;:::-;-1:-1:-1;;;;;5683:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;5683:25:3;;;:34;;;;;;;;;;;:38;:50::i;306:159:8:-;1297:12:1;:10;:12::i;:::-;1287:6;;;;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;377:19:8::1;383:3;388:7;377:5;:19::i;:::-;-1:-1:-1::0;;;;;433:15:8;;::::1;429:1;433:15:::0;;;:10:::1;:15;::::0;;;;;406:52:::1;::::0;433:15:::1;450:7:::0;406:14:::1;:52::i;:::-;306:159:::0;;:::o;1347:115::-;-1:-1:-1;;;;;1434:21:8;;;1408:7;1434:21;;;:10;:21;;;;;;;;1347:115::o;1468:102::-;1531:32;1541:10;1553:9;1531;:32::i;:::-;1468:102;:::o;679:48::-;;;;;;;;;;;;;;;:::o;3365:117:3:-;-1:-1:-1;;;;;3457:18:3;3431:7;3457:18;;;;;;;;;;;;3365:117::o;1706:145:1:-;1297:12;:10;:12::i;:::-;1287:6;;;;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:6:::1;::::0;1775:40:::1;::::0;1812:1:::1;::::0;1796:6:::1;::::0;::::1;-1:-1:-1::0;;;;;1796:6:1::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1825:6;:19:::0;;-1:-1:-1;;;;;;1825:19:1::1;::::0;;1706:145::o;2882:1255:8:-;2990:7;3048:12;3034:11;:26;3013:113;;;;-1:-1:-1;;;3013:113:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3159:23:8;;3137:19;3159:23;;;:14;:23;;;;;;;;3196:17;3192:56;;3236:1;3229:8;;;;;3192:56;-1:-1:-1;;;;;3305:20:8;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;3326:16:8;;3305:38;;;;;;;;;:48;;:63;-1:-1:-1;3301:145:8;;-1:-1:-1;;;;;3391:20:8;;;;;;:11;:20;;;;;;;;-1:-1:-1;;3412:16:8;;;;3391:38;;;;;;;;3427:1;3391:44;;;-1:-1:-1;3384:51:8;;3301:145;-1:-1:-1;;;;;3504:20:8;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;3500:86:8;;;3574:1;3567:8;;;;;3500:86;3596:12;-1:-1:-1;;3637:16:8;;3663:418;3678:5;3670:13;;:5;:13;;;3663:418;;;3741:1;3724:13;;;3723:19;;;3715:27;;3783:20;;:::i;:::-;-1:-1:-1;;;;;;3806:20:8;;;;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;3783:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3852:27;;3848:223;;;3906:8;;;;-1:-1:-1;3899:15:8;;-1:-1:-1;;;;3899:15:8;3848:223;3939:12;;:26;;;-1:-1:-1;3935:136:8;;;3993:6;3985:14;;3935:136;;;4055:1;4046:6;:10;4038:18;;3935:136;3663:418;;;;;-1:-1:-1;;;;;;4097:20:8;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;;;;-1:-1:-1;;2882:1255:8;;;;:::o;1022:41::-;;;;;;;;;;;;;:::o;1083:77:1:-;1147:6;;;;;-1:-1:-1;;;;;1147:6:1;;1083:77::o;2360:85:3:-;2431:7;2424:14;;;;;;;;-1:-1:-1;;2424:14:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2399:13;;2424:14;;2431:7;;2424:14;;2431:7;2424:14;;;;;;;;;;;;;;;;;;;;;;;;6249:266;6342:4;6358:129;6367:12;:10;:12::i;:::-;6381:7;6390:96;6429:15;6390:96;;;;;;;;;;;;;;;;;:11;:25;6402:12;:10;:12::i;:::-;-1:-1:-1;;;;;6390:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;6390:25:3;;;:34;;;;;;;;;;;:96;:38;:96::i;3685:172::-;3771:4;3787:42;3797:12;:10;:12::i;:::-;3811:9;3822:6;3787:9;:42::i;2644:232:8:-;-1:-1:-1;;;;;2750:23:8;;2709:7;2750:23;;;:14;:23;;;;;;;;2802:16;:67;;2868:1;2802:67;;;-1:-1:-1;;;;;2821:20:8;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;2842:16:8;;2821:38;;;;;;;;2857:1;2821:44;;2802:67;2783:86;2644:232;-1:-1:-1;;;2644:232:8:o;1576:1062::-;1753:23;783:102;1879:6;:4;:6::i;:::-;1863:24;;;;;;1905:12;:10;:12::i;:::-;1802:160;;;;;;;;;;;;;;;;;;;;;;;;;1943:4;1802:160;;;;;;;;;;;;;;;;;;;;;;;1779:193;;;;;;945:71;2027:57;;;;-1:-1:-1;;;;;2027:57:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2004:90;;;;;;-1:-1:-1;;;2145:57:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2122:90;;;;;;;;;-1:-1:-1;2243:26:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:193;;-1:-1:-1;2004:90:8;;2122;;-1:-1:-1;;2243:26:8;;;;;;;-1:-1:-1;;2243:26:8;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2243:26:8;;-1:-1:-1;;2243:26:8;;;-1:-1:-1;;;;;;;2300:23:8;;2279:109;;;;-1:-1:-1;;;2279:109:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2428:17:8;;;;;;:6;:17;;;;;:19;;;;;;;;2419:28;;2398:110;;;;-1:-1:-1;;;2398:110:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2533:6;2526:3;:13;;2518:65;;;;-1:-1:-1;;;2518:65:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2600:31;2610:9;2621;2600;:31::i;:::-;2593:38;;;;1576:1062;;;;;;;:::o;3915:149:3:-;-1:-1:-1;;;;;4030:18:3;;;4004:7;4030:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3915:149::o;891:125:8:-;945:71;891:125;:::o;605:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2000:240:1:-;1297:12;:10;:12::i;:::-;1287:6;;;;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2088:22:1;::::1;2080:73;;;;-1:-1:-1::0;;;2080:73:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:6;::::0;2168:38:::1;::::0;-1:-1:-1;;;;;2168:38:1;;::::1;::::0;2189:6:::1;::::0;::::1;;::::0;2168:38:::1;::::0;;;::::1;2216:6;:17:::0;;-1:-1:-1;;;;;2216:17:1;;::::1;;;-1:-1:-1::0;;;;;;2216:17:1;;::::1;::::0;;;::::1;::::0;;2000:240::o;598:104:0:-;685:10;598:104;:::o;9313:340:3:-;-1:-1:-1;;;;;9414:19:3;;9406:68;;;;-1:-1:-1;;;9406:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9492:21:3;;9484:68;;;;-1:-1:-1;;;9484:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9563:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9614:32;;;;;;;;;;;;;;;;;9313:340;;;:::o;6989:530::-;-1:-1:-1;;;;;7094:20:3;;7086:70;;;;-1:-1:-1;;;7086:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7174:23:3;;7166:71;;;;-1:-1:-1;;;7166:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7248:47;7269:6;7277:9;7288:6;7248:20;:47::i;:::-;7326:71;7348:6;7326:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7326:17:3;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7306:17:3;;;:9;:17;;;;;;;;;;;:91;;;;7430:20;;;;;;;:32;;7455:6;7430:24;:32::i;:::-;-1:-1:-1;;;;;7407:20:3;;;:9;:20;;;;;;;;;;;;:55;;;;7477:35;;;;;;;7407:20;;7477:35;;;;;;;;;;;;;6989:530;;;:::o;1754:187:2:-;1840:7;1875:12;1867:6;;;;1859:29;;;;-1:-1:-1;;;1859:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1910:5:2;;;1754:187::o;882:176::-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;7790:370:3;-1:-1:-1;;;;;7873:21:3;;7865:65;;;;;-1:-1:-1;;;7865:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;7941:49;7970:1;7974:7;7983:6;7941:20;:49::i;:::-;8016:12;;:24;;8033:6;8016:16;:24::i;:::-;8001:12;:39;-1:-1:-1;;;;;8071:18:3;;:9;:18;;;;;;;;;;;:30;;8094:6;8071:22;:30::i;:::-;-1:-1:-1;;;;;8050:18:3;;:9;:18;;;;;;;;;;;:51;;;;8116:37;;;;;;;8050:18;;:9;;8116:37;;;;;;;;;;7790:370;;:::o;4566:1039:8:-;4701:6;-1:-1:-1;;;;;4691:16:8;:6;-1:-1:-1;;;;;4691:16:8;;;:30;;;;;4720:1;4711:6;:10;4691:30;4687:912;;;-1:-1:-1;;;;;4741:20:8;;;4737:419;;-1:-1:-1;;;;;4847:22:8;;4828:16;4847:22;;;:14;:22;;;;;;;;;4907:13;:100;;5006:1;4907:100;;;-1:-1:-1;;;;;4943:19:8;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;4963:13:8;;4943:34;;;;;;;;4975:1;4943:40;;4907:100;4887:120;-1:-1:-1;5025:17:8;5045:21;4887:120;5059:6;5045:13;:21::i;:::-;5025:41;;5084:57;5101:6;5109:9;5120;5131;5084:16;:57::i;:::-;4737:419;;;;-1:-1:-1;;;;;5174:20:8;;;5170:419;;-1:-1:-1;;;;;5280:22:8;;5261:16;5280:22;;;:14;:22;;;;;;;;;5340:13;:100;;5439:1;5340:100;;;-1:-1:-1;;;;;5376:19:8;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;5396:13:8;;5376:34;;;;;;;;5408:1;5376:40;;5340:100;5320:120;-1:-1:-1;5458:17:8;5478:21;5320:120;5492:6;5478:13;:21::i;:::-;5458:41;;5517:57;5534:6;5542:9;5553;5564;5517:16;:57::i;5170:419::-;4566:1039;;;:::o;4143:417::-;-1:-1:-1;;;;;4245:21:8;;;4219:23;4245:21;;;:10;:21;;;;;;;;;;4303:20;4256:9;4303;:20::i;:::-;-1:-1:-1;;;;;4379:21:8;;;;;;;:10;:21;;;;;;:33;;-1:-1:-1;;;;;;4379:33:8;;;;;;;;;;4428:54;;4276:47;;-1:-1:-1;4379:33:8;4428:54;;;;;;4379:21;4428:54;4493:60;4508:15;4525:9;4536:16;4493:14;:60::i;:::-;4143:417;;;;:::o;6601:172::-;6724:9;6601:172;:::o;1329:134:2:-;1387:7;1413:43;1417:1;1420;1413:43;;;;;;;;;;;;;;;;;:3;:43::i;5611:789:8:-;5770:18;5791:111;5811:12;5791:111;;;;;;;;;;;;;;;;;:6;:111::i;:::-;5770:132;;5945:1;5930:12;:16;;;:97;;;;-1:-1:-1;;;;;;5962:22:8;;;;;;:11;:22;;;;;;;;:65;-1:-1:-1;;5985:16:8;;5962:40;;;;;;;;;:50;:65;;;:50;;:65;5930:97;5913:414;;;-1:-1:-1;;;;;6052:22:8;;;;;;:11;:22;;;;;;;;:40;-1:-1:-1;;6075:16:8;;6052:40;;;;;;;;6090:1;6052:46;:57;;;5913:414;;;6179:79;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6140:22:8;;-1:-1:-1;6140:22:8;;;:11;:22;;;;;:36;;;;;;;;;;:118;;;;;;;-1:-1:-1;;6140:118:8;;;;;;;;;;;;;6272:25;;;:14;:25;;;;;;:44;;6300:16;;;6272:44;;;;;;;;;;5913:414;6342:51;;;;;;;;;;;;;;-1:-1:-1;;;;;6342:51:8;;;;;;;;;;;5611:789;;;;;:::o;6406:189::-;6508:6;6549:12;6542:5;6538:9;;6530:32;;;;-1:-1:-1;;;6530:32:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6586:1:8;;6406:189;-1:-1:-1;;6406:189:8:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    231,
    6775
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x589 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x4BA JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x43C JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3AC JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1E7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH2 0x669 JUMP JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x68D JUMP JUMPDEST PUSH2 0x295 PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x71D JUMP JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x76B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82B JUMP JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x850 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x92A JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x32B PUSH2 0xB44 JUMP JUMPDEST PUSH2 0x180 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC21 JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC35 JUMP JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0xC99 JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xF0C JUMP JUMPDEST PUSH2 0x23D PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x569 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x63B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x610 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x63B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x61E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x659 PUSH2 0x652 PUSH2 0x10A3 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10A7 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69A DUP5 DUP5 DUP5 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0x70A DUP5 PUSH2 0x6A6 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x705 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19B4 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x6E4 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x10A7 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x659 PUSH2 0x72A PUSH2 0x10A3 JUMP JUMPDEST DUP5 PUSH2 0x705 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x73B PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1385 JUMP JUMPDEST PUSH2 0x773 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x7DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x7E4 DUP3 DUP3 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x809 SWAP3 AND DUP4 PUSH2 0x14CF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x835 CALLER DUP3 PUSH2 0x1611 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x873 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x8DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x96A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A28 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x998 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x65D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0xA07 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP5 SWAP1 SWAP5 ADD PUSH4 0xFFFFFFFF AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x65D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xA42 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x65D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xAFB JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xA74 PUSH2 0x18AF JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP1 DUP7 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x65D SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0xAED JUMPI DUP2 SWAP4 POP PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xA4A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x63B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x610 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x659 PUSH2 0xBC6 PUSH2 0x10A3 JUMP JUMPDEST DUP5 PUSH2 0x705 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A97 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xBF0 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x659 PUSH2 0xC2E PUSH2 0x10A3 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xC60 JUMPI PUSH1 0x0 PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH2 0xCC4 PUSH2 0x5AF JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xCD3 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP4 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD DUP11 SWAP1 MSTORE PUSH2 0x120 DUP1 DUP5 ADD DUP11 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x140 DUP5 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP6 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0x162 DUP5 ADD DUP3 SWAP1 MSTORE PUSH2 0x182 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x1A2 DUP6 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP8 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x1C2 DUP7 ADD DUP1 DUP7 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP12 AND PUSH2 0x1E2 DUP8 ADD MSTORE PUSH2 0x202 DUP7 ADD DUP11 SWAP1 MSTORE PUSH2 0x222 DUP7 ADD DUP10 SWAP1 MSTORE SWAP4 MLOAD SWAP3 SWAP7 POP SWAP1 SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x242 DUP1 DUP5 ADD SWAP4 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19DC PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0xEB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A74 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x198D PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEFF DUP2 DUP12 PUSH2 0x1611 JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH2 0xF90 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xFF7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x103C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18EA PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A50 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1131 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1910 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A03 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x121D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18C7 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1228 DUP4 DUP4 DUP4 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x1265 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1967 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1294 SWAP1 DUP3 PUSH2 0x1385 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x137D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1342 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x132A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x136F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xC92 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x143A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1446 PUSH1 0x0 DUP4 DUP4 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1453 SWAP1 DUP3 PUSH2 0x1385 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1479 SWAP1 DUP3 PUSH2 0x1385 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x14F1 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x160C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1583 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1531 JUMPI PUSH1 0x0 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1571 DUP3 DUP6 PUSH2 0x16AA JUMP JUMPDEST SWAP1 POP PUSH2 0x157F DUP7 DUP5 DUP5 DUP5 PUSH2 0x16EC JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x160C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x15BE JUMPI PUSH1 0x0 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15FE DUP3 DUP6 PUSH2 0x1385 JUMP JUMPDEST SWAP1 POP PUSH2 0xF04 DUP6 DUP5 DUP5 DUP5 PUSH2 0x16EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 PUSH2 0x1638 DUP5 PUSH2 0x850 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP10 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP5 SWAP6 POP SWAP4 SWAP3 DUP7 AND SWAP3 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x16A0 DUP3 DUP5 DUP4 PUSH2 0x14CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC92 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1710 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1932 PUSH1 0x35 SWAP2 CODECOPY PUSH2 0x1851 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1759 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x1796 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP3 SWAP1 SSTORE PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP1 DUP7 AND PUSH4 0xFFFFFFFF NOT SWAP2 DUP3 AND OR DUP8 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP7 DUP8 ADD SSTORE SWAP1 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 DUP9 ADD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x18A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1342 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x132A JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x544F4B454E3A3A5F7772697465436865636B706F PUSH10 0x6E743A20626C6F636B20 PUSH15 0x756D62657220657863656564732033 ORIGIN KECCAK256 PUSH3 0x697473 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E6365544F4B454E3A3A64656C6567 PUSH2 0x7465 TIMESTAMP PUSH26 0x5369673A207369676E6174757265206578706972656445524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365544F4B454E3A3A64656C PUSH6 0x676174654279 MSTORE8 PUSH10 0x673A20696E76616C6964 KECCAK256 PUSH20 0x69676E617475726545524332303A207472616E73 PUSH7 0x65722066726F6D KECCAK256 PUSH21 0x6865207A65726F2061646472657373544F4B454E3A GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 SLOAD 0x4F 0x4B GASLIMIT 0x4E GASPRICE GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A20696E76616C6964206E6F6E6365 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220F6AC 0xC8 SLOAD DUP7 PUSH3 0xA8E359 PUSH3 0xBD2142 0x2C EXTCODEHASH SSTORE LOG1 0xEE 0xA6 0xEF 0xED MULMOD EQ 0xE4 DIV 0x2D SWAP13 PUSH32 0x70FC36E764736F6C634300060C00330000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        231,
        6775
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "REVERT",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "POP",
      "path": "8"
    },
    "18": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "21": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "LT",
      "path": "8"
    },
    "22": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x173"
    },
    "25": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "29": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "SHR",
      "path": "8"
    },
    "32": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "33": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "GT",
      "path": "8"
    },
    "39": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDE"
    },
    "42": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "43": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "44": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "49": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "GT",
      "path": "8"
    },
    "50": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "54": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "55": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDD62ED3E"
    },
    "60": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "GT",
      "path": "8"
    },
    "61": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "65": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "66": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "72": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x501"
    },
    "75": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "76": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "77": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xE7A324DC"
    },
    "82": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "83": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x52F"
    },
    "86": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "87": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "88": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF1127ED8"
    },
    "93": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "94": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x537"
    },
    "97": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "98": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "99": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "105": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x589"
    },
    "108": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "109": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x173"
    },
    "112": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMP",
      "path": "8"
    },
    "113": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "114": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "115": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "120": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "121": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x468"
    },
    "124": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "125": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "126": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xB4B5EA57"
    },
    "131": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "132": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x494"
    },
    "135": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "136": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "137": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xC3CDA520"
    },
    "142": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "143": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4BA"
    },
    "146": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "147": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x173"
    },
    "150": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMP",
      "path": "8"
    },
    "151": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "152": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "153": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x715018A6"
    },
    "158": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "159": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3D2"
    },
    "162": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "163": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "164": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x782D6FE1"
    },
    "169": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "170": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3DA"
    },
    "173": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "174": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "175": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x7ECEBE00"
    },
    "180": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "181": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x406"
    },
    "184": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "185": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "186": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8DA5CB5B"
    },
    "191": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "192": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x42C"
    },
    "195": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "196": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "197": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x95D89B41"
    },
    "202": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "203": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x434"
    },
    "206": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "207": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "208": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA457C2D7"
    },
    "213": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "214": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x43C"
    },
    "217": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "218": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x173"
    },
    "221": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMP",
      "path": "8"
    },
    "222": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "223": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "224": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x39509351"
    },
    "229": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "GT",
      "path": "8"
    },
    "230": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x130"
    },
    "233": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "234": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "235": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x39509351"
    },
    "240": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "241": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2AB"
    },
    "244": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "245": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "246": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x40C10F19"
    },
    "251": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "252": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2D7"
    },
    "255": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "256": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "257": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x587CDE1E"
    },
    "262": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "263": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x305"
    },
    "266": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "267": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "268": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x5C19A95C"
    },
    "273": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "274": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x347"
    },
    "277": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "278": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "279": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x6FCFFF45"
    },
    "284": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "285": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x36D"
    },
    "288": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "289": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "290": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "295": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "296": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3AC"
    },
    "299": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "300": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x173"
    },
    "303": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMP",
      "path": "8"
    },
    "304": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "305": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "306": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x6FDDE03"
    },
    "311": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "312": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x178"
    },
    "315": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "316": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "317": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x95EA7B3"
    },
    "322": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "323": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F5"
    },
    "326": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "327": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "328": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x18160DDD"
    },
    "333": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "334": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x235"
    },
    "337": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "338": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "339": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x20606B70"
    },
    "344": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "345": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24F"
    },
    "348": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "349": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "350": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "355": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "356": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x257"
    },
    "359": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "360": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "361": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x313CE567"
    },
    "366": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "EQ",
      "path": "8"
    },
    "367": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x28D"
    },
    "370": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "371": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "372": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "374": {
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "375": {
      "first_revert": true,
      "fn": null,
      "offset": [
        231,
        6775
      ],
      "op": "REVERT",
      "path": "8"
    },
    "376": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "377": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x180"
    },
    "380": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5AF"
    },
    "383": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMP",
      "path": "3"
    },
    "384": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "385": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "387": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "388": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "389": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "391": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "392": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP3",
      "path": "3"
    },
    "393": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "394": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "395": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "396": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "397": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "398": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "399": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "400": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "401": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "402": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "403": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "404": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "405": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "406": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "407": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "408": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "409": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "410": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP6",
      "path": "3"
    },
    "411": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "412": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "413": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "414": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "415": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "416": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "418": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "419": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "420": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "421": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "LT",
      "path": "3"
    },
    "422": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "423": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BA"
    },
    "426": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "427": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "428": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "429": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "430": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "431": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "432": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP3",
      "path": "3"
    },
    "433": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "434": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "435": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "437": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "438": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A2"
    },
    "441": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMP",
      "path": "3"
    },
    "442": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "443": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "444": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "445": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "446": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "447": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "448": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "449": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "450": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "451": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "452": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "453": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "455": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "AND",
      "path": "3"
    },
    "456": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "458": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E7"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "462": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "463": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP3",
      "path": "3"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SUB",
      "path": "3"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "466": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "467": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "472": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SUB",
      "path": "3"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "EXP",
      "path": "3"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SUB",
      "path": "3"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "NOT",
      "path": "3"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "AND",
      "path": "3"
    },
    "480": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "484": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "490": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "491": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SUB",
      "path": "3"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "500": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "RETURN",
      "path": "3"
    },
    "501": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "502": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x221"
    },
    "505": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "507": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "DUP1",
      "path": "3"
    },
    "508": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "509": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SUB",
      "path": "3"
    },
    "510": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "512": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "DUP2",
      "path": "3"
    },
    "513": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "LT",
      "path": "3"
    },
    "514": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "515": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20B"
    },
    "518": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "519": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "521": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "DUP1",
      "path": "3"
    },
    "522": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "REVERT",
      "path": "3"
    },
    "523": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "524": {
      "op": "POP"
    },
    "525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "531": {
      "op": "SHL"
    },
    "532": {
      "op": "SUB"
    },
    "533": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "DUP2",
      "path": "3"
    },
    "534": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "535": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "AND",
      "path": "3"
    },
    "536": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "537": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "539": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "ADD",
      "path": "3"
    },
    "540": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "541": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x645"
    },
    "544": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMP",
      "path": "3"
    },
    "545": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "546": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "548": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "DUP1",
      "path": "3"
    },
    "549": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "550": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "551": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "552": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "553": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "DUP3",
      "path": "3"
    },
    "554": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "555": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "556": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "557": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "DUP2",
      "path": "3"
    },
    "558": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "559": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SUB",
      "path": "3"
    },
    "560": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "562": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "ADD",
      "path": "3"
    },
    "563": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "564": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "RETURN",
      "path": "3"
    },
    "565": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "566": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23D"
    },
    "569": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x663"
    },
    "572": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3209,
        3307
      ],
      "op": "JUMP",
      "path": "3"
    },
    "573": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "574": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "576": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "DUP1",
      "path": "3"
    },
    "577": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "578": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "579": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "DUP3",
      "path": "3"
    },
    "580": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "581": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "582": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "583": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "DUP2",
      "path": "3"
    },
    "584": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "585": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "SUB",
      "path": "3"
    },
    "586": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "588": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "ADD",
      "path": "3"
    },
    "589": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "590": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "RETURN",
      "path": "3"
    },
    "591": {
      "offset": [
        733,
        885
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "592": {
      "fn": "ERC20.totalSupply",
      "offset": [
        733,
        885
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x23D"
    },
    "595": {
      "fn": "ERC20.totalSupply",
      "offset": [
        733,
        885
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x669"
    },
    "598": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        733,
        885
      ],
      "op": "JUMP",
      "path": "8"
    },
    "599": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "600": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x221"
    },
    "603": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "605": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "DUP1",
      "path": "3"
    },
    "606": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "607": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "SUB",
      "path": "3"
    },
    "608": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "610": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "DUP2",
      "path": "3"
    },
    "611": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "LT",
      "path": "3"
    },
    "612": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "613": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26D"
    },
    "616": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "617": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "619": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "DUP1",
      "path": "3"
    },
    "620": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "REVERT",
      "path": "3"
    },
    "621": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "622": {
      "op": "POP"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "629": {
      "op": "SHL"
    },
    "630": {
      "op": "SUB"
    },
    "631": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "DUP2",
      "path": "3"
    },
    "632": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "633": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "DUP2",
      "path": "3"
    },
    "634": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "AND",
      "path": "3"
    },
    "635": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "636": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "638": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "DUP2",
      "path": "3"
    },
    "639": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "ADD",
      "path": "3"
    },
    "640": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "641": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "642": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "643": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "AND",
      "path": "3"
    },
    "644": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "647": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "ADD",
      "path": "3"
    },
    "648": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x68D"
    },
    "652": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4835,
        5152
      ],
      "op": "JUMP",
      "path": "3"
    },
    "653": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "654": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x295"
    },
    "657": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x714"
    },
    "660": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3068,
        3149
      ],
      "op": "JUMP",
      "path": "3"
    },
    "661": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "662": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "664": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "DUP1",
      "path": "3"
    },
    "665": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "666": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "668": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "669": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "670": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "AND",
      "path": "3"
    },
    "671": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "DUP3",
      "path": "3"
    },
    "672": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "673": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "674": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "675": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "676": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "677": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "SUB",
      "path": "3"
    },
    "678": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "680": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "ADD",
      "path": "3"
    },
    "681": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "682": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "RETURN",
      "path": "3"
    },
    "683": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "684": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x221"
    },
    "687": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "689": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "DUP1",
      "path": "3"
    },
    "690": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "691": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "SUB",
      "path": "3"
    },
    "692": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "694": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "DUP2",
      "path": "3"
    },
    "695": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "LT",
      "path": "3"
    },
    "696": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "697": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C1"
    },
    "700": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "701": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "703": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "DUP1",
      "path": "3"
    },
    "704": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "REVERT",
      "path": "3"
    },
    "705": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "706": {
      "op": "POP"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "713": {
      "op": "SHL"
    },
    "714": {
      "op": "SUB"
    },
    "715": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "DUP2",
      "path": "3"
    },
    "716": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "717": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "AND",
      "path": "3"
    },
    "718": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "719": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "ADD",
      "path": "3"
    },
    "722": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "723": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x71D"
    },
    "726": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5547,
        5762
      ],
      "op": "JUMP",
      "path": "3"
    },
    "727": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "728": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x303"
    },
    "731": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "733": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "DUP1",
      "path": "8"
    },
    "734": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "735": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "SUB",
      "path": "8"
    },
    "736": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "738": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "DUP2",
      "path": "8"
    },
    "739": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "LT",
      "path": "8"
    },
    "740": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "741": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2ED"
    },
    "744": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "745": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "747": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "DUP1",
      "path": "8"
    },
    "748": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "REVERT",
      "path": "8"
    },
    "749": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "750": {
      "op": "POP"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "757": {
      "op": "SHL"
    },
    "758": {
      "op": "SUB"
    },
    "759": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "DUP2",
      "path": "8"
    },
    "760": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "761": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "AND",
      "path": "8"
    },
    "762": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "763": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "765": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "ADD",
      "path": "8"
    },
    "766": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "767": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x76B"
    },
    "770": {
      "fn": "GMGToken.mint",
      "jump": "i",
      "offset": [
        306,
        465
      ],
      "op": "JUMP",
      "path": "8"
    },
    "771": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "772": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "STOP",
      "path": "8"
    },
    "773": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "774": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x32B"
    },
    "777": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "779": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "DUP1",
      "path": "8"
    },
    "780": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "781": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "SUB",
      "path": "8"
    },
    "782": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "784": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "DUP2",
      "path": "8"
    },
    "785": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "LT",
      "path": "8"
    },
    "786": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "787": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31B"
    },
    "790": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "791": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "793": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "DUP1",
      "path": "8"
    },
    "794": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "REVERT",
      "path": "8"
    },
    "795": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "796": {
      "op": "POP"
    },
    "797": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "804": {
      "op": "SHL"
    },
    "805": {
      "op": "SUB"
    },
    "806": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "AND",
      "path": "8"
    },
    "807": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x80D"
    },
    "810": {
      "fn": "GMGToken.delegates",
      "jump": "i",
      "offset": [
        1347,
        1462
      ],
      "op": "JUMP",
      "path": "8"
    },
    "811": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "812": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "814": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "DUP1",
      "path": "8"
    },
    "815": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "822": {
      "op": "SHL"
    },
    "823": {
      "op": "SUB"
    },
    "824": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "825": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "826": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "AND",
      "path": "8"
    },
    "827": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "DUP3",
      "path": "8"
    },
    "828": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "829": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "830": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "831": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "DUP2",
      "path": "8"
    },
    "832": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "833": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "SUB",
      "path": "8"
    },
    "834": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "836": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "ADD",
      "path": "8"
    },
    "837": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "838": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "RETURN",
      "path": "8"
    },
    "839": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "840": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x303"
    },
    "843": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "845": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "DUP1",
      "path": "8"
    },
    "846": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "847": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "SUB",
      "path": "8"
    },
    "848": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "850": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "DUP2",
      "path": "8"
    },
    "851": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "LT",
      "path": "8"
    },
    "852": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "853": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x35D"
    },
    "856": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "857": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "859": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "DUP1",
      "path": "8"
    },
    "860": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "REVERT",
      "path": "8"
    },
    "861": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "862": {
      "op": "POP"
    },
    "863": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "870": {
      "op": "SHL"
    },
    "871": {
      "op": "SUB"
    },
    "872": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "AND",
      "path": "8"
    },
    "873": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x82B"
    },
    "876": {
      "fn": "GMGToken.delegate",
      "jump": "i",
      "offset": [
        1468,
        1570
      ],
      "op": "JUMP",
      "path": "8"
    },
    "877": {
      "offset": [
        679,
        727
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "878": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x393"
    },
    "881": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "883": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "DUP1",
      "path": "8"
    },
    "884": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "885": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "SUB",
      "path": "8"
    },
    "886": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "888": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "DUP2",
      "path": "8"
    },
    "889": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "LT",
      "path": "8"
    },
    "890": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "891": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x383"
    },
    "894": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "895": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "897": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "DUP1",
      "path": "8"
    },
    "898": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "REVERT",
      "path": "8"
    },
    "899": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "900": {
      "op": "POP"
    },
    "901": {
      "offset": [
        679,
        727
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "908": {
      "op": "SHL"
    },
    "909": {
      "op": "SUB"
    },
    "910": {
      "offset": [
        679,
        727
      ],
      "op": "AND",
      "path": "8"
    },
    "911": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x838"
    },
    "914": {
      "fn": "GMGToken.delegate",
      "jump": "i",
      "offset": [
        679,
        727
      ],
      "op": "JUMP",
      "path": "8"
    },
    "915": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "916": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "918": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "DUP1",
      "path": "8"
    },
    "919": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "920": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "925": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "926": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "927": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "AND",
      "path": "8"
    },
    "928": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "DUP3",
      "path": "8"
    },
    "929": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "930": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "931": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "932": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "DUP2",
      "path": "8"
    },
    "933": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "934": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "SUB",
      "path": "8"
    },
    "935": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "937": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "ADD",
      "path": "8"
    },
    "938": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "939": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "RETURN",
      "path": "8"
    },
    "940": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "941": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23D"
    },
    "944": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "946": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "DUP1",
      "path": "3"
    },
    "947": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "948": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "SUB",
      "path": "3"
    },
    "949": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "951": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "DUP2",
      "path": "3"
    },
    "952": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "LT",
      "path": "3"
    },
    "953": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "954": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C2"
    },
    "957": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "958": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "960": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "DUP1",
      "path": "3"
    },
    "961": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "REVERT",
      "path": "3"
    },
    "962": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "963": {
      "op": "POP"
    },
    "964": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "971": {
      "op": "SHL"
    },
    "972": {
      "op": "SUB"
    },
    "973": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "AND",
      "path": "3"
    },
    "974": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x850"
    },
    "977": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3365,
        3482
      ],
      "op": "JUMP",
      "path": "3"
    },
    "978": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "979": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x303"
    },
    "982": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x86B"
    },
    "985": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMP",
      "path": "1"
    },
    "986": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "987": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x23D"
    },
    "990": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "992": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "DUP1",
      "path": "8"
    },
    "993": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "994": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "SUB",
      "path": "8"
    },
    "995": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "997": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "DUP2",
      "path": "8"
    },
    "998": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "LT",
      "path": "8"
    },
    "999": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1000": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F0"
    },
    "1003": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1004": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1006": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1007": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1008": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1009": {
      "op": "POP"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1016": {
      "op": "SHL"
    },
    "1017": {
      "op": "SUB"
    },
    "1018": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1019": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "1020": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "AND",
      "path": "8"
    },
    "1021": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1022": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1024": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "ADD",
      "path": "8"
    },
    "1025": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "1026": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x92A"
    },
    "1029": {
      "fn": "GMGToken.getPriorVotes",
      "jump": "i",
      "offset": [
        2882,
        4137
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1030": {
      "offset": [
        1022,
        1063
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1031": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x23D"
    },
    "1034": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1036": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1037": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1038": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "SUB",
      "path": "8"
    },
    "1039": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1041": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1042": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "LT",
      "path": "8"
    },
    "1043": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1044": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x41C"
    },
    "1047": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1048": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1050": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1051": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1052": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1053": {
      "op": "POP"
    },
    "1054": {
      "offset": [
        1022,
        1063
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1061": {
      "op": "SHL"
    },
    "1062": {
      "op": "SUB"
    },
    "1063": {
      "offset": [
        1022,
        1063
      ],
      "op": "AND",
      "path": "8"
    },
    "1064": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB32"
    },
    "1067": {
      "fn": "GMGToken.getPriorVotes",
      "jump": "i",
      "offset": [
        1022,
        1063
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1068": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1069": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x32B"
    },
    "1072": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB44"
    },
    "1075": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1076": {
      "fn": "ERC20.symbol",
      "offset": [
        2360,
        2445
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1077": {
      "fn": "ERC20.symbol",
      "offset": [
        2360,
        2445
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x180"
    },
    "1080": {
      "fn": "ERC20.symbol",
      "offset": [
        2360,
        2445
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB58"
    },
    "1083": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2360,
        2445
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1084": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1085": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x221"
    },
    "1088": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1090": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1091": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1092": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "SUB",
      "path": "3"
    },
    "1093": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1095": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1096": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "LT",
      "path": "3"
    },
    "1097": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1098": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x452"
    },
    "1101": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1102": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1104": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1105": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1106": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1107": {
      "op": "POP"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1114": {
      "op": "SHL"
    },
    "1115": {
      "op": "SUB"
    },
    "1116": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1117": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1118": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "AND",
      "path": "3"
    },
    "1119": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1120": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1122": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "ADD",
      "path": "3"
    },
    "1123": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1124": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBB9"
    },
    "1127": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6249,
        6515
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1128": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1129": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x221"
    },
    "1132": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1134": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1135": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1136": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "SUB",
      "path": "3"
    },
    "1137": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1139": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1140": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "LT",
      "path": "3"
    },
    "1141": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1142": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47E"
    },
    "1145": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1146": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1148": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1149": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1150": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1151": {
      "op": "POP"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1158": {
      "op": "SHL"
    },
    "1159": {
      "op": "SUB"
    },
    "1160": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1161": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1162": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "AND",
      "path": "3"
    },
    "1163": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1164": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1166": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "ADD",
      "path": "3"
    },
    "1167": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1168": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC21"
    },
    "1171": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3685,
        3857
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1172": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1173": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x23D"
    },
    "1176": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1178": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1179": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1180": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "SUB",
      "path": "8"
    },
    "1181": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1183": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1184": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "LT",
      "path": "8"
    },
    "1185": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1186": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4AA"
    },
    "1189": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1190": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1192": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1193": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1194": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1195": {
      "op": "POP"
    },
    "1196": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1203": {
      "op": "SHL"
    },
    "1204": {
      "op": "SUB"
    },
    "1205": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "AND",
      "path": "8"
    },
    "1206": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC35"
    },
    "1209": {
      "fn": "GMGToken.getCurrentVotes",
      "jump": "i",
      "offset": [
        2644,
        2876
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1210": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1211": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x303"
    },
    "1214": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1216": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1217": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1218": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "SUB",
      "path": "8"
    },
    "1219": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xC0"
    },
    "1221": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1222": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "LT",
      "path": "8"
    },
    "1223": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1224": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D0"
    },
    "1227": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1228": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1230": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1231": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1232": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1233": {
      "op": "POP"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1240": {
      "op": "SHL"
    },
    "1241": {
      "op": "SUB"
    },
    "1242": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1243": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "1244": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "AND",
      "path": "8"
    },
    "1245": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1246": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1248": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1249": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "ADD",
      "path": "8"
    },
    "1250": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "1251": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1252": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1254": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1255": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "ADD",
      "path": "8"
    },
    "1256": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "1257": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1258": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "1260": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "1262": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1263": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "ADD",
      "path": "8"
    },
    "1264": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "1265": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "AND",
      "path": "8"
    },
    "1266": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1267": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "1269": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1270": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "ADD",
      "path": "8"
    },
    "1271": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "1272": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1273": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA0"
    },
    "1275": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "ADD",
      "path": "8"
    },
    "1276": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "1277": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC99"
    },
    "1280": {
      "fn": "GMGToken.delegateBySig",
      "jump": "i",
      "offset": [
        1576,
        2638
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1281": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1282": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23D"
    },
    "1285": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1287": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1288": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1289": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "SUB",
      "path": "3"
    },
    "1290": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1292": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1293": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "LT",
      "path": "3"
    },
    "1294": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1295": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x517"
    },
    "1298": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1299": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1301": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1302": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1303": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1304": {
      "op": "POP"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1311": {
      "op": "SHL"
    },
    "1312": {
      "op": "SUB"
    },
    "1313": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1314": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1315": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1316": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "AND",
      "path": "3"
    },
    "1317": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1318": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1320": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "ADD",
      "path": "3"
    },
    "1321": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1322": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "AND",
      "path": "3"
    },
    "1323": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF0C"
    },
    "1326": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3915,
        4064
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1327": {
      "offset": [
        891,
        1016
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1328": {
      "fn": "ERC20.allowance",
      "offset": [
        891,
        1016
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x23D"
    },
    "1331": {
      "fn": "ERC20.allowance",
      "offset": [
        891,
        1016
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF37"
    },
    "1334": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        891,
        1016
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1335": {
      "offset": [
        605,
        673
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1336": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x569"
    },
    "1339": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1341": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1342": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1343": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SUB",
      "path": "8"
    },
    "1344": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1346": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1347": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "LT",
      "path": "8"
    },
    "1348": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1349": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x54D"
    },
    "1352": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1353": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1355": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1356": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1357": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1358": {
      "op": "POP"
    },
    "1359": {
      "offset": [
        605,
        673
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1360": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1367": {
      "op": "SHL"
    },
    "1368": {
      "op": "SUB"
    },
    "1369": {
      "offset": [
        605,
        673
      ],
      "op": "AND",
      "path": "8"
    },
    "1370": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1371": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1373": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "ADD",
      "path": "8"
    },
    "1374": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "1375": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "1380": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "AND",
      "path": "8"
    },
    "1381": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF5B"
    },
    "1384": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        605,
        673
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1385": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1386": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1388": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1389": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1390": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "1395": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1396": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1397": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "AND",
      "path": "8"
    },
    "1398": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1399": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1400": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1402": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1403": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "ADD",
      "path": "8"
    },
    "1404": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1405": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1406": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1407": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1408": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1409": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1410": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1411": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1412": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1413": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SUB",
      "path": "8"
    },
    "1414": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "ADD",
      "path": "8"
    },
    "1415": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1416": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "RETURN",
      "path": "8"
    },
    "1417": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x303"
    },
    "1421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1423": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1424": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1425": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "SUB",
      "path": "1"
    },
    "1426": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1428": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1429": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "LT",
      "path": "1"
    },
    "1430": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1431": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x59F"
    },
    "1434": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1435": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1437": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1438": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1439": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1440": {
      "op": "POP"
    },
    "1441": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1448": {
      "op": "SHL"
    },
    "1449": {
      "op": "SUB"
    },
    "1450": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "AND",
      "path": "1"
    },
    "1451": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF88"
    },
    "1454": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1455": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1456": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x3"
    },
    "1458": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1459": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1460": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1462": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1463": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1464": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1466": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1468": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1472": {
      "op": "NOT"
    },
    "1473": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1476": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1478": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1479": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "AND",
      "path": "3"
    },
    "1480": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1481": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MUL",
      "path": "3"
    },
    "1482": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1483": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1484": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1485": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "AND",
      "path": "3"
    },
    "1486": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1487": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1488": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1489": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DIV",
      "path": "3"
    },
    "1490": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1491": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1492": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1493": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1494": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1495": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DIV",
      "path": "3"
    },
    "1496": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1497": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MUL",
      "path": "3"
    },
    "1498": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1499": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1500": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1501": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1502": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1503": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1504": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1505": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1506": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1507": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1508": {
      "fn": "ERC20.name",
      "offset": [
        2203,
        2216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1510": {
      "fn": "ERC20.name",
      "offset": [
        2203,
        2216
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1511": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1512": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1513": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1514": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2240
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1515": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1516": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1517": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1518": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1519": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1520": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1521": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x63B"
    },
    "1524": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1525": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1526": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1528": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "LT",
      "path": "3"
    },
    "1529": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x610"
    },
    "1532": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1533": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1536": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1537": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1538": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1539": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DIV",
      "path": "3"
    },
    "1540": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MUL",
      "path": "3"
    },
    "1541": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1542": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1543": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1544": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1546": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1547": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1548": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x63B"
    },
    "1551": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1552": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1553": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1554": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1555": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1556": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1557": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1559": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1560": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1562": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1564": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1565": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1566": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1567": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1568": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1569": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1570": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1571": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1572": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1574": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1575": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1576": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1578": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1579": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1580": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1581": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "GT",
      "path": "3"
    },
    "1582": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x61E"
    },
    "1585": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1586": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1587": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1588": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SUB",
      "path": "3"
    },
    "1589": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1591": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "AND",
      "path": "3"
    },
    "1592": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1593": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1594": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1595": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1596": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1597": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1598": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1599": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1600": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1601": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1602": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1603": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1604": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1605": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1606": {
      "fn": "ERC20.approve",
      "offset": [
        4285,
        4289
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1608": {
      "fn": "ERC20.approve",
      "offset": [
        4301,
        4340
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 1,
      "value": "0x659"
    },
    "1611": {
      "fn": "ERC20.approve",
      "offset": [
        4310,
        4322
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x652"
    },
    "1614": {
      "fn": "ERC20.approve",
      "offset": [
        4310,
        4320
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A3"
    },
    "1617": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4310,
        4322
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1618": {
      "fn": "ERC20.approve",
      "offset": [
        4310,
        4322
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1619": {
      "fn": "ERC20.approve",
      "offset": [
        4324,
        4331
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1620": {
      "fn": "ERC20.approve",
      "offset": [
        4333,
        4339
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1621": {
      "fn": "ERC20.approve",
      "offset": [
        4301,
        4309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A7"
    },
    "1624": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4301,
        4340
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1625": {
      "fn": "ERC20.approve",
      "offset": [
        4301,
        4340
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1626": {
      "op": "POP"
    },
    "1627": {
      "fn": "ERC20.approve",
      "offset": [
        4357,
        4361
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x1"
    },
    "1629": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1630": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1631": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1632": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "POP",
      "path": "3"
    },
    "1633": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "POP",
      "path": "3"
    },
    "1634": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1635": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1636": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3288,
        3300
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x2"
    },
    "1638": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3288,
        3300
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1639": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1640": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3209,
        3307
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1641": {
      "offset": [
        733,
        885
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1642": {
      "offset": [
        783,
        885
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
    },
    "1675": {
      "offset": [
        733,
        885
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1676": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        733,
        885
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1677": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1678": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4941,
        4945
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1680": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4957,
        4993
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 4,
      "value": "0x69A"
    },
    "1683": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4967,
        4973
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1684": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4975,
        4984
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1685": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4986,
        4992
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1686": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4957,
        4966
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1193"
    },
    "1689": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4957,
        4993
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1690": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4957,
        4993
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1691": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5124
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 5,
      "value": "0x70A"
    },
    "1694": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5012,
        5018
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1695": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5020,
        5032
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A6"
    },
    "1698": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5020,
        5030
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A3"
    },
    "1701": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5020,
        5032
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1702": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5020,
        5032
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1703": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x705"
    },
    "1706": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5072,
        5078
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1707": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1709": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1710": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1711": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1713": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "ADD",
      "path": "3"
    },
    "1714": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1716": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1717": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1718": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x28"
    },
    "1720": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1721": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1722": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1724": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "ADD",
      "path": "3"
    },
    "1725": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B4"
    },
    "1728": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x28"
    },
    "1730": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1731": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1738": {
      "op": "SHL"
    },
    "1739": {
      "op": "SUB"
    },
    "1740": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "DUP11",
      "path": "3"
    },
    "1741": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "AND",
      "path": "3"
    },
    "1742": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1744": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1745": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1746": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1747": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1749": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1751": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1752": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1754": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1755": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1756": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1757": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5066
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E4"
    },
    "1760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5064
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A3"
    },
    "1763": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5054,
        5066
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1764": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5066
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1771": {
      "op": "SHL"
    },
    "1772": {
      "op": "SUB"
    },
    "1773": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "AND",
      "path": "3"
    },
    "1774": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1775": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1776": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1778": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1779": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "ADD",
      "path": "3"
    },
    "1780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1781": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1782": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1783": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1784": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1786": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "ADD",
      "path": "3"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1789": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1790": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1791": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1792": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1793": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5071
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12EE"
    },
    "1796": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5034,
        5123
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1797": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1798": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5011
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A7"
    },
    "1801": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5003,
        5124
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1802": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5124
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1803": {
      "op": "POP"
    },
    "1804": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5141,
        5145
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x1"
    },
    "1806": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1807": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1808": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "POP",
      "path": "3"
    },
    "1809": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "POP",
      "path": "3"
    },
    "1810": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "POP",
      "path": "3"
    },
    "1811": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4835,
        5152
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1812": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1813": {
      "fn": "ERC20.decimals",
      "offset": [
        3133,
        3142
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 7,
      "value": "0x5"
    },
    "1815": {
      "fn": "ERC20.decimals",
      "offset": [
        3133,
        3142
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1816": {
      "fn": "ERC20.decimals",
      "offset": [
        3133,
        3142
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1818": {
      "fn": "ERC20.decimals",
      "offset": [
        3133,
        3142
      ],
      "op": "AND",
      "path": "3"
    },
    "1819": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1820": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        3068,
        3149
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1821": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1822": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5635,
        5639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1824": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5651,
        5734
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 8,
      "value": "0x659"
    },
    "1827": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5660,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x72A"
    },
    "1830": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5660,
        5670
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A3"
    },
    "1833": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5660,
        5672
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1834": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5660,
        5672
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1835": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5674,
        5681
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1836": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x705"
    },
    "1839": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5722,
        5732
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1840": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5694
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1842": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1844": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5695,
        5707
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x73B"
    },
    "1847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5695,
        5705
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A3"
    },
    "1850": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5695,
        5707
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1851": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5695,
        5707
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1858": {
      "op": "SHL"
    },
    "1859": {
      "op": "SUB"
    },
    "1860": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1861": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1862": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "AND",
      "path": "3"
    },
    "1863": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1864": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1865": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1867": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1868": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1869": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "ADD",
      "path": "3"
    },
    "1870": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1871": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1872": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1873": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1874": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1876": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1877": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1878": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "ADD",
      "path": "3"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1881": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1882": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1883": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1884": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1885": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "DUP13",
      "path": "3"
    },
    "1886": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "AND",
      "path": "3"
    },
    "1887": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1888": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1889": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1890": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1891": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1892": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1893": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1894": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1895": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5721
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1385"
    },
    "1898": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5683,
        5733
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1899": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1900": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x773"
    },
    "1903": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10A3"
    },
    "1906": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1907": {
      "fn": "GMGToken.mint",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1908": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "1910": {
      "fn": "GMGToken.mint",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1911": {
      "fn": "GMGToken.mint",
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1914": {
      "fn": "GMGToken.mint",
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1915": {
      "fn": "GMGToken.mint",
      "offset": [
        1287,
        1293
      ],
      "op": "DIV",
      "path": "1"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1922": {
      "op": "SHL"
    },
    "1923": {
      "op": "SUB"
    },
    "1924": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1925": {
      "fn": "GMGToken.mint",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1926": {
      "fn": "GMGToken.mint",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "1927": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1928": {
      "fn": "GMGToken.mint",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "1929": {
      "fn": "GMGToken.mint",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "1930": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7DA"
    },
    "1933": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1934": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1936": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1937": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1944": {
      "op": "SHL"
    },
    "1945": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1946": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1947": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1949": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1951": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1952": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1953": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1954": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1955": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1956": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1958": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1959": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1960": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1961": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1994": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1996": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1997": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1998": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1999": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2000": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2001": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2002": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2003": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2004": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "2005": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2007": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2008": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2009": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2010": {
      "fn": "GMGToken.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2011": {
      "fn": "GMGToken.mint",
      "offset": [
        377,
        396
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 9,
      "value": "0x7E4"
    },
    "2014": {
      "fn": "GMGToken.mint",
      "offset": [
        383,
        386
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2015": {
      "fn": "GMGToken.mint",
      "offset": [
        388,
        395
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2016": {
      "fn": "GMGToken.mint",
      "offset": [
        377,
        382
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13DF"
    },
    "2019": {
      "fn": "GMGToken.mint",
      "jump": "i",
      "offset": [
        377,
        396
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2020": {
      "fn": "GMGToken.mint",
      "offset": [
        377,
        396
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2027": {
      "op": "SHL"
    },
    "2028": {
      "op": "SUB"
    },
    "2029": {
      "fn": "GMGToken.mint",
      "offset": [
        433,
        448
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 10
    },
    "2030": {
      "fn": "GMGToken.mint",
      "offset": [
        433,
        448
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2031": {
      "fn": "GMGToken.mint",
      "offset": [
        433,
        448
      ],
      "op": "AND",
      "path": "8"
    },
    "2032": {
      "fn": "GMGToken.mint",
      "offset": [
        429,
        430
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2034": {
      "fn": "GMGToken.mint",
      "offset": [
        433,
        448
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2035": {
      "fn": "GMGToken.mint",
      "offset": [
        433,
        448
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2036": {
      "fn": "GMGToken.mint",
      "offset": [
        433,
        448
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2037": {
      "fn": "GMGToken.mint",
      "offset": [
        433,
        443
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "2039": {
      "fn": "GMGToken.mint",
      "offset": [
        433,
        448
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2041": {
      "fn": "GMGToken.mint",
      "offset": [
        433,
        448
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2042": {
      "fn": "GMGToken.mint",
      "offset": [
        433,
        448
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2044": {
      "fn": "GMGToken.mint",
      "offset": [
        433,
        448
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2045": {
      "fn": "GMGToken.mint",
      "offset": [
        433,
        448
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2046": {
      "fn": "GMGToken.mint",
      "offset": [
        433,
        448
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2047": {
      "fn": "GMGToken.mint",
      "offset": [
        406,
        458
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x809"
    },
    "2050": {
      "fn": "GMGToken.mint",
      "offset": [
        406,
        458
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2051": {
      "fn": "GMGToken.mint",
      "offset": [
        433,
        448
      ],
      "op": "AND",
      "path": "8"
    },
    "2052": {
      "fn": "GMGToken.mint",
      "offset": [
        450,
        457
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2053": {
      "fn": "GMGToken.mint",
      "offset": [
        406,
        420
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14CF"
    },
    "2056": {
      "fn": "GMGToken.mint",
      "jump": "i",
      "offset": [
        406,
        458
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2057": {
      "fn": "GMGToken.mint",
      "offset": [
        406,
        458
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2058": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "POP",
      "path": "8"
    },
    "2059": {
      "fn": "GMGToken.mint",
      "offset": [
        306,
        465
      ],
      "op": "POP",
      "path": "8"
    },
    "2060": {
      "fn": "GMGToken.mint",
      "jump": "o",
      "offset": [
        306,
        465
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2061": {
      "fn": "GMGToken.delegates",
      "offset": [
        1347,
        1462
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2068": {
      "op": "SHL"
    },
    "2069": {
      "op": "SUB"
    },
    "2070": {
      "fn": "GMGToken.delegates",
      "offset": [
        1434,
        1455
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 11
    },
    "2071": {
      "fn": "GMGToken.delegates",
      "offset": [
        1434,
        1455
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2072": {
      "fn": "GMGToken.delegates",
      "offset": [
        1434,
        1455
      ],
      "op": "AND",
      "path": "8"
    },
    "2073": {
      "fn": "GMGToken.delegates",
      "offset": [
        1408,
        1415
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2075": {
      "fn": "GMGToken.delegates",
      "offset": [
        1434,
        1455
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2076": {
      "fn": "GMGToken.delegates",
      "offset": [
        1434,
        1455
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2077": {
      "fn": "GMGToken.delegates",
      "offset": [
        1434,
        1455
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2078": {
      "fn": "GMGToken.delegates",
      "offset": [
        1434,
        1444
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "2080": {
      "fn": "GMGToken.delegates",
      "offset": [
        1434,
        1455
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2082": {
      "fn": "GMGToken.delegates",
      "offset": [
        1434,
        1455
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2083": {
      "fn": "GMGToken.delegates",
      "offset": [
        1434,
        1455
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2085": {
      "fn": "GMGToken.delegates",
      "offset": [
        1434,
        1455
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2086": {
      "fn": "GMGToken.delegates",
      "offset": [
        1434,
        1455
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2087": {
      "fn": "GMGToken.delegates",
      "offset": [
        1434,
        1455
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2088": {
      "fn": "GMGToken.delegates",
      "offset": [
        1434,
        1455
      ],
      "op": "AND",
      "path": "8"
    },
    "2089": {
      "fn": "GMGToken.delegates",
      "offset": [
        1434,
        1455
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2090": {
      "fn": "GMGToken.delegates",
      "jump": "o",
      "offset": [
        1347,
        1462
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2091": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2092": {
      "fn": "GMGToken.delegate",
      "offset": [
        1531,
        1563
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 12,
      "value": "0x835"
    },
    "2095": {
      "fn": "GMGToken.delegate",
      "offset": [
        1541,
        1551
      ],
      "op": "CALLER",
      "path": "8"
    },
    "2096": {
      "fn": "GMGToken.delegate",
      "offset": [
        1553,
        1562
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2097": {
      "fn": "GMGToken.delegate",
      "offset": [
        1531,
        1540
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1611"
    },
    "2100": {
      "fn": "GMGToken.delegate",
      "jump": "i",
      "offset": [
        1531,
        1563
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2101": {
      "fn": "GMGToken.delegate",
      "offset": [
        1531,
        1563
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2102": {
      "fn": "GMGToken.delegate",
      "offset": [
        1468,
        1570
      ],
      "op": "POP",
      "path": "8"
    },
    "2103": {
      "fn": "GMGToken.delegate",
      "jump": "o",
      "offset": [
        1468,
        1570
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2104": {
      "offset": [
        679,
        727
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2105": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "2107": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2109": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2110": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2112": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2113": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2114": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2115": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2117": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2118": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2119": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2120": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "2125": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "AND",
      "path": "8"
    },
    "2126": {
      "fn": "GMGToken.delegate",
      "offset": [
        679,
        727
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2127": {
      "fn": "GMGToken.delegate",
      "jump": "o",
      "offset": [
        679,
        727
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2128": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2135": {
      "op": "SHL"
    },
    "2136": {
      "op": "SUB"
    },
    "2137": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "AND",
      "path": "3",
      "statement": 13
    },
    "2138": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3431,
        3438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2140": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2141": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2142": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2143": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2145": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2146": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2147": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2148": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2150": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2151": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2152": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2153": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2154": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3365,
        3482
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2155": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2156": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "2159": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10A3"
    },
    "2162": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2163": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2164": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2166": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2167": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2170": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2171": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "DIV",
      "path": "1"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2178": {
      "op": "SHL"
    },
    "2179": {
      "op": "SUB"
    },
    "2180": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2181": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2182": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "2183": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2184": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "2185": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "2186": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8DA"
    },
    "2189": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2190": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2192": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2193": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2194": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2200": {
      "op": "SHL"
    },
    "2201": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2202": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2203": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2205": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2207": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2208": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2209": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2210": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2211": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2212": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2214": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2215": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2216": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2217": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2250": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2252": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2253": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2254": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2255": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2256": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2257": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2258": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2259": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2260": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "2261": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2263": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2264": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2265": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2266": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2267": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x5"
    },
    "2269": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2270": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2272": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2273": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1812,
        1813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2275": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1812,
        1813
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2276": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2279": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2280": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "DIV",
      "path": "1"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2287": {
      "op": "SHL"
    },
    "2288": {
      "op": "SUB"
    },
    "2289": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "AND",
      "path": "1"
    },
    "2290": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2291": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2324": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2325": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1812,
        1813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2326": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1812,
        1813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2327": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2328": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1831
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 15,
      "value": "0x5"
    },
    "2330": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2331": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2332": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2339": {
      "op": "SHL"
    },
    "2340": {
      "op": "SUB"
    },
    "2341": {
      "op": "NOT"
    },
    "2342": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "AND",
      "path": "1"
    },
    "2343": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2344": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2345": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2346": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2347": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2990,
        2997
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2349": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3048,
        3060
      ],
      "op": "NUMBER",
      "path": "8",
      "statement": 16
    },
    "2350": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3034,
        3045
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2351": {
      "branch": 67,
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3034,
        3060
      ],
      "op": "LT",
      "path": "8"
    },
    "2352": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x96A"
    },
    "2355": {
      "branch": 67,
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2356": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2358": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2359": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2365": {
      "op": "SHL"
    },
    "2366": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2367": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2368": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2370": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "ADD",
      "path": "8"
    },
    "2371": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2372": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2373": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2375": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "ADD",
      "path": "8"
    },
    "2376": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2377": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2378": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "SUB",
      "path": "8"
    },
    "2379": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2380": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2381": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x28"
    },
    "2383": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2384": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2385": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2387": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "ADD",
      "path": "8"
    },
    "2388": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2389": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A28"
    },
    "2392": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x28"
    },
    "2394": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2395": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "CODECOPY",
      "path": "8"
    },
    "2396": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2398": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "ADD",
      "path": "8"
    },
    "2399": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2400": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "POP",
      "path": "8"
    },
    "2401": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "POP",
      "path": "8"
    },
    "2402": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2404": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2405": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2406": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2407": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "SUB",
      "path": "8"
    },
    "2408": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2409": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2410": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3013,
        3126
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2417": {
      "op": "SHL"
    },
    "2418": {
      "op": "SUB"
    },
    "2419": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3159,
        3182
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2420": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3159,
        3182
      ],
      "op": "AND",
      "path": "8"
    },
    "2421": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3137,
        3156
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2423": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3159,
        3182
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2424": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3159,
        3182
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2425": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3159,
        3182
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2426": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3159,
        3173
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "2428": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3159,
        3182
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2430": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3159,
        3182
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2431": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3159,
        3182
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2433": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3159,
        3182
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2434": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3159,
        3182
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2435": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3159,
        3182
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2436": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3159,
        3182
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "2441": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3159,
        3182
      ],
      "op": "AND",
      "path": "8"
    },
    "2442": {
      "branch": 68,
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3196,
        3213
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2443": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3192,
        3248
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x998"
    },
    "2446": {
      "branch": 68,
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3192,
        3248
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2447": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3236,
        3237
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 17,
      "value": "0x0"
    },
    "2449": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3229,
        3237
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2450": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3229,
        3237
      ],
      "op": "POP",
      "path": "8"
    },
    "2451": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3229,
        3237
      ],
      "op": "POP",
      "path": "8"
    },
    "2452": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3229,
        3237
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x65D"
    },
    "2455": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3229,
        3237
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2456": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3192,
        3248
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2463": {
      "op": "SHL"
    },
    "2464": {
      "op": "SUB"
    },
    "2465": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3325
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2466": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3325
      ],
      "op": "AND",
      "path": "8"
    },
    "2467": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3325
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2469": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3325
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2470": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3325
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2471": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3325
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2472": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3316
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "2474": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3325
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2476": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3325
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2477": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3325
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2478": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3325
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2479": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3325
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2481": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3325
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2482": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3325
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2483": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3325
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2484": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3343
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2491": {
      "op": "NOT"
    },
    "2492": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3326,
        3342
      ],
      "op": "DUP7",
      "path": "8"
    },
    "2493": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3326,
        3342
      ],
      "op": "ADD",
      "path": "8"
    },
    "2494": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3343
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2495": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3343
      ],
      "op": "AND",
      "path": "8"
    },
    "2496": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3343
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2497": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3343
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2498": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3343
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2499": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3343
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2500": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3343
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2501": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3343
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2502": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3343
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2503": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3353
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2504": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3353
      ],
      "op": "AND",
      "path": "8"
    },
    "2505": {
      "branch": 69,
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3305,
        3368
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2506": {
      "op": "LT"
    },
    "2507": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3301,
        3446
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA07"
    },
    "2510": {
      "branch": 69,
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3301,
        3446
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2517": {
      "op": "SHL"
    },
    "2518": {
      "op": "SUB"
    },
    "2519": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3411
      ],
      "op": "DUP5",
      "path": "8",
      "statement": 18
    },
    "2520": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3411
      ],
      "op": "AND",
      "path": "8"
    },
    "2521": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3411
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2523": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3411
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2524": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3411
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2525": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3411
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2526": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3402
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "2528": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3411
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2530": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3411
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2531": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3411
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2532": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3411
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2533": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3411
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2535": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3411
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2536": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3411
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2537": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3411
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2540": {
      "op": "NOT"
    },
    "2541": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3412,
        3428
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "2542": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3412,
        3428
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2543": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3412,
        3428
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "2544": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3412,
        3428
      ],
      "op": "ADD",
      "path": "8"
    },
    "2545": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3429
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "2550": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3429
      ],
      "op": "AND",
      "path": "8"
    },
    "2551": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3429
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2552": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3429
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2553": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3429
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2554": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3429
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2555": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3429
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2556": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3429
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2557": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3427,
        3428
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2559": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3435
      ],
      "op": "ADD",
      "path": "8"
    },
    "2560": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3435
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2561": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3391,
        3435
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2562": {
      "op": "POP"
    },
    "2563": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3384,
        3435
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x65D"
    },
    "2566": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3384,
        3435
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2567": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3301,
        3446
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2574": {
      "op": "SHL"
    },
    "2575": {
      "op": "SUB"
    },
    "2576": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3524
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2577": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3524
      ],
      "op": "AND",
      "path": "8"
    },
    "2578": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3524
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2580": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3524
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2581": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3524
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2582": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3524
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2583": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3515
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "2585": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3524
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2587": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3524
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2588": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3524
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2589": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3524
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2590": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3524
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2592": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3524
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2593": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3524
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2594": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3524
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2595": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3527
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2596": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3527
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2597": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3527
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2598": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3527
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2599": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3527
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2600": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3527
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2601": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3527
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2602": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3527
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2603": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3537
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2604": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3527
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "2609": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3537
      ],
      "op": "AND",
      "path": "8"
    },
    "2610": {
      "branch": 70,
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3504,
        3551
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2611": {
      "op": "LT"
    },
    "2612": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3500,
        3586
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2613": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3500,
        3586
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA42"
    },
    "2616": {
      "branch": 70,
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3500,
        3586
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2617": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3574,
        3575
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 19,
      "value": "0x0"
    },
    "2619": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3567,
        3575
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2620": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3567,
        3575
      ],
      "op": "POP",
      "path": "8"
    },
    "2621": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3567,
        3575
      ],
      "op": "POP",
      "path": "8"
    },
    "2622": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3567,
        3575
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x65D"
    },
    "2625": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3567,
        3575
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2626": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3500,
        3586
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2627": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3596,
        3608
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2631": {
      "op": "NOT"
    },
    "2632": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3637,
        3653
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2633": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3637,
        3653
      ],
      "op": "ADD",
      "path": "8"
    },
    "2634": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3663,
        4081
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2635": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3678,
        3683
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2636": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3670,
        3683
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "2641": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3670,
        3683
      ],
      "op": "AND",
      "path": "8"
    },
    "2642": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3670,
        3675
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2643": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3670,
        3683
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "2648": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3670,
        3683
      ],
      "op": "AND",
      "path": "8"
    },
    "2649": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3670,
        3683
      ],
      "op": "GT",
      "path": "8"
    },
    "2650": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3663,
        4081
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2651": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3663,
        4081
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAFB"
    },
    "2654": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3663,
        4081
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2655": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3741,
        3742
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2657": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3724,
        3737
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2658": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3724,
        3737
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2659": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3724,
        3737
      ],
      "op": "SUB",
      "path": "8"
    },
    "2660": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3723,
        3742
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "2665": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3723,
        3742
      ],
      "op": "AND",
      "path": "8"
    },
    "2666": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3723,
        3742
      ],
      "op": "DIV",
      "path": "8"
    },
    "2667": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3715,
        3742
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2668": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3715,
        3742
      ],
      "op": "SUB",
      "path": "8"
    },
    "2669": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3803
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA74"
    },
    "2672": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3803
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18AF"
    },
    "2675": {
      "fn": "GMGToken.getPriorVotes",
      "jump": "i",
      "offset": [
        3783,
        3803
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2676": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3803
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2677": {
      "op": "POP"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2684": {
      "op": "SHL"
    },
    "2685": {
      "op": "SUB"
    },
    "2686": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3826
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2687": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3826
      ],
      "op": "AND",
      "path": "8"
    },
    "2688": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3826
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2690": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3826
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2691": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3826
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2692": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3826
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2693": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3817
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "2695": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3826
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2697": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3826
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2698": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3826
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2699": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3826
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2700": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3826
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2702": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3826
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2703": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3826
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2704": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3826
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2705": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3834
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "2710": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3834
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2711": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3834
      ],
      "op": "DUP7",
      "path": "8"
    },
    "2712": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3834
      ],
      "op": "AND",
      "path": "8"
    },
    "2713": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3834
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2714": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3834
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2715": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3834
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2716": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3834
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2717": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3834
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2718": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3834
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2719": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3834
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2720": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3834
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2721": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3806,
        3834
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2722": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2723": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2724": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2725": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2726": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "ADD",
      "path": "8"
    },
    "2727": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2728": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2729": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2730": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2731": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2732": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2733": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2734": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "AND",
      "path": "8"
    },
    "2735": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2736": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2737": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2738": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2740": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2741": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2742": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "ADD",
      "path": "8"
    },
    "2743": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2744": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2745": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2746": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "ADD",
      "path": "8"
    },
    "2747": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2748": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2749": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2750": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2751": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3783,
        3834
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2752": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3852,
        3879
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2753": {
      "branch": 71,
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3852,
        3879
      ],
      "op": "EQ",
      "path": "8"
    },
    "2754": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3848,
        4071
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2755": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3848,
        4071
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAD6"
    },
    "2758": {
      "branch": 71,
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3848,
        4071
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2759": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3906,
        3914
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 20,
      "value": "0x20"
    },
    "2761": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3906,
        3914
      ],
      "op": "ADD",
      "path": "8"
    },
    "2762": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3906,
        3914
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2763": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3906,
        3914
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "2764": {
      "op": "POP"
    },
    "2765": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3899,
        3914
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x65D"
    },
    "2768": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3899,
        3914
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2769": {
      "op": "POP"
    },
    "2770": {
      "op": "POP"
    },
    "2771": {
      "op": "POP"
    },
    "2772": {
      "op": "POP"
    },
    "2773": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3899,
        3914
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2774": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3848,
        4071
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2775": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3939,
        3951
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2776": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3939,
        3951
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2777": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3939,
        3965
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "2782": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3939,
        3965
      ],
      "op": "AND",
      "path": "8"
    },
    "2783": {
      "branch": 72,
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3939,
        3965
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2784": {
      "op": "GT"
    },
    "2785": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3935,
        4071
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2786": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3935,
        4071
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAED"
    },
    "2789": {
      "branch": 72,
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3935,
        4071
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2790": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3993,
        3999
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 21
    },
    "2791": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3985,
        3999
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2792": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3985,
        3999
      ],
      "op": "POP",
      "path": "8"
    },
    "2793": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3935,
        4071
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAF4"
    },
    "2796": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3935,
        4071
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2797": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3935,
        4071
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2798": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4055,
        4056
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 22,
      "value": "0x1"
    },
    "2800": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4046,
        4052
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2801": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4046,
        4056
      ],
      "op": "SUB",
      "path": "8"
    },
    "2802": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4038,
        4056
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2803": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4038,
        4056
      ],
      "op": "POP",
      "path": "8"
    },
    "2804": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3935,
        4071
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2805": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3663,
        4081
      ],
      "op": "POP",
      "path": "8"
    },
    "2806": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3663,
        4081
      ],
      "op": "POP",
      "path": "8"
    },
    "2807": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3663,
        4081
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA4A"
    },
    "2810": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3663,
        4081
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2811": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        3663,
        4081
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2812": {
      "op": "POP"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2819": {
      "op": "SHL"
    },
    "2820": {
      "op": "SUB"
    },
    "2821": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4117
      ],
      "op": "DUP6",
      "path": "8",
      "statement": 23
    },
    "2822": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4117
      ],
      "op": "AND",
      "path": "8"
    },
    "2823": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4117
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2825": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4117
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2826": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4117
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2827": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4117
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2828": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4108
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "2830": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4117
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2832": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4117
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2833": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4117
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2834": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4117
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2835": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4117
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2837": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4117
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2838": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4117
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2839": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4117
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2840": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4124
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "2845": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4124
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2846": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4124
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "2847": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4124
      ],
      "op": "AND",
      "path": "8"
    },
    "2848": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4124
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2849": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4124
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2850": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4124
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2851": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4124
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2852": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4124
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2853": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4124
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2854": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4130
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2856": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4130
      ],
      "op": "ADD",
      "path": "8"
    },
    "2857": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4130
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2858": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        4097,
        4130
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2859": {
      "op": "POP"
    },
    "2860": {
      "op": "POP"
    },
    "2861": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2862": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2863": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "POP",
      "path": "8"
    },
    "2864": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        2882,
        4137
      ],
      "op": "POP",
      "path": "8"
    },
    "2865": {
      "fn": "GMGToken.getPriorVotes",
      "jump": "o",
      "offset": [
        2882,
        4137
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2866": {
      "offset": [
        1022,
        1063
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2867": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "2869": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2871": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2872": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2874": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2875": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2876": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2877": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2879": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2880": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2881": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2882": {
      "fn": "GMGToken.getPriorVotes",
      "offset": [
        1022,
        1063
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2883": {
      "fn": "GMGToken.getPriorVotes",
      "jump": "o",
      "offset": [
        1022,
        1063
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2884": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2885": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 24,
      "value": "0x5"
    },
    "2887": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2888": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2891": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2892": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "DIV",
      "path": "1"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2899": {
      "op": "SHL"
    },
    "2900": {
      "op": "SUB"
    },
    "2901": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "AND",
      "path": "1"
    },
    "2902": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2903": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2904": {
      "fn": "ERC20.symbol",
      "offset": [
        2360,
        2445
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2905": {
      "fn": "ERC20.symbol",
      "offset": [
        2431,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 25,
      "value": "0x4"
    },
    "2907": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2908": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2909": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2911": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2912": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2913": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2915": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2917": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2921": {
      "op": "NOT"
    },
    "2922": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2925": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2927": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2928": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "AND",
      "path": "3"
    },
    "2929": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2930": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "MUL",
      "path": "3"
    },
    "2931": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ADD",
      "path": "3"
    },
    "2932": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2933": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "2934": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "AND",
      "path": "3"
    },
    "2935": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2936": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2937": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2938": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DIV",
      "path": "3"
    },
    "2939": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2940": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2941": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ADD",
      "path": "3"
    },
    "2942": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2943": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2944": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DIV",
      "path": "3"
    },
    "2945": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2946": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "MUL",
      "path": "3"
    },
    "2947": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2948": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ADD",
      "path": "3"
    },
    "2949": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2950": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ADD",
      "path": "3"
    },
    "2951": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2952": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2953": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2954": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2955": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2956": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2957": {
      "fn": "ERC20.symbol",
      "offset": [
        2399,
        2412
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2959": {
      "fn": "ERC20.symbol",
      "offset": [
        2399,
        2412
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2960": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2961": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2962": {
      "fn": "ERC20.symbol",
      "offset": [
        2431,
        2438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2963": {
      "fn": "ERC20.symbol",
      "offset": [
        2431,
        2438
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2964": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2965": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ADD",
      "path": "3"
    },
    "2966": {
      "fn": "ERC20.symbol",
      "offset": [
        2431,
        2438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2967": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2968": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2969": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2970": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x63B"
    },
    "2973": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2974": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2975": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2977": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "LT",
      "path": "3"
    },
    "2978": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x610"
    },
    "2981": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2982": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2985": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2986": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2987": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2988": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DIV",
      "path": "3"
    },
    "2989": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "MUL",
      "path": "3"
    },
    "2990": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2991": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2992": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2993": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2995": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ADD",
      "path": "3"
    },
    "2996": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2997": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x63B"
    },
    "3000": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3001": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3002": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6342,
        6346
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3004": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6358,
        6487
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 26,
      "value": "0x659"
    },
    "3007": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6367,
        6379
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBC6"
    },
    "3010": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6367,
        6377
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A3"
    },
    "3013": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6367,
        6379
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3014": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6367,
        6379
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3015": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6381,
        6388
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3016": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x705"
    },
    "3019": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6429,
        6444
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3020": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3022": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3023": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3024": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3026": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "ADD",
      "path": "3"
    },
    "3027": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3029": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3030": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3031": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "3033": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3034": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3035": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3037": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "ADD",
      "path": "3"
    },
    "3038": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A97"
    },
    "3041": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "3043": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3044": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "3045": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3047": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3049": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6402,
        6414
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF0"
    },
    "3052": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6402,
        6412
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A3"
    },
    "3055": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6402,
        6414
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3056": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6402,
        6414
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3063": {
      "op": "SHL"
    },
    "3064": {
      "op": "SUB"
    },
    "3065": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3066": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3067": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "AND",
      "path": "3"
    },
    "3068": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3069": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3070": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3072": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3073": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3074": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "ADD",
      "path": "3"
    },
    "3075": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3076": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3077": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3078": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3079": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3081": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3082": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3083": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "ADD",
      "path": "3"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3086": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3087": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3088": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3089": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3090": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "DUP14",
      "path": "3"
    },
    "3091": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "AND",
      "path": "3"
    },
    "3092": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3093": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3094": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3095": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3096": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3097": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3098": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3099": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3100": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3101": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6428
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12EE"
    },
    "3104": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6390,
        6486
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3105": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3106": {
      "fn": "ERC20.transfer",
      "offset": [
        3771,
        3775
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3108": {
      "fn": "ERC20.transfer",
      "offset": [
        3787,
        3829
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 27,
      "value": "0x659"
    },
    "3111": {
      "fn": "ERC20.transfer",
      "offset": [
        3797,
        3809
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC2E"
    },
    "3114": {
      "fn": "ERC20.transfer",
      "offset": [
        3797,
        3807
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A3"
    },
    "3117": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3797,
        3809
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3118": {
      "fn": "ERC20.transfer",
      "offset": [
        3797,
        3809
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3119": {
      "fn": "ERC20.transfer",
      "offset": [
        3811,
        3820
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3120": {
      "fn": "ERC20.transfer",
      "offset": [
        3822,
        3828
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3121": {
      "fn": "ERC20.transfer",
      "offset": [
        3787,
        3796
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1193"
    },
    "3124": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3787,
        3829
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3125": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3132": {
      "op": "SHL"
    },
    "3133": {
      "op": "SUB"
    },
    "3134": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2750,
        2773
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3135": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2750,
        2773
      ],
      "op": "AND",
      "path": "8"
    },
    "3136": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2709,
        2716
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3138": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2750,
        2773
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3139": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2750,
        2773
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3140": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2750,
        2773
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3141": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2750,
        2764
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "3143": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2750,
        2773
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3145": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2750,
        2773
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3146": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2750,
        2773
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3148": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2750,
        2773
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3149": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2750,
        2773
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3150": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2750,
        2773
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3151": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2750,
        2773
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "3156": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2750,
        2773
      ],
      "op": "AND",
      "path": "8"
    },
    "3157": {
      "branch": 73,
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2802,
        2818
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 28
    },
    "3158": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2802,
        2869
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC60"
    },
    "3161": {
      "branch": 73,
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2802,
        2869
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3162": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2868,
        2869
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3164": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2802,
        2869
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC92"
    },
    "3167": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2802,
        2869
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3168": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2802,
        2869
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3175": {
      "op": "SHL"
    },
    "3176": {
      "op": "SUB"
    },
    "3177": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2841
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3178": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2841
      ],
      "op": "AND",
      "path": "8"
    },
    "3179": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2841
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3181": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2841
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3182": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2841
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3183": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2841
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3184": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "3186": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2841
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3188": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2841
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3189": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2841
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3190": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2841
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3191": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2841
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3193": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2841
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3194": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2841
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3195": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2841
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3196": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3203": {
      "op": "NOT"
    },
    "3204": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2842,
        2858
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3205": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2842,
        2858
      ],
      "op": "ADD",
      "path": "8"
    },
    "3206": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2859
      ],
      "op": "AND",
      "path": "8"
    },
    "3207": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2859
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3208": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2859
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3209": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2859
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3210": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2859
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3211": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2859
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3212": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2859
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3213": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2859
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3214": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2857,
        2858
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3216": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2865
      ],
      "op": "ADD",
      "path": "8"
    },
    "3217": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2821,
        2865
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3218": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2802,
        2869
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3219": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2783,
        2869
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3220": {
      "fn": "GMGToken.getCurrentVotes",
      "offset": [
        2644,
        2876
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3221": {
      "op": "POP"
    },
    "3222": {
      "op": "POP"
    },
    "3223": {
      "op": "POP"
    },
    "3224": {
      "fn": "GMGToken.getCurrentVotes",
      "jump": "o",
      "offset": [
        2644,
        2876
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3225": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3226": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1753,
        1776
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3228": {
      "offset": [
        783,
        885
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
    },
    "3261": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1879,
        1885
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCC4"
    },
    "3264": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1879,
        1883
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5AF"
    },
    "3267": {
      "fn": "GMGToken.delegateBySig",
      "jump": "i",
      "offset": [
        1879,
        1885
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3268": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1879,
        1885
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3269": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1863,
        1887
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3270": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1863,
        1887
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3271": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1863,
        1887
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3272": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1863,
        1887
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3274": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1863,
        1887
      ],
      "op": "ADD",
      "path": "8"
    },
    "3275": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1863,
        1887
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3276": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1905,
        1917
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCD3"
    },
    "3279": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1905,
        1915
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16A6"
    },
    "3282": {
      "fn": "GMGToken.delegateBySig",
      "jump": "i",
      "offset": [
        1905,
        1917
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3283": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1905,
        1917
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3284": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3286": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3287": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3288": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3290": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3291": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3292": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "ADD",
      "path": "8"
    },
    "3293": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "3294": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3295": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "3296": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3297": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3298": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3299": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "ADD",
      "path": "8"
    },
    "3300": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3301": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3302": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3303": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3304": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "3306": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3307": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "ADD",
      "path": "8"
    },
    "3308": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3309": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3310": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3311": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3312": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1943,
        1947
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "3313": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "3315": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3316": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3317": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "ADD",
      "path": "8"
    },
    "3318": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3319": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3320": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3321": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3322": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3323": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3324": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3325": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3326": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "SUB",
      "path": "8"
    },
    "3327": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3328": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3329": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "ADD",
      "path": "8"
    },
    "3330": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3331": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3332": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA0"
    },
    "3334": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3335": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "ADD",
      "path": "8"
    },
    "3336": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3337": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1802,
        1962
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3338": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1779,
        1972
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3339": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1779,
        1972
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3340": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1779,
        1972
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3341": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1779,
        1972
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3342": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1779,
        1972
      ],
      "op": "ADD",
      "path": "8"
    },
    "3343": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1779,
        1972
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3344": {
      "offset": [
        945,
        1016
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
    },
    "3377": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xC0"
    },
    "3379": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3380": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "ADD",
      "path": "8"
    },
    "3381": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3388": {
      "op": "SHL"
    },
    "3389": {
      "op": "SUB"
    },
    "3390": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "DUP12",
      "path": "8"
    },
    "3391": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "AND",
      "path": "8"
    },
    "3392": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "3394": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3395": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "ADD",
      "path": "8"
    },
    "3396": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3397": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "3400": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3401": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "ADD",
      "path": "8"
    },
    "3402": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "DUP11",
      "path": "8"
    },
    "3403": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3404": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3405": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x120"
    },
    "3408": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3409": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3410": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "ADD",
      "path": "8"
    },
    "3411": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "DUP11",
      "path": "8"
    },
    "3412": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3413": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3414": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3415": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3416": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3417": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3418": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "SUB",
      "path": "8"
    },
    "3419": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3420": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3421": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "ADD",
      "path": "8"
    },
    "3422": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3423": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3424": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x140"
    },
    "3427": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3428": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "ADD",
      "path": "8"
    },
    "3429": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3430": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2027,
        2084
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3431": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2004,
        2094
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3432": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2004,
        2094
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3433": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2004,
        2094
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3434": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2004,
        2094
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3435": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2004,
        2094
      ],
      "op": "ADD",
      "path": "8"
    },
    "3436": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2004,
        2094
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3437": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3442": {
      "op": "SHL"
    },
    "3443": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x160"
    },
    "3446": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3447": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "ADD",
      "path": "8"
    },
    "3448": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3449": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x162"
    },
    "3452": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3453": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "ADD",
      "path": "8"
    },
    "3454": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3455": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3456": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3457": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x182"
    },
    "3460": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3461": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3462": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "ADD",
      "path": "8"
    },
    "3463": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3464": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3465": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3466": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3467": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3468": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3469": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3470": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "SUB",
      "path": "8"
    },
    "3471": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3472": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3473": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "ADD",
      "path": "8"
    },
    "3474": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3475": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3476": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A2"
    },
    "3479": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3480": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "ADD",
      "path": "8"
    },
    "3481": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3482": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3483": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2145,
        2202
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3484": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2122,
        2212
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3485": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2122,
        2212
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3486": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2122,
        2212
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3487": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2122,
        2212
      ],
      "op": "DUP8",
      "path": "8"
    },
    "3488": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2122,
        2212
      ],
      "op": "ADD",
      "path": "8"
    },
    "3489": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2122,
        2212
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3490": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2122,
        2212
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3491": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2122,
        2212
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3492": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2122,
        2212
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3495": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3496": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3497": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3498": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3499": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C2"
    },
    "3502": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3503": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "ADD",
      "path": "8"
    },
    "3504": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3505": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3506": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3507": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3508": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3509": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3510": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "3512": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP12",
      "path": "8"
    },
    "3513": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "AND",
      "path": "8"
    },
    "3514": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E2"
    },
    "3517": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP8",
      "path": "8"
    },
    "3518": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "ADD",
      "path": "8"
    },
    "3519": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3520": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x202"
    },
    "3523": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3524": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "ADD",
      "path": "8"
    },
    "3525": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP11",
      "path": "8"
    },
    "3526": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3527": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3528": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x222"
    },
    "3531": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3532": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "ADD",
      "path": "8"
    },
    "3533": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP10",
      "path": "8"
    },
    "3534": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3535": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3536": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3537": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3538": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1779,
        1972
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3539": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1779,
        1972
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "3540": {
      "op": "POP"
    },
    "3541": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2004,
        2094
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3542": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2004,
        2094
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "3543": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2122,
        2212
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3544": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2122,
        2212
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3545": {
      "op": "SWAP1"
    },
    "3546": {
      "op": "SWAP3"
    },
    "3547": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3549": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3550": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x242"
    },
    "3553": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3554": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3555": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "ADD",
      "path": "8"
    },
    "3556": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3559": {
      "op": "NOT"
    },
    "3560": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3561": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "ADD",
      "path": "8"
    },
    "3562": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3563": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3564": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3565": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3566": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SUB",
      "path": "8"
    },
    "3567": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3568": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3569": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "ADD",
      "path": "8"
    },
    "3570": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3571": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3572": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "GAS",
      "path": "8"
    },
    "3573": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "3574": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3575": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3576": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3577": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE06"
    },
    "3580": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3581": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3582": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3584": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3585": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "3586": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3587": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3589": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3590": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3591": {
      "op": "POP"
    },
    "3592": {
      "op": "POP"
    },
    "3593": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3595": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3598": {
      "op": "NOT"
    },
    "3599": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "ADD",
      "path": "8"
    },
    "3600": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3601": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2243,
        2269
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3602": {
      "op": "POP"
    },
    "3603": {
      "op": "POP"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3610": {
      "op": "SHL"
    },
    "3611": {
      "op": "SUB"
    },
    "3612": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2300,
        2323
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 29
    },
    "3613": {
      "branch": 74,
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2300,
        2323
      ],
      "op": "AND",
      "path": "8"
    },
    "3614": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE58"
    },
    "3617": {
      "branch": 74,
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3618": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3620": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3627": {
      "op": "SHL"
    },
    "3628": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3629": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3630": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3632": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "ADD",
      "path": "8"
    },
    "3633": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3634": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3635": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3637": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "ADD",
      "path": "8"
    },
    "3638": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3639": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3640": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "SUB",
      "path": "8"
    },
    "3641": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3642": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3643": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x27"
    },
    "3645": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3646": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3647": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3649": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "ADD",
      "path": "8"
    },
    "3650": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3651": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x19DC"
    },
    "3654": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x27"
    },
    "3656": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3657": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "CODECOPY",
      "path": "8"
    },
    "3658": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3660": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "ADD",
      "path": "8"
    },
    "3661": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3662": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "POP",
      "path": "8"
    },
    "3663": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "POP",
      "path": "8"
    },
    "3664": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3666": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3667": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3668": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3669": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "SUB",
      "path": "8"
    },
    "3670": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3671": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3672": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2279,
        2388
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3679": {
      "op": "SHL"
    },
    "3680": {
      "op": "SUB"
    },
    "3681": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2445
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 30
    },
    "3682": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2445
      ],
      "op": "AND",
      "path": "8"
    },
    "3683": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2445
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3685": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2445
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3686": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2445
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3687": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2445
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3688": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2434
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "3690": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2445
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3692": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2445
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3693": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2445
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3695": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2445
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3696": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2445
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3697": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2447
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3698": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2447
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3699": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2447
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3701": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2447
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3702": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2447
      ],
      "op": "ADD",
      "path": "8"
    },
    "3703": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2447
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3704": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2447
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3705": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2428,
        2447
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3706": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2419,
        2447
      ],
      "op": "DUP10",
      "path": "8"
    },
    "3707": {
      "branch": 75,
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2419,
        2447
      ],
      "op": "EQ",
      "path": "8"
    },
    "3708": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEB6"
    },
    "3711": {
      "branch": 75,
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3712": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3714": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3715": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3721": {
      "op": "SHL"
    },
    "3722": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3723": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3724": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3726": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "ADD",
      "path": "8"
    },
    "3727": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3728": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3729": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3731": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "ADD",
      "path": "8"
    },
    "3732": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3733": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3734": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "SUB",
      "path": "8"
    },
    "3735": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3736": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3737": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x23"
    },
    "3739": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3740": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3741": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3743": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "ADD",
      "path": "8"
    },
    "3744": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3745": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A74"
    },
    "3748": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x23"
    },
    "3750": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3751": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "CODECOPY",
      "path": "8"
    },
    "3752": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3754": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "ADD",
      "path": "8"
    },
    "3755": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3756": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "POP",
      "path": "8"
    },
    "3757": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "POP",
      "path": "8"
    },
    "3758": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3760": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3761": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3762": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3763": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "SUB",
      "path": "8"
    },
    "3764": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3765": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3766": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2398,
        2508
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3767": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2533,
        2539
      ],
      "op": "DUP8",
      "path": "8",
      "statement": 31
    },
    "3768": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2526,
        2529
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "3769": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2526,
        2539
      ],
      "op": "GT",
      "path": "8"
    },
    "3770": {
      "branch": 76,
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2526,
        2539
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3771": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEF5"
    },
    "3774": {
      "branch": 76,
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3775": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3777": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3778": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3784": {
      "op": "SHL"
    },
    "3785": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3786": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3787": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3789": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "ADD",
      "path": "8"
    },
    "3790": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3791": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3792": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3794": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "ADD",
      "path": "8"
    },
    "3795": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3796": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3797": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "SUB",
      "path": "8"
    },
    "3798": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3799": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3800": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x27"
    },
    "3802": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3803": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3804": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3806": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "ADD",
      "path": "8"
    },
    "3807": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3808": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x198D"
    },
    "3811": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x27"
    },
    "3813": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3814": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "CODECOPY",
      "path": "8"
    },
    "3815": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3817": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "ADD",
      "path": "8"
    },
    "3818": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3819": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "POP",
      "path": "8"
    },
    "3820": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "POP",
      "path": "8"
    },
    "3821": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3823": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3824": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3825": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3826": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "SUB",
      "path": "8"
    },
    "3827": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3828": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3829": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2518,
        2583
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3830": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2600,
        2631
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 32,
      "value": "0xEFF"
    },
    "3833": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2610,
        2619
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3834": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2621,
        2630
      ],
      "op": "DUP12",
      "path": "8"
    },
    "3835": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2600,
        2609
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1611"
    },
    "3838": {
      "fn": "GMGToken.delegateBySig",
      "jump": "i",
      "offset": [
        2600,
        2631
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3839": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2600,
        2631
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3840": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2593,
        2631
      ],
      "op": "POP",
      "path": "8"
    },
    "3841": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2593,
        2631
      ],
      "op": "POP",
      "path": "8"
    },
    "3842": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2593,
        2631
      ],
      "op": "POP",
      "path": "8"
    },
    "3843": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        2593,
        2631
      ],
      "op": "POP",
      "path": "8"
    },
    "3844": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3845": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "POP",
      "path": "8"
    },
    "3846": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "POP",
      "path": "8"
    },
    "3847": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "POP",
      "path": "8"
    },
    "3848": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "POP",
      "path": "8"
    },
    "3849": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "POP",
      "path": "8"
    },
    "3850": {
      "fn": "GMGToken.delegateBySig",
      "offset": [
        1576,
        2638
      ],
      "op": "POP",
      "path": "8"
    },
    "3851": {
      "fn": "GMGToken.delegateBySig",
      "jump": "o",
      "offset": [
        1576,
        2638
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3852": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3859": {
      "op": "SHL"
    },
    "3860": {
      "op": "SUB"
    },
    "3861": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 33
    },
    "3862": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3863": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "AND",
      "path": "3"
    },
    "3864": {
      "fn": "ERC20.allowance",
      "offset": [
        4004,
        4011
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3866": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3867": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3868": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3869": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4041
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3871": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3873": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3874": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3875": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3876": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3878": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3879": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3880": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3881": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3882": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3883": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3884": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "AND",
      "path": "3"
    },
    "3885": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3886": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3887": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3888": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3889": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3890": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3891": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3892": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3893": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3894": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3915,
        4064
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3895": {
      "offset": [
        891,
        1016
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3896": {
      "offset": [
        945,
        1016
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
    },
    "3929": {
      "offset": [
        891,
        1016
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3930": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        891,
        1016
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3931": {
      "offset": [
        605,
        673
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3932": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "3934": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3936": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3937": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3938": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3939": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3941": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3942": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3943": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3944": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3946": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3947": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3948": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3949": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3950": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3951": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3952": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3953": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3954": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3955": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3956": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3957": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3958": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3959": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3961": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3962": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3963": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "ADD",
      "path": "8"
    },
    "3964": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3965": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "3970": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3971": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3972": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "AND",
      "path": "8"
    },
    "3973": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3974": {
      "fn": "ERC20.allowance",
      "offset": [
        605,
        673
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3975": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        605,
        673
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3976": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3977": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF90"
    },
    "3980": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10A3"
    },
    "3983": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3984": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3985": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "3987": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3988": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "3991": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3992": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "DIV",
      "path": "1"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3999": {
      "op": "SHL"
    },
    "4000": {
      "op": "SUB"
    },
    "4001": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4002": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4003": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "4004": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4005": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "4006": {
      "branch": 91,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "4007": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFF7"
    },
    "4010": {
      "branch": 91,
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4011": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4013": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4014": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4015": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4021": {
      "op": "SHL"
    },
    "4022": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4023": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4024": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4026": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4028": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4029": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "4030": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4031": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4032": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4033": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "4035": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4036": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "4037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4038": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4071": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "4073": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4074": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "4075": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4076": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4077": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4078": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4079": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4080": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4081": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "4082": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "4084": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "4085": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4086": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4087": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4094": {
      "op": "SHL"
    },
    "4095": {
      "op": "SUB"
    },
    "4096": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2088,
        2110
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 34
    },
    "4097": {
      "branch": 92,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2088,
        2110
      ],
      "op": "AND",
      "path": "1"
    },
    "4098": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x103C"
    },
    "4101": {
      "branch": 92,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4102": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4104": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4111": {
      "op": "SHL"
    },
    "4112": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4113": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4114": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4116": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "4117": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4118": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4119": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4121": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "4122": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4123": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4124": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SUB",
      "path": "1"
    },
    "4125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4126": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4127": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x26"
    },
    "4129": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4130": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4131": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "4134": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18EA"
    },
    "4138": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x26"
    },
    "4140": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4141": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "4142": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4144": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "4145": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4146": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "POP",
      "path": "1"
    },
    "4147": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "POP",
      "path": "1"
    },
    "4148": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4150": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4151": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4152": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4153": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SUB",
      "path": "1"
    },
    "4154": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4155": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4156": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4157": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 35,
      "value": "0x5"
    },
    "4159": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4160": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4162": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4169": {
      "op": "SHL"
    },
    "4170": {
      "op": "SUB"
    },
    "4171": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4172": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4173": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "AND",
      "path": "1"
    },
    "4174": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4175": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "4178": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4179": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "DIV",
      "path": "1"
    },
    "4180": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "AND",
      "path": "1"
    },
    "4181": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4182": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4215": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4218": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4219": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "LOG3",
      "path": "1"
    },
    "4220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2222
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 36,
      "value": "0x5"
    },
    "4222": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4223": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4230": {
      "op": "SHL"
    },
    "4231": {
      "op": "SUB"
    },
    "4232": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4233": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "AND",
      "path": "1"
    },
    "4235": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "4238": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "MUL",
      "path": "1"
    },
    "4239": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4246": {
      "op": "SHL"
    },
    "4247": {
      "op": "SUB"
    },
    "4248": {
      "op": "NOT"
    },
    "4249": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4250": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4251": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "AND",
      "path": "1"
    },
    "4252": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4253": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4254": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4255": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "OR",
      "path": "1"
    },
    "4256": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4257": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4258": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4259": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4260": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 37
    },
    "4261": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4262": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4263": {
      "fn": "ERC20._approve",
      "offset": [
        9313,
        9653
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4270": {
      "op": "SHL"
    },
    "4271": {
      "op": "SUB"
    },
    "4272": {
      "fn": "ERC20._approve",
      "offset": [
        9414,
        9433
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 38
    },
    "4273": {
      "branch": 86,
      "fn": "ERC20._approve",
      "offset": [
        9414,
        9433
      ],
      "op": "AND",
      "path": "3"
    },
    "4274": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10EC"
    },
    "4277": {
      "branch": 86,
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4278": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4280": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4281": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4287": {
      "op": "SHL"
    },
    "4288": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4289": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4290": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4292": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "ADD",
      "path": "3"
    },
    "4293": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4294": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4295": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4297": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "ADD",
      "path": "3"
    },
    "4298": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4299": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4300": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "SUB",
      "path": "3"
    },
    "4301": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4302": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4303": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "4305": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4306": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4307": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4309": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "ADD",
      "path": "3"
    },
    "4310": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4311": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A50"
    },
    "4314": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "4316": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4317": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "4318": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4320": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "ADD",
      "path": "3"
    },
    "4321": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4322": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "POP",
      "path": "3"
    },
    "4323": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "POP",
      "path": "3"
    },
    "4324": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4326": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4327": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4328": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4329": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "SUB",
      "path": "3"
    },
    "4330": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4331": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4332": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4339": {
      "op": "SHL"
    },
    "4340": {
      "op": "SUB"
    },
    "4341": {
      "fn": "ERC20._approve",
      "offset": [
        9492,
        9513
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 39
    },
    "4342": {
      "branch": 87,
      "fn": "ERC20._approve",
      "offset": [
        9492,
        9513
      ],
      "op": "AND",
      "path": "3"
    },
    "4343": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1131"
    },
    "4346": {
      "branch": 87,
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4347": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4349": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4350": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4356": {
      "op": "SHL"
    },
    "4357": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4358": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4359": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4361": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "ADD",
      "path": "3"
    },
    "4362": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4363": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4364": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4366": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "ADD",
      "path": "3"
    },
    "4367": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4368": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4369": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "SUB",
      "path": "3"
    },
    "4370": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4371": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4372": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "4374": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4375": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4376": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4378": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "ADD",
      "path": "3"
    },
    "4379": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4380": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1910"
    },
    "4383": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "4385": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4386": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "4387": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4389": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "ADD",
      "path": "3"
    },
    "4390": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4391": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "POP",
      "path": "3"
    },
    "4392": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "POP",
      "path": "3"
    },
    "4393": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4395": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4396": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4397": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4398": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "SUB",
      "path": "3"
    },
    "4399": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4400": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4401": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4408": {
      "op": "SHL"
    },
    "4409": {
      "op": "SUB"
    },
    "4410": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 40
    },
    "4411": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4412": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "AND",
      "path": "3"
    },
    "4413": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4415": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4416": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4417": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4418": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9574
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4420": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4422": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4423": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4424": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4425": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4427": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4428": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4429": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4430": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4431": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4432": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "AND",
      "path": "3"
    },
    "4433": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4434": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4435": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4436": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4437": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4438": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4439": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4440": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4441": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4442": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4443": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9599
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4444": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9599
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4445": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9599
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4446": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 41
    },
    "4447": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4448": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4449": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4450": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4451": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4452": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4453": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "4486": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4487": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4488": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4489": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "SUB",
      "path": "3"
    },
    "4490": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4491": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4492": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "ADD",
      "path": "3"
    },
    "4493": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4494": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "LOG3",
      "path": "3"
    },
    "4495": {
      "fn": "ERC20._approve",
      "offset": [
        9313,
        9653
      ],
      "op": "POP",
      "path": "3"
    },
    "4496": {
      "fn": "ERC20._approve",
      "offset": [
        9313,
        9653
      ],
      "op": "POP",
      "path": "3"
    },
    "4497": {
      "fn": "ERC20._approve",
      "offset": [
        9313,
        9653
      ],
      "op": "POP",
      "path": "3"
    },
    "4498": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9313,
        9653
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4499": {
      "fn": "ERC20._transfer",
      "offset": [
        6989,
        7519
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4506": {
      "op": "SHL"
    },
    "4507": {
      "op": "SUB"
    },
    "4508": {
      "fn": "ERC20._transfer",
      "offset": [
        7094,
        7114
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 42
    },
    "4509": {
      "branch": 88,
      "fn": "ERC20._transfer",
      "offset": [
        7094,
        7114
      ],
      "op": "AND",
      "path": "3"
    },
    "4510": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11D8"
    },
    "4513": {
      "branch": 88,
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4514": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4516": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4517": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4523": {
      "op": "SHL"
    },
    "4524": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4525": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4526": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4528": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "ADD",
      "path": "3"
    },
    "4529": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4530": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4531": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4533": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "ADD",
      "path": "3"
    },
    "4534": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4535": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4536": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "SUB",
      "path": "3"
    },
    "4537": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4538": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4539": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "4541": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4542": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4543": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4545": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "ADD",
      "path": "3"
    },
    "4546": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4547": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A03"
    },
    "4550": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "4552": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4553": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "4554": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4556": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "ADD",
      "path": "3"
    },
    "4557": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4558": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "POP",
      "path": "3"
    },
    "4559": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "POP",
      "path": "3"
    },
    "4560": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4562": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4563": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4564": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4565": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "SUB",
      "path": "3"
    },
    "4566": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4567": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4568": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4575": {
      "op": "SHL"
    },
    "4576": {
      "op": "SUB"
    },
    "4577": {
      "fn": "ERC20._transfer",
      "offset": [
        7174,
        7197
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 43
    },
    "4578": {
      "branch": 89,
      "fn": "ERC20._transfer",
      "offset": [
        7174,
        7197
      ],
      "op": "AND",
      "path": "3"
    },
    "4579": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x121D"
    },
    "4582": {
      "branch": 89,
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4583": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4585": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4586": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4592": {
      "op": "SHL"
    },
    "4593": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4594": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4595": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4597": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "ADD",
      "path": "3"
    },
    "4598": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4599": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4600": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4602": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "ADD",
      "path": "3"
    },
    "4603": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4604": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4605": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "SUB",
      "path": "3"
    },
    "4606": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4607": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4608": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x23"
    },
    "4610": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4611": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4612": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4614": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "ADD",
      "path": "3"
    },
    "4615": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4616": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18C7"
    },
    "4619": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x23"
    },
    "4621": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4622": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "4623": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4625": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "ADD",
      "path": "3"
    },
    "4626": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4627": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "POP",
      "path": "3"
    },
    "4628": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "POP",
      "path": "3"
    },
    "4629": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4631": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4632": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4633": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4634": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "SUB",
      "path": "3"
    },
    "4635": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4636": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4637": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4638": {
      "fn": "ERC20._transfer",
      "offset": [
        7248,
        7295
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 44,
      "value": "0x1228"
    },
    "4641": {
      "fn": "ERC20._transfer",
      "offset": [
        7269,
        7275
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4642": {
      "fn": "ERC20._transfer",
      "offset": [
        7277,
        7286
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4643": {
      "fn": "ERC20._transfer",
      "offset": [
        7288,
        7294
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4644": {
      "fn": "ERC20._transfer",
      "offset": [
        7248,
        7268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x160C"
    },
    "4647": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7248,
        7295
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4648": {
      "fn": "ERC20._transfer",
      "offset": [
        7248,
        7295
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4649": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 45,
      "value": "0x1265"
    },
    "4652": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7354
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4653": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4655": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4656": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4657": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4659": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "ADD",
      "path": "3"
    },
    "4660": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4662": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4663": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4664": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "4666": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4667": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4668": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4670": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "ADD",
      "path": "3"
    },
    "4671": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1967"
    },
    "4674": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "4676": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4677": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4684": {
      "op": "SHL"
    },
    "4685": {
      "op": "SUB"
    },
    "4686": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4687": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "AND",
      "path": "3"
    },
    "4688": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7335
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4690": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4691": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4692": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4693": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4695": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4696": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4697": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4698": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4700": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4701": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4702": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4703": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4704": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4705": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7347
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12EE"
    },
    "4708": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7326,
        7397
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4709": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4716": {
      "op": "SHL"
    },
    "4717": {
      "op": "SUB"
    },
    "4718": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4719": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4720": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "AND",
      "path": "3"
    },
    "4721": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7315
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4723": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4724": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4725": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4726": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4728": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4729": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4730": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4731": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4733": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4734": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4735": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4736": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7397
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4737": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7397
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4738": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7397
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4739": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7397
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4740": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7450
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 46
    },
    "4741": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7450
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4742": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7450
      ],
      "op": "AND",
      "path": "3"
    },
    "4743": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7450
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4744": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7450
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4745": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7450
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4746": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7450
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4747": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7462
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1294"
    },
    "4750": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7462
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4751": {
      "fn": "ERC20._transfer",
      "offset": [
        7455,
        7461
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4752": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7454
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1385"
    },
    "4755": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7430,
        7462
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4756": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7462
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4763": {
      "op": "SHL"
    },
    "4764": {
      "op": "SUB"
    },
    "4765": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4766": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4767": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "AND",
      "path": "3"
    },
    "4768": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7416
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4770": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4771": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4772": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4773": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4775": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4776": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4777": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4778": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4780": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4781": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4782": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4783": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4784": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7462
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4785": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7462
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4786": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7462
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4787": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7462
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4788": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 47
    },
    "4789": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4790": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4791": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4792": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4793": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4794": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4795": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4796": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4797": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4798": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4799": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "AND",
      "path": "3"
    },
    "4800": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4801": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4834": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4835": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4836": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4837": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4838": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SUB",
      "path": "3"
    },
    "4839": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "ADD",
      "path": "3"
    },
    "4840": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4841": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "LOG3",
      "path": "3"
    },
    "4842": {
      "fn": "ERC20._transfer",
      "offset": [
        6989,
        7519
      ],
      "op": "POP",
      "path": "3"
    },
    "4843": {
      "fn": "ERC20._transfer",
      "offset": [
        6989,
        7519
      ],
      "op": "POP",
      "path": "3"
    },
    "4844": {
      "fn": "ERC20._transfer",
      "offset": [
        6989,
        7519
      ],
      "op": "POP",
      "path": "3"
    },
    "4845": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        6989,
        7519
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4846": {
      "fn": "SafeMath.sub",
      "offset": [
        1754,
        1941
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4847": {
      "fn": "SafeMath.sub",
      "offset": [
        1840,
        1847
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4849": {
      "fn": "SafeMath.sub",
      "offset": [
        1875,
        1887
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 48
    },
    "4850": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1873
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4851": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1873
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4852": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1873
      ],
      "op": "GT",
      "path": "2"
    },
    "4853": {
      "branch": 93,
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1873
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4854": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x137D"
    },
    "4857": {
      "branch": 93,
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4858": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4860": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4861": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4867": {
      "op": "SHL"
    },
    "4868": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4869": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4870": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4872": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4873": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4874": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4875": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4877": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4878": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4879": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4880": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SUB",
      "path": "2"
    },
    "4881": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4882": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4883": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4884": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4885": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4886": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4887": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4888": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4889": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4891": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4892": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4893": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4894": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4895": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4896": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4897": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4899": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4900": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4901": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4902": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4903": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4904": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4906": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4907": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4908": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4909": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "LT",
      "path": "2"
    },
    "4910": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4911": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1342"
    },
    "4914": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4915": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4916": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4917": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4918": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4919": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4920": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4921": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4922": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4923": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4925": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4926": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132A"
    },
    "4929": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4930": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4931": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4932": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4933": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4934": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4935": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4936": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4937": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4938": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4939": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4940": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4941": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4943": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "AND",
      "path": "2"
    },
    "4944": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4945": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4946": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136F"
    },
    "4949": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4950": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4951": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4952": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SUB",
      "path": "2"
    },
    "4953": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4954": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4955": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4957": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4958": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4960": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SUB",
      "path": "2"
    },
    "4961": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4964": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "EXP",
      "path": "2"
    },
    "4965": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SUB",
      "path": "2"
    },
    "4966": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "NOT",
      "path": "2"
    },
    "4967": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "AND",
      "path": "2"
    },
    "4968": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4969": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4970": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4972": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4973": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4974": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4975": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4976": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4977": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4978": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4979": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4980": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4981": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4983": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4984": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4985": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4986": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SUB",
      "path": "2"
    },
    "4987": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4988": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4989": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4990": {
      "op": "POP"
    },
    "4991": {
      "op": "POP"
    },
    "4992": {
      "op": "POP"
    },
    "4993": {
      "fn": "SafeMath.sub",
      "offset": [
        1910,
        1915
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4994": {
      "fn": "SafeMath.sub",
      "offset": [
        1910,
        1915
      ],
      "op": "SUB",
      "path": "2"
    },
    "4995": {
      "fn": "SafeMath.sub",
      "offset": [
        1910,
        1915
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4996": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1754,
        1941
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4997": {
      "fn": "SafeMath.add",
      "offset": [
        882,
        1058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4998": {
      "fn": "SafeMath.add",
      "offset": [
        940,
        947
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5000": {
      "fn": "SafeMath.add",
      "offset": [
        971,
        976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5001": {
      "fn": "SafeMath.add",
      "offset": [
        971,
        976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5002": {
      "fn": "SafeMath.add",
      "offset": [
        971,
        976
      ],
      "op": "ADD",
      "path": "2"
    },
    "5003": {
      "fn": "SafeMath.add",
      "offset": [
        994,
        1000
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 49
    },
    "5004": {
      "fn": "SafeMath.add",
      "offset": [
        994,
        1000
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5005": {
      "fn": "SafeMath.add",
      "offset": [
        994,
        1000
      ],
      "op": "LT",
      "path": "2"
    },
    "5006": {
      "branch": 94,
      "fn": "SafeMath.add",
      "offset": [
        994,
        1000
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5007": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC92"
    },
    "5010": {
      "branch": 94,
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5011": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5013": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5014": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5015": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5021": {
      "op": "SHL"
    },
    "5022": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5023": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5024": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5026": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5028": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5029": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "ADD",
      "path": "2"
    },
    "5030": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5031": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1B"
    },
    "5033": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "5035": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5036": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "ADD",
      "path": "2"
    },
    "5037": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5038": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "5071": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "5073": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5074": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "ADD",
      "path": "2"
    },
    "5075": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5076": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5077": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5078": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5079": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5080": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5081": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "SUB",
      "path": "2"
    },
    "5082": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "5084": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "ADD",
      "path": "2"
    },
    "5085": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5086": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5087": {
      "fn": "ERC20._mint",
      "offset": [
        7790,
        8160
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5094": {
      "op": "SHL"
    },
    "5095": {
      "op": "SUB"
    },
    "5096": {
      "fn": "ERC20._mint",
      "offset": [
        7873,
        7894
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 50
    },
    "5097": {
      "branch": 90,
      "fn": "ERC20._mint",
      "offset": [
        7873,
        7894
      ],
      "op": "AND",
      "path": "3"
    },
    "5098": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x143A"
    },
    "5101": {
      "branch": 90,
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5102": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5104": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5105": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5106": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5110": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5112": {
      "op": "SHL"
    },
    "5113": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5114": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5115": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5117": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5119": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5120": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "ADD",
      "path": "3"
    },
    "5121": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5122": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5124": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "5126": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5127": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "ADD",
      "path": "3"
    },
    "5128": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5129": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "5162": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "5164": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5165": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "ADD",
      "path": "3"
    },
    "5166": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5167": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5168": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5169": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5170": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5171": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5172": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "SUB",
      "path": "3"
    },
    "5173": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "5175": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "ADD",
      "path": "3"
    },
    "5176": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5177": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5178": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5179": {
      "fn": "ERC20._mint",
      "offset": [
        7941,
        7990
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 51,
      "value": "0x1446"
    },
    "5182": {
      "fn": "ERC20._mint",
      "offset": [
        7970,
        7971
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5184": {
      "fn": "ERC20._mint",
      "offset": [
        7974,
        7981
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5185": {
      "fn": "ERC20._mint",
      "offset": [
        7983,
        7989
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5186": {
      "fn": "ERC20._mint",
      "offset": [
        7941,
        7961
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x160C"
    },
    "5189": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        7941,
        7990
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5190": {
      "fn": "ERC20._mint",
      "offset": [
        7941,
        7990
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5191": {
      "fn": "ERC20._mint",
      "offset": [
        8016,
        8028
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 52,
      "value": "0x2"
    },
    "5193": {
      "fn": "ERC20._mint",
      "offset": [
        8016,
        8028
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5194": {
      "fn": "ERC20._mint",
      "offset": [
        8016,
        8040
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1453"
    },
    "5197": {
      "fn": "ERC20._mint",
      "offset": [
        8016,
        8040
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5198": {
      "fn": "ERC20._mint",
      "offset": [
        8033,
        8039
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5199": {
      "fn": "ERC20._mint",
      "offset": [
        8016,
        8032
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1385"
    },
    "5202": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8016,
        8040
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5203": {
      "fn": "ERC20._mint",
      "offset": [
        8016,
        8040
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5204": {
      "fn": "ERC20._mint",
      "offset": [
        8001,
        8013
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5206": {
      "fn": "ERC20._mint",
      "offset": [
        8001,
        8040
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5213": {
      "op": "SHL"
    },
    "5214": {
      "op": "SUB"
    },
    "5215": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 53
    },
    "5216": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "AND",
      "path": "3"
    },
    "5217": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8080
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5219": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5220": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5221": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5222": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5224": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5225": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5226": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5227": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5229": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5230": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5231": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5232": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8101
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1479"
    },
    "5235": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8101
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5236": {
      "fn": "ERC20._mint",
      "offset": [
        8094,
        8100
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5237": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8093
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1385"
    },
    "5240": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8071,
        8101
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5241": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8101
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5248": {
      "op": "SHL"
    },
    "5249": {
      "op": "SUB"
    },
    "5250": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5251": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "AND",
      "path": "3"
    },
    "5252": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8059
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5254": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5255": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5256": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5257": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5259": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5260": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5261": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5262": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5264": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5265": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5266": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5267": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8101
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5268": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8101
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5269": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8101
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5270": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8101
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5271": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 54
    },
    "5272": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5273": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5274": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5275": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5276": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5277": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5278": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5279": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5280": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8059
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5281": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8059
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5282": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5315": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5316": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5317": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5318": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "SUB",
      "path": "3"
    },
    "5319": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5320": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5321": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "ADD",
      "path": "3"
    },
    "5322": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5323": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "LOG3",
      "path": "3"
    },
    "5324": {
      "fn": "ERC20._mint",
      "offset": [
        7790,
        8160
      ],
      "op": "POP",
      "path": "3"
    },
    "5325": {
      "fn": "ERC20._mint",
      "offset": [
        7790,
        8160
      ],
      "op": "POP",
      "path": "3"
    },
    "5326": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        7790,
        8160
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5327": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4566,
        5605
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5328": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4701,
        4707
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5335": {
      "op": "SHL"
    },
    "5336": {
      "op": "SUB"
    },
    "5337": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4691,
        4707
      ],
      "op": "AND",
      "path": "8"
    },
    "5338": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4691,
        4697
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5345": {
      "op": "SHL"
    },
    "5346": {
      "op": "SUB"
    },
    "5347": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4691,
        4707
      ],
      "op": "AND",
      "path": "8"
    },
    "5348": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4691,
        4707
      ],
      "op": "EQ",
      "path": "8"
    },
    "5349": {
      "branch": 77,
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4691,
        4707
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5350": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4691,
        4721
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5351": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4691,
        4721
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5352": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4691,
        4721
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14F1"
    },
    "5355": {
      "branch": 77,
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4691,
        4721
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5356": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4691,
        4721
      ],
      "op": "POP",
      "path": "8"
    },
    "5357": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4720,
        4721
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5359": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4711,
        4717
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5360": {
      "branch": 78,
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4711,
        4721
      ],
      "op": "GT",
      "path": "8"
    },
    "5361": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4691,
        4721
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5362": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4687,
        5599
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5363": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4687,
        5599
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x160C"
    },
    "5366": {
      "branch": 78,
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4687,
        5599
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5373": {
      "op": "SHL"
    },
    "5374": {
      "op": "SUB"
    },
    "5375": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4741,
        4761
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5376": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4741,
        4761
      ],
      "op": "AND",
      "path": "8"
    },
    "5377": {
      "branch": 79,
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4741,
        4761
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5378": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4737,
        5156
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1583"
    },
    "5381": {
      "branch": 79,
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4737,
        5156
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5388": {
      "op": "SHL"
    },
    "5389": {
      "op": "SUB"
    },
    "5390": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4847,
        4869
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5391": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4847,
        4869
      ],
      "op": "AND",
      "path": "8"
    },
    "5392": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4828,
        4844
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5394": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4847,
        4869
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5395": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4847,
        4869
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5396": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4847,
        4869
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5397": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4847,
        4861
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "5399": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4847,
        4869
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5401": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4847,
        4869
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5402": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4847,
        4869
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5404": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4847,
        4869
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5405": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4847,
        4869
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5406": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4847,
        4869
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5407": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4847,
        4869
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "5412": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4847,
        4869
      ],
      "op": "AND",
      "path": "8"
    },
    "5413": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4847,
        4869
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5414": {
      "branch": 80,
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4907,
        4920
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5415": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4907,
        5007
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1531"
    },
    "5418": {
      "branch": 80,
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4907,
        5007
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5419": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5006,
        5007
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5421": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4907,
        5007
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1563"
    },
    "5424": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4907,
        5007
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5425": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4907,
        5007
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5432": {
      "op": "SHL"
    },
    "5433": {
      "op": "SUB"
    },
    "5434": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4962
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5435": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4962
      ],
      "op": "AND",
      "path": "8"
    },
    "5436": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5438": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4962
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5439": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4962
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5440": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4962
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5441": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4954
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "5443": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5445": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4962
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5446": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4962
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5447": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4962
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5448": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5450": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4962
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5451": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4962
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5452": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4962
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5453": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4977
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "5458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5460": {
      "op": "NOT"
    },
    "5461": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4963,
        4976
      ],
      "op": "DUP8",
      "path": "8"
    },
    "5462": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4963,
        4976
      ],
      "op": "ADD",
      "path": "8"
    },
    "5463": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4977
      ],
      "op": "AND",
      "path": "8"
    },
    "5464": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4977
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5465": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4977
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5466": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4977
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5467": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4977
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5468": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4977
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5469": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4977
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5470": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4977
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5471": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4975,
        4976
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5473": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4983
      ],
      "op": "ADD",
      "path": "8"
    },
    "5474": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4943,
        4983
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5475": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4907,
        5007
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5476": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4887,
        5007
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5477": {
      "op": "POP"
    },
    "5478": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5025,
        5042
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5480": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5045,
        5066
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1571"
    },
    "5483": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4887,
        5007
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5484": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5059,
        5065
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5485": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5045,
        5058
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16AA"
    },
    "5488": {
      "fn": "GMGToken._moveDelegates",
      "jump": "i",
      "offset": [
        5045,
        5066
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5489": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5045,
        5066
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5490": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5025,
        5066
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5491": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5025,
        5066
      ],
      "op": "POP",
      "path": "8"
    },
    "5492": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5084,
        5141
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 55,
      "value": "0x157F"
    },
    "5495": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5101,
        5107
      ],
      "op": "DUP7",
      "path": "8"
    },
    "5496": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5109,
        5118
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5497": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5120,
        5129
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5498": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5131,
        5140
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5499": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5084,
        5100
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16EC"
    },
    "5502": {
      "fn": "GMGToken._moveDelegates",
      "jump": "i",
      "offset": [
        5084,
        5141
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5503": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5084,
        5141
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5504": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4737,
        5156
      ],
      "op": "POP",
      "path": "8"
    },
    "5505": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4737,
        5156
      ],
      "op": "POP",
      "path": "8"
    },
    "5506": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4737,
        5156
      ],
      "op": "POP",
      "path": "8"
    },
    "5507": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4737,
        5156
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5514": {
      "op": "SHL"
    },
    "5515": {
      "op": "SUB"
    },
    "5516": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5174,
        5194
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5517": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5174,
        5194
      ],
      "op": "AND",
      "path": "8"
    },
    "5518": {
      "branch": 81,
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5174,
        5194
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5519": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5170,
        5589
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x160C"
    },
    "5522": {
      "branch": 81,
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5170,
        5589
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5529": {
      "op": "SHL"
    },
    "5530": {
      "op": "SUB"
    },
    "5531": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5280,
        5302
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5532": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5280,
        5302
      ],
      "op": "AND",
      "path": "8"
    },
    "5533": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5261,
        5277
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5535": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5280,
        5302
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5536": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5280,
        5302
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5537": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5280,
        5302
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5538": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5280,
        5294
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "5540": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5280,
        5302
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5542": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5280,
        5302
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5543": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5280,
        5302
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5545": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5280,
        5302
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5546": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5280,
        5302
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5547": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5280,
        5302
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5548": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5280,
        5302
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "5553": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5280,
        5302
      ],
      "op": "AND",
      "path": "8"
    },
    "5554": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5280,
        5302
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5555": {
      "branch": 82,
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5340,
        5353
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5556": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5340,
        5440
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15BE"
    },
    "5559": {
      "branch": 82,
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5340,
        5440
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5560": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5439,
        5440
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5562": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5340,
        5440
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15F0"
    },
    "5565": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5340,
        5440
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5566": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5340,
        5440
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5573": {
      "op": "SHL"
    },
    "5574": {
      "op": "SUB"
    },
    "5575": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5395
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5576": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5395
      ],
      "op": "AND",
      "path": "8"
    },
    "5577": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5395
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5579": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5395
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5580": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5395
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5581": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5395
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5582": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5387
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "5584": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5395
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5586": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5395
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5587": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5395
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5588": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5395
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5589": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5395
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5591": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5395
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5592": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5395
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5593": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5395
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5594": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5410
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5601": {
      "op": "NOT"
    },
    "5602": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5396,
        5409
      ],
      "op": "DUP8",
      "path": "8"
    },
    "5603": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5396,
        5409
      ],
      "op": "ADD",
      "path": "8"
    },
    "5604": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5410
      ],
      "op": "AND",
      "path": "8"
    },
    "5605": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5410
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5606": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5410
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5607": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5410
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5608": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5410
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5609": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5410
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5610": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5410
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5611": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5410
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5612": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5408,
        5409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5614": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5416
      ],
      "op": "ADD",
      "path": "8"
    },
    "5615": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5376,
        5416
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5616": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5340,
        5440
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5617": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5320,
        5440
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5618": {
      "op": "POP"
    },
    "5619": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5458,
        5475
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5621": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5478,
        5499
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15FE"
    },
    "5624": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5320,
        5440
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5625": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5492,
        5498
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5626": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5478,
        5491
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1385"
    },
    "5629": {
      "fn": "GMGToken._moveDelegates",
      "jump": "i",
      "offset": [
        5478,
        5499
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5630": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5478,
        5499
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5631": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5458,
        5499
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5632": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5458,
        5499
      ],
      "op": "POP",
      "path": "8"
    },
    "5633": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5517,
        5574
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 56,
      "value": "0xF04"
    },
    "5636": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5534,
        5540
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5637": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5542,
        5551
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5638": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5553,
        5562
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5639": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5564,
        5573
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5640": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5517,
        5533
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16EC"
    },
    "5643": {
      "fn": "GMGToken._moveDelegates",
      "jump": "i",
      "offset": [
        5517,
        5574
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5644": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        5170,
        5589
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5645": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4566,
        5605
      ],
      "op": "POP",
      "path": "8"
    },
    "5646": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4566,
        5605
      ],
      "op": "POP",
      "path": "8"
    },
    "5647": {
      "fn": "GMGToken._moveDelegates",
      "offset": [
        4566,
        5605
      ],
      "op": "POP",
      "path": "8"
    },
    "5648": {
      "fn": "GMGToken._moveDelegates",
      "jump": "o",
      "offset": [
        4566,
        5605
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5649": {
      "fn": "GMGToken._delegate",
      "offset": [
        4143,
        4560
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5656": {
      "op": "SHL"
    },
    "5657": {
      "op": "SUB"
    },
    "5658": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5659": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5660": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "AND",
      "path": "8"
    },
    "5661": {
      "fn": "GMGToken._delegate",
      "offset": [
        4219,
        4242
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5663": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5664": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5665": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5666": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4255
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "5668": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5670": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5671": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5673": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5674": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5675": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5676": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5677": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5678": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "AND",
      "path": "8"
    },
    "5679": {
      "fn": "GMGToken._delegate",
      "offset": [
        4245,
        4266
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5680": {
      "fn": "GMGToken._delegate",
      "offset": [
        4303,
        4323
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1638"
    },
    "5683": {
      "fn": "GMGToken._delegate",
      "offset": [
        4256,
        4265
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5684": {
      "fn": "GMGToken._delegate",
      "offset": [
        4303,
        4312
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x850"
    },
    "5687": {
      "fn": "GMGToken._delegate",
      "jump": "i",
      "offset": [
        4303,
        4323
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5688": {
      "fn": "GMGToken._delegate",
      "offset": [
        4303,
        4323
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5695": {
      "op": "SHL"
    },
    "5696": {
      "op": "SUB"
    },
    "5697": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4400
      ],
      "op": "DUP6",
      "path": "8",
      "statement": 57
    },
    "5698": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4400
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5699": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4400
      ],
      "op": "AND",
      "path": "8"
    },
    "5700": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4400
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5702": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4400
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5703": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4400
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5704": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4400
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5705": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "5707": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4400
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5709": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4400
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5710": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4400
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5712": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4400
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5713": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4400
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5714": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4400
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5715": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4412
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5716": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4412
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5723": {
      "op": "SHL"
    },
    "5724": {
      "op": "SUB"
    },
    "5725": {
      "op": "NOT"
    },
    "5726": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4412
      ],
      "op": "AND",
      "path": "8"
    },
    "5727": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4412
      ],
      "op": "DUP10",
      "path": "8"
    },
    "5728": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4412
      ],
      "op": "DUP7",
      "path": "8"
    },
    "5729": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4412
      ],
      "op": "AND",
      "path": "8"
    },
    "5730": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4412
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5731": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4412
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5732": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4412
      ],
      "op": "OR",
      "path": "8"
    },
    "5733": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4412
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5734": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4412
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5735": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4412
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5736": {
      "fn": "GMGToken._delegate",
      "offset": [
        4428,
        4482
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 58
    },
    "5737": {
      "fn": "GMGToken._delegate",
      "offset": [
        4428,
        4482
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5738": {
      "fn": "GMGToken._delegate",
      "offset": [
        4276,
        4323
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "5739": {
      "fn": "GMGToken._delegate",
      "offset": [
        4276,
        4323
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "5740": {
      "op": "POP"
    },
    "5741": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4412
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "5742": {
      "fn": "GMGToken._delegate",
      "offset": [
        4428,
        4482
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5743": {
      "fn": "GMGToken._delegate",
      "offset": [
        4428,
        4482
      ],
      "op": "DUP7",
      "path": "8"
    },
    "5744": {
      "fn": "GMGToken._delegate",
      "offset": [
        4428,
        4482
      ],
      "op": "AND",
      "path": "8"
    },
    "5745": {
      "fn": "GMGToken._delegate",
      "offset": [
        4428,
        4482
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5746": {
      "fn": "GMGToken._delegate",
      "offset": [
        4428,
        4482
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
    },
    "5779": {
      "fn": "GMGToken._delegate",
      "offset": [
        4428,
        4482
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5780": {
      "fn": "GMGToken._delegate",
      "offset": [
        4379,
        4400
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5781": {
      "fn": "GMGToken._delegate",
      "offset": [
        4428,
        4482
      ],
      "op": "LOG4",
      "path": "8"
    },
    "5782": {
      "fn": "GMGToken._delegate",
      "offset": [
        4493,
        4553
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 59,
      "value": "0x16A0"
    },
    "5785": {
      "fn": "GMGToken._delegate",
      "offset": [
        4508,
        4523
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5786": {
      "fn": "GMGToken._delegate",
      "offset": [
        4525,
        4534
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5787": {
      "fn": "GMGToken._delegate",
      "offset": [
        4536,
        4552
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5788": {
      "fn": "GMGToken._delegate",
      "offset": [
        4493,
        4507
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14CF"
    },
    "5791": {
      "fn": "GMGToken._delegate",
      "jump": "i",
      "offset": [
        4493,
        4553
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5792": {
      "fn": "GMGToken._delegate",
      "offset": [
        4493,
        4553
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5793": {
      "fn": "GMGToken._delegate",
      "offset": [
        4143,
        4560
      ],
      "op": "POP",
      "path": "8"
    },
    "5794": {
      "fn": "GMGToken._delegate",
      "offset": [
        4143,
        4560
      ],
      "op": "POP",
      "path": "8"
    },
    "5795": {
      "fn": "GMGToken._delegate",
      "offset": [
        4143,
        4560
      ],
      "op": "POP",
      "path": "8"
    },
    "5796": {
      "fn": "GMGToken._delegate",
      "offset": [
        4143,
        4560
      ],
      "op": "POP",
      "path": "8"
    },
    "5797": {
      "fn": "GMGToken._delegate",
      "jump": "o",
      "offset": [
        4143,
        4560
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5798": {
      "fn": "GMGToken.getChainId",
      "offset": [
        6601,
        6773
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5799": {
      "fn": "GMGToken.getChainId",
      "offset": [
        6724,
        6733
      ],
      "op": "CHAINID",
      "path": "8"
    },
    "5800": {
      "fn": "GMGToken.getChainId",
      "offset": [
        6601,
        6773
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5801": {
      "fn": "GMGToken.getChainId",
      "jump": "o",
      "offset": [
        6601,
        6773
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5802": {
      "fn": "SafeMath.sub",
      "offset": [
        1329,
        1463
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5803": {
      "fn": "SafeMath.sub",
      "offset": [
        1387,
        1394
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5805": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 60,
      "value": "0xC92"
    },
    "5808": {
      "fn": "SafeMath.sub",
      "offset": [
        1417,
        1418
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5809": {
      "fn": "SafeMath.sub",
      "offset": [
        1420,
        1421
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5810": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5812": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5813": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5814": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5816": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "ADD",
      "path": "2"
    },
    "5817": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5819": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5820": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5821": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1E"
    },
    "5823": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5824": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5825": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5827": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "ADD",
      "path": "2"
    },
    "5828": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "5861": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5862": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5863": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1456
      ],
      "op": "POP",
      "path": "2"
    },
    "5864": {
      "fn": "SafeMath.sub",
      "offset": [
        1413,
        1416
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12EE"
    },
    "5867": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1413,
        1456
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5868": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5611,
        6400
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5869": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5770,
        5788
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5871": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1710"
    },
    "5874": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5811,
        5823
      ],
      "op": "NUMBER",
      "path": "8"
    },
    "5875": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5877": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5878": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5879": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "5881": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "ADD",
      "path": "8"
    },
    "5882": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5884": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5885": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5886": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x35"
    },
    "5888": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5889": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5890": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5892": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "ADD",
      "path": "8"
    },
    "5893": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1932"
    },
    "5896": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x35"
    },
    "5898": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5899": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "CODECOPY",
      "path": "8"
    },
    "5900": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5797
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1851"
    },
    "5903": {
      "fn": "GMGToken._writeCheckpoint",
      "jump": "i",
      "offset": [
        5791,
        5902
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5904": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5791,
        5902
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5905": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5770,
        5902
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5906": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5770,
        5902
      ],
      "op": "POP",
      "path": "8"
    },
    "5907": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5945,
        5946
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5909": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5930,
        5942
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5910": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5930,
        5946
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "5915": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5930,
        5946
      ],
      "op": "AND",
      "path": "8"
    },
    "5916": {
      "branch": 83,
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5930,
        5946
      ],
      "op": "GT",
      "path": "8"
    },
    "5917": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5930,
        6027
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5918": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5930,
        6027
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5919": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5930,
        6027
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1759"
    },
    "5922": {
      "branch": 83,
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5930,
        6027
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5923": {
      "op": "POP"
    },
    "5924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5930": {
      "op": "SHL"
    },
    "5931": {
      "op": "SUB"
    },
    "5932": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        5984
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5933": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        5984
      ],
      "op": "AND",
      "path": "8"
    },
    "5934": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        5984
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5936": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        5984
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5937": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        5984
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5938": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        5984
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5939": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        5973
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "5941": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        5984
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5943": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        5984
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5944": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        5984
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5945": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        5984
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5946": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        5984
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5948": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        5984
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5949": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        5984
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5950": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        5984
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5951": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6027
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "5956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5958": {
      "op": "NOT"
    },
    "5959": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5985,
        6001
      ],
      "op": "DUP10",
      "path": "8"
    },
    "5960": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5985,
        6001
      ],
      "op": "ADD",
      "path": "8"
    },
    "5961": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6002
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5962": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6002
      ],
      "op": "AND",
      "path": "8"
    },
    "5963": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6002
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5964": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6002
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5965": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6002
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5966": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6002
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5967": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6002
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5968": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6002
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5969": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6002
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5970": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6012
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5971": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6027
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5972": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6027
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5973": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6027
      ],
      "op": "AND",
      "path": "8"
    },
    "5974": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6012
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5975": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6012
      ],
      "op": "AND",
      "path": "8"
    },
    "5976": {
      "branch": 84,
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5962,
        6027
      ],
      "op": "EQ",
      "path": "8"
    },
    "5977": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5930,
        6027
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5978": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5913,
        6327
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5979": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5913,
        6327
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1796"
    },
    "5982": {
      "branch": 84,
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5913,
        6327
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5989": {
      "op": "SHL"
    },
    "5990": {
      "op": "SUB"
    },
    "5991": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6074
      ],
      "op": "DUP6",
      "path": "8",
      "statement": 61
    },
    "5992": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6074
      ],
      "op": "AND",
      "path": "8"
    },
    "5993": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6074
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5995": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6074
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5996": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6074
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5997": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6074
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5998": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6063
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "6000": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6074
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6002": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6074
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6003": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6074
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6004": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6074
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6005": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6074
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6007": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6074
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6008": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6074
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6009": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6074
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "6010": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6092
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6017": {
      "op": "NOT"
    },
    "6018": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6075,
        6091
      ],
      "op": "DUP10",
      "path": "8"
    },
    "6019": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6075,
        6091
      ],
      "op": "ADD",
      "path": "8"
    },
    "6020": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6092
      ],
      "op": "AND",
      "path": "8"
    },
    "6021": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6092
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6022": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6092
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6023": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6092
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6024": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6092
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6025": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6092
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6026": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6092
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6027": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6092
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "6028": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6090,
        6091
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "6030": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6098
      ],
      "op": "ADD",
      "path": "8"
    },
    "6031": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6109
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6032": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6109
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6033": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6052,
        6109
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "6034": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5913,
        6327
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1807"
    },
    "6037": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5913,
        6327
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6038": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5913,
        6327
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6039": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 62,
      "value": "0x40"
    },
    "6041": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6042": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6043": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6044": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6045": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "ADD",
      "path": "8"
    },
    "6046": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6047": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6048": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "6053": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6054": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6055": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "AND",
      "path": "8"
    },
    "6056": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6057": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6058": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6060": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6061": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6062": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "ADD",
      "path": "8"
    },
    "6063": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "DUP7",
      "path": "8"
    },
    "6064": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6065": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6179,
        6258
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6072": {
      "op": "SHL"
    },
    "6073": {
      "op": "SUB"
    },
    "6074": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6162
      ],
      "op": "DUP11",
      "path": "8"
    },
    "6075": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6162
      ],
      "op": "AND",
      "path": "8"
    },
    "6076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6078": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6162
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6079": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6162
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6080": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6162
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6081": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6151
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "6083": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6162
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6084": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6162
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6085": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6162
      ],
      "op": "DUP7",
      "path": "8"
    },
    "6086": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6162
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6087": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6162
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "6088": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6176
      ],
      "op": "DUP12",
      "path": "8"
    },
    "6089": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6176
      ],
      "op": "DUP7",
      "path": "8"
    },
    "6090": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6176
      ],
      "op": "AND",
      "path": "8"
    },
    "6091": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6176
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6092": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6176
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6093": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6176
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6094": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6176
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6095": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6176
      ],
      "op": "DUP7",
      "path": "8"
    },
    "6096": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6176
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6097": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6176
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "6098": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "6099": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6100": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "DUP7",
      "path": "8"
    },
    "6101": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6102": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6103": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "DUP7",
      "path": "8"
    },
    "6104": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "AND",
      "path": "8"
    },
    "6105": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6110": {
      "op": "NOT"
    },
    "6111": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6112": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6113": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "AND",
      "path": "8"
    },
    "6114": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "OR",
      "path": "8"
    },
    "6115": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "DUP8",
      "path": "8"
    },
    "6116": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "6117": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6118": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6119": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "6121": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "6122": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "DUP8",
      "path": "8"
    },
    "6123": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "ADD",
      "path": "8"
    },
    "6124": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6140,
        6258
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "6125": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6297
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 63
    },
    "6126": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6297
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6127": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6297
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6128": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6286
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "6130": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6297
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6131": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6297
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6132": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6297
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6133": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6297
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "6134": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6297
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6135": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6297
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "6136": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6316
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6137": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6316
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6138": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6300,
        6316
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6139": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6300,
        6316
      ],
      "op": "DUP9",
      "path": "8"
    },
    "6140": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6300,
        6316
      ],
      "op": "ADD",
      "path": "8"
    },
    "6141": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6316
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6142": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6316
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6143": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6316
      ],
      "op": "AND",
      "path": "8"
    },
    "6144": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6316
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6145": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6316
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6146": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6316
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6147": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6316
      ],
      "op": "AND",
      "path": "8"
    },
    "6148": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6316
      ],
      "op": "OR",
      "path": "8"
    },
    "6149": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6316
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6150": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6272,
        6316
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "6151": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5913,
        6327
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6152": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 64,
      "value": "0x40"
    },
    "6154": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6155": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6156": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6157": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6158": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6159": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6161": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6162": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "ADD",
      "path": "8"
    },
    "6163": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6164": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6165": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6166": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6167": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6174": {
      "op": "SHL"
    },
    "6175": {
      "op": "SUB"
    },
    "6176": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "DUP9",
      "path": "8"
    },
    "6177": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "AND",
      "path": "8"
    },
    "6178": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6179": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
    },
    "6212": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6213": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6214": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6215": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "SUB",
      "path": "8"
    },
    "6216": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "ADD",
      "path": "8"
    },
    "6217": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6218": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        6342,
        6393
      ],
      "op": "LOG2",
      "path": "8"
    },
    "6219": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5611,
        6400
      ],
      "op": "POP",
      "path": "8"
    },
    "6220": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5611,
        6400
      ],
      "op": "POP",
      "path": "8"
    },
    "6221": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5611,
        6400
      ],
      "op": "POP",
      "path": "8"
    },
    "6222": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5611,
        6400
      ],
      "op": "POP",
      "path": "8"
    },
    "6223": {
      "fn": "GMGToken._writeCheckpoint",
      "offset": [
        5611,
        6400
      ],
      "op": "POP",
      "path": "8"
    },
    "6224": {
      "fn": "GMGToken._writeCheckpoint",
      "jump": "o",
      "offset": [
        5611,
        6400
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6225": {
      "fn": "GMGToken.safe32",
      "offset": [
        6406,
        6595
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6226": {
      "fn": "GMGToken.safe32",
      "offset": [
        6508,
        6514
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6228": {
      "fn": "GMGToken.safe32",
      "offset": [
        6549,
        6561
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 65
    },
    "6229": {
      "fn": "GMGToken.safe32",
      "offset": [
        6542,
        6547
      ],
      "op": "PUSH5",
      "path": "8",
      "value": "0x100000000"
    },
    "6235": {
      "fn": "GMGToken.safe32",
      "offset": [
        6538,
        6547
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6236": {
      "branch": 85,
      "fn": "GMGToken.safe32",
      "offset": [
        6538,
        6547
      ],
      "op": "LT",
      "path": "8"
    },
    "6237": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18A7"
    },
    "6240": {
      "branch": 85,
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6241": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6243": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6244": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6248": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6250": {
      "op": "SHL"
    },
    "6251": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6252": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6253": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6255": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6257": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6258": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "ADD",
      "path": "8"
    },
    "6259": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6260": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6261": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6262": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6263": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6264": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "6266": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6267": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "ADD",
      "path": "8"
    },
    "6268": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6269": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6270": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6271": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6272": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6273": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6274": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6275": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "6277": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6278": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6279": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "ADD",
      "path": "8"
    },
    "6280": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6281": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6282": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP6",
      "path": "8"
    },
    "6283": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "ADD",
      "path": "8"
    },
    "6284": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6285": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6286": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6287": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6288": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6290": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6291": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6292": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1342"
    },
    "6295": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6296": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6297": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6298": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "ADD",
      "path": "8"
    },
    "6299": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6300": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6301": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6302": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "ADD",
      "path": "8"
    },
    "6303": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6304": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6306": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "ADD",
      "path": "8"
    },
    "6307": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x132A"
    },
    "6310": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6311": {
      "fn": "GMGToken.safe32",
      "offset": [
        6530,
        6562
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6312": {
      "op": "POP"
    },
    "6313": {
      "fn": "GMGToken.safe32",
      "offset": [
        6586,
        6587
      ],
      "op": "SWAP2",
      "path": "8",
      "statement": 66
    },
    "6314": {
      "fn": "GMGToken.safe32",
      "offset": [
        6586,
        6587
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6315": {
      "fn": "GMGToken.safe32",
      "offset": [
        6406,
        6595
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6316": {
      "op": "POP"
    },
    "6317": {
      "op": "POP"
    },
    "6318": {
      "fn": "GMGToken.safe32",
      "jump": "o",
      "offset": [
        6406,
        6595
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6319": {
      "op": "JUMPDEST"
    },
    "6320": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6322": {
      "op": "DUP1"
    },
    "6323": {
      "op": "MLOAD"
    },
    "6324": {
      "op": "DUP1"
    },
    "6325": {
      "op": "DUP3"
    },
    "6326": {
      "op": "ADD"
    },
    "6327": {
      "op": "SWAP1"
    },
    "6328": {
      "op": "SWAP2"
    },
    "6329": {
      "op": "MSTORE"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6332": {
      "op": "DUP1"
    },
    "6333": {
      "op": "DUP3"
    },
    "6334": {
      "op": "MSTORE"
    },
    "6335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6337": {
      "op": "DUP3"
    },
    "6338": {
      "op": "ADD"
    },
    "6339": {
      "op": "MSTORE"
    },
    "6340": {
      "op": "SWAP1"
    },
    "6341": {
      "op": "JUMP"
    }
  },
  "sha1": "1cfd1037dc1591fff3d23cc1011510a9feaf2b78",
  "source": "// SPDX-License-Identifier: MIT-LICENSE\npragma solidity 0.6.12;\n\nimport \"OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/ERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/access/Ownable.sol\";\n\ncontract GMGToken is ERC20(\"Greedy Merchants Guild\", \"GMG\"), Ownable {\n    function mint(address _to, uint256 _amount) public onlyOwner {\n        _mint(_to, _amount);\n        _moveDelegates(address(0), _delegates[_to], _amount);\n    }\n\n    mapping(address => address) internal _delegates;\n\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint256 votes;\n    }\n\n    mapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\n    mapping(address => uint32) public numCheckpoints;\n    bytes32 public constant DOMAIN_TYPEHASH =\n        keccak256(\n            \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\"\n        );\n    bytes32 public constant DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n    mapping(address => uint256) public nonces;\n\n    event DelegateChanged(\n        address indexed delegator,\n        address indexed fromDelegate,\n        address indexed toDelegate\n    );\n\n    event DelegateVotesChanged(\n        address indexed delegate,\n        uint256 previousBalance,\n        uint256 newBalance\n    );\n\n    function delegates(address delegator) external view returns (address) {\n        return _delegates[delegator];\n    }\n\n    function delegate(address delegatee) external {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        bytes32 domainSeparator = keccak256(\n            abi.encode(\n                DOMAIN_TYPEHASH,\n                keccak256(bytes(name())),\n                getChainId(),\n                address(this)\n            )\n        );\n\n        bytes32 structHash = keccak256(\n            abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)\n        );\n\n        bytes32 digest = keccak256(\n            abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)\n        );\n\n        address signatory = ecrecover(digest, v, r, s);\n        require(\n            signatory != address(0),\n            \"TOKEN::delegateBySig: invalid signature\"\n        );\n        require(\n            nonce == nonces[signatory]++,\n            \"TOKEN::delegateBySig: invalid nonce\"\n        );\n        require(now <= expiry, \"TOKEN::delegateBySig: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    function getCurrentVotes(address account) external view returns (uint256) {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return\n            nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    function getPriorVotes(address account, uint256 blockNumber)\n        external\n        view\n        returns (uint256)\n    {\n        require(\n            blockNumber < block.number,\n            \"TOKEN::getPriorVotes: not yet determined\"\n        );\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    function _delegate(address delegator, address delegatee) internal {\n        address currentDelegate = _delegates[delegator];\n        uint256 delegatorBalance = balanceOf(delegator); // balance of underlying TOKENs (not scaled);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveDelegates(\n        address srcRep,\n        address dstRep,\n        uint256 amount\n    ) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                // decrease old representative\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint256 srcRepOld = srcRepNum > 0\n                    ? checkpoints[srcRep][srcRepNum - 1].votes\n                    : 0;\n                uint256 srcRepNew = srcRepOld.sub(amount);\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                // increase new representative\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint256 dstRepOld = dstRepNum > 0\n                    ? checkpoints[dstRep][dstRepNum - 1].votes\n                    : 0;\n                uint256 dstRepNew = dstRepOld.add(amount);\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        address delegatee,\n        uint32 nCheckpoints,\n        uint256 oldVotes,\n        uint256 newVotes\n    ) internal {\n        uint32 blockNumber = safe32(\n            block.number,\n            \"TOKEN::_writeCheckpoint: block number exceeds 32 bits\"\n        );\n\n        if (\n            nCheckpoints > 0 &&\n            checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber\n        ) {\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n        } else {\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(\n                blockNumber,\n                newVotes\n            );\n            numCheckpoints[delegatee] = nCheckpoints + 1;\n        }\n\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    function safe32(uint256 n, string memory errorMessage)\n        internal\n        pure\n        returns (uint32)\n    {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function getChainId() internal pure returns (uint256) {\n        uint256 chainId;\n        assembly {\n            chainId := chainid()\n        }\n        return chainId;\n    }\n}\n",
  "sourceMap": "231:6544:8:-:0;;;;;;;;;;;;;1956:145:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1956:145:3;;;2038:5;2030;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2053:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2080:9:3;:14;;-1:-1:-1;;2080:14:3;2092:2;2080:14;;;-1:-1:-1;2080:9:3;902:12:1;:10;:12::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:1;;-1:-1:-1;;;;;924:18:1;;;;;;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:1;-1:-1:-1;;957:43:1;;-1:-1:-1;;957:43:1;848:159;231:6544:8;;598:104:0;685:10;598:104;:::o;231:6544:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;231:6544:8;;;-1:-1:-1;231:6544:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/GMGToken.sol",
  "type": "contract"
}